// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BraveChallengeDB.proto

package protocol;

public final class BraveChallengeDB {
  private BraveChallengeDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DB_ChallengeProgressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_ChallengeProgress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 关卡进度(只能依次挑战)
     * </pre>
     *
     * <code>int32 progress = 1;</code>
     */
    int getProgress();

    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */
    int getPetsRemainHpCount();
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */
    boolean containsPetsRemainHp(
        java.lang.String key);
    /**
     * Use {@link #getPetsRemainHpMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
    getPetsRemainHp();
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */
    java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
    getPetsRemainHpMap();
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    protocol.Battle.BattleRemainPet getPetsRemainHpOrDefault(
        java.lang.String key,
        protocol.Battle.BattleRemainPet defaultValue);
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    protocol.Battle.BattleRemainPet getPetsRemainHpOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */
    int getBossRemainHpCount();
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */
    boolean containsBossRemainHp(
        java.lang.String key);
    /**
     * Use {@link #getBossRemainHpMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
    getBossRemainHp();
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */
    java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
    getBossRemainHpMap();
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    protocol.Battle.BattleRemainPet getBossRemainHpOrDefault(
        java.lang.String key,
        protocol.Battle.BattleRemainPet defaultValue);
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    protocol.Battle.BattleRemainPet getBossRemainHpOrThrow(
        java.lang.String key);

    /**
     * <pre>
     *当天重生次数
     * </pre>
     *
     * <code>int32 todayRebornTimes = 4;</code>
     */
    int getTodayRebornTimes();

    /**
     * <pre>
     *失败次数(每日结算时更新)
     * </pre>
     *
     * <code>int32 failureTimes = 5;</code>
     */
    int getFailureTimes();

    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    boolean hasMonsterExProperty();
    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    protocol.Battle.ExtendProperty getMonsterExProperty();
    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    protocol.Battle.ExtendPropertyOrBuilder getMonsterExPropertyOrBuilder();

    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */
    int getPointCfgCount();
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */
    boolean containsPointCfg(
        int key);
    /**
     * Use {@link #getPointCfgMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint>
    getPointCfg();
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */
    java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint>
    getPointCfgMap();
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    protocol.BraveChallenge.BravePoint getPointCfgOrDefault(
        int key,
        protocol.BraveChallenge.BravePoint defaultValue);
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    protocol.BraveChallenge.BravePoint getPointCfgOrThrow(
        int key);

    /**
     * <pre>
     *当日是否挑战过(挑战过才会记录战败次数)
     * </pre>
     *
     * <code>bool todayChallenge = 8;</code>
     */
    boolean getTodayChallenge();

    /**
     * <pre>
     *首次战败
     * </pre>
     *
     * <code>bool giftFirstBlood = 9;</code>
     */
    boolean getGiftFirstBlood();

    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */
    int getMonsterInfoCount();
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */
    boolean containsMonsterInfo(
        int key);
    /**
     * Use {@link #getMonsterInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
    getMonsterInfo();
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */
    java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
    getMonsterInfoMap();
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    protocol.Battle.PlayerBaseInfo getMonsterInfoOrDefault(
        int key,
        protocol.Battle.PlayerBaseInfo defaultValue);
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    protocol.Battle.PlayerBaseInfo getMonsterInfoOrThrow(
        int key);

    /**
     * <pre>
     *是否新游戏
     * </pre>
     *
     * <code>bool newGame = 11;</code>
     */
    boolean getNewGame();
  }
  /**
   * Protobuf type {@code DB_ChallengeProgress}
   */
  public  static final class DB_ChallengeProgress extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_ChallengeProgress)
      DB_ChallengeProgressOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_ChallengeProgress.newBuilder() to construct.
    private DB_ChallengeProgress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_ChallengeProgress() {
      progress_ = 0;
      todayRebornTimes_ = 0;
      failureTimes_ = 0;
      todayChallenge_ = false;
      giftFirstBlood_ = false;
      newGame_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_ChallengeProgress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              progress_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                petsRemainHp_ = com.google.protobuf.MapField.newMapField(
                    PetsRemainHpDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, protocol.Battle.BattleRemainPet>
              petsRemainHp__ = input.readMessage(
                  PetsRemainHpDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              petsRemainHp_.getMutableMap().put(
                  petsRemainHp__.getKey(), petsRemainHp__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                bossRemainHp_ = com.google.protobuf.MapField.newMapField(
                    BossRemainHpDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, protocol.Battle.BattleRemainPet>
              bossRemainHp__ = input.readMessage(
                  BossRemainHpDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bossRemainHp_.getMutableMap().put(
                  bossRemainHp__.getKey(), bossRemainHp__.getValue());
              break;
            }
            case 32: {

              todayRebornTimes_ = input.readInt32();
              break;
            }
            case 40: {

              failureTimes_ = input.readInt32();
              break;
            }
            case 50: {
              protocol.Battle.ExtendProperty.Builder subBuilder = null;
              if (monsterExProperty_ != null) {
                subBuilder = monsterExProperty_.toBuilder();
              }
              monsterExProperty_ = input.readMessage(protocol.Battle.ExtendProperty.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(monsterExProperty_);
                monsterExProperty_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                pointCfg_ = com.google.protobuf.MapField.newMapField(
                    PointCfgDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.BraveChallenge.BravePoint>
              pointCfg__ = input.readMessage(
                  PointCfgDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              pointCfg_.getMutableMap().put(
                  pointCfg__.getKey(), pointCfg__.getValue());
              break;
            }
            case 64: {

              todayChallenge_ = input.readBool();
              break;
            }
            case 72: {

              giftFirstBlood_ = input.readBool();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                monsterInfo_ = com.google.protobuf.MapField.newMapField(
                    MonsterInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
              monsterInfo__ = input.readMessage(
                  MonsterInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              monsterInfo_.getMutableMap().put(
                  monsterInfo__.getKey(), monsterInfo__.getValue());
              break;
            }
            case 88: {

              newGame_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetPetsRemainHp();
        case 3:
          return internalGetBossRemainHp();
        case 7:
          return internalGetPointCfg();
        case 10:
          return internalGetMonsterInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.BraveChallengeDB.DB_ChallengeProgress.class, protocol.BraveChallengeDB.DB_ChallengeProgress.Builder.class);
    }

    private int bitField0_;
    public static final int PROGRESS_FIELD_NUMBER = 1;
    private int progress_;
    /**
     * <pre>
     * 关卡进度(只能依次挑战)
     * </pre>
     *
     * <code>int32 progress = 1;</code>
     */
    public int getProgress() {
      return progress_;
    }

    public static final int PETSREMAINHP_FIELD_NUMBER = 2;
    private static final class PetsRemainHpDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protocol.Battle.BattleRemainPet> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protocol.Battle.BattleRemainPet>newDefaultInstance(
                  protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_PetsRemainHpEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Battle.BattleRemainPet.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protocol.Battle.BattleRemainPet> petsRemainHp_;
    private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
    internalGetPetsRemainHp() {
      if (petsRemainHp_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PetsRemainHpDefaultEntryHolder.defaultEntry);
      }
      return petsRemainHp_;
    }

    public int getPetsRemainHpCount() {
      return internalGetPetsRemainHp().getMap().size();
    }
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    public boolean containsPetsRemainHp(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetPetsRemainHp().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPetsRemainHpMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getPetsRemainHp() {
      return getPetsRemainHpMap();
    }
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getPetsRemainHpMap() {
      return internalGetPetsRemainHp().getMap();
    }
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    public protocol.Battle.BattleRemainPet getPetsRemainHpOrDefault(
        java.lang.String key,
        protocol.Battle.BattleRemainPet defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
          internalGetPetsRemainHp().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 备战宠物剩余血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
     */

    public protocol.Battle.BattleRemainPet getPetsRemainHpOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
          internalGetPetsRemainHp().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BOSSREMAINHP_FIELD_NUMBER = 3;
    private static final class BossRemainHpDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protocol.Battle.BattleRemainPet> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protocol.Battle.BattleRemainPet>newDefaultInstance(
                  protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_BossRemainHpEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Battle.BattleRemainPet.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protocol.Battle.BattleRemainPet> bossRemainHp_;
    private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
    internalGetBossRemainHp() {
      if (bossRemainHp_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BossRemainHpDefaultEntryHolder.defaultEntry);
      }
      return bossRemainHp_;
    }

    public int getBossRemainHpCount() {
      return internalGetBossRemainHp().getMap().size();
    }
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    public boolean containsBossRemainHp(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetBossRemainHp().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBossRemainHpMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getBossRemainHp() {
      return getBossRemainHpMap();
    }
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getBossRemainHpMap() {
      return internalGetBossRemainHp().getMap();
    }
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    public protocol.Battle.BattleRemainPet getBossRemainHpOrDefault(
        java.lang.String key,
        protocol.Battle.BattleRemainPet defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
          internalGetBossRemainHp().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 当前关卡剩余怪物血量
     * </pre>
     *
     * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
     */

    public protocol.Battle.BattleRemainPet getBossRemainHpOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
          internalGetBossRemainHp().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TODAYREBORNTIMES_FIELD_NUMBER = 4;
    private int todayRebornTimes_;
    /**
     * <pre>
     *当天重生次数
     * </pre>
     *
     * <code>int32 todayRebornTimes = 4;</code>
     */
    public int getTodayRebornTimes() {
      return todayRebornTimes_;
    }

    public static final int FAILURETIMES_FIELD_NUMBER = 5;
    private int failureTimes_;
    /**
     * <pre>
     *失败次数(每日结算时更新)
     * </pre>
     *
     * <code>int32 failureTimes = 5;</code>
     */
    public int getFailureTimes() {
      return failureTimes_;
    }

    public static final int MONSTEREXPROPERTY_FIELD_NUMBER = 6;
    private protocol.Battle.ExtendProperty monsterExProperty_;
    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    public boolean hasMonsterExProperty() {
      return monsterExProperty_ != null;
    }
    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    public protocol.Battle.ExtendProperty getMonsterExProperty() {
      return monsterExProperty_ == null ? protocol.Battle.ExtendProperty.getDefaultInstance() : monsterExProperty_;
    }
    /**
     * <pre>
     *怪物品质加强
     * </pre>
     *
     * <code>.ExtendProperty monsterExProperty = 6;</code>
     */
    public protocol.Battle.ExtendPropertyOrBuilder getMonsterExPropertyOrBuilder() {
      return getMonsterExProperty();
    }

    public static final int POINTCFG_FIELD_NUMBER = 7;
    private static final class PointCfgDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.BraveChallenge.BravePoint> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.BraveChallenge.BravePoint>newDefaultInstance(
                  protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_PointCfgEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.BraveChallenge.BravePoint.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.BraveChallenge.BravePoint> pointCfg_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.BraveChallenge.BravePoint>
    internalGetPointCfg() {
      if (pointCfg_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PointCfgDefaultEntryHolder.defaultEntry);
      }
      return pointCfg_;
    }

    public int getPointCfgCount() {
      return internalGetPointCfg().getMap().size();
    }
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    public boolean containsPointCfg(
        int key) {
      
      return internalGetPointCfg().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPointCfgMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> getPointCfg() {
      return getPointCfgMap();
    }
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> getPointCfgMap() {
      return internalGetPointCfg().getMap();
    }
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    public protocol.BraveChallenge.BravePoint getPointCfgOrDefault(
        int key,
        protocol.BraveChallenge.BravePoint defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> map =
          internalGetPointCfg().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *敌方阵容配置
     * </pre>
     *
     * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
     */

    public protocol.BraveChallenge.BravePoint getPointCfgOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> map =
          internalGetPointCfg().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TODAYCHALLENGE_FIELD_NUMBER = 8;
    private boolean todayChallenge_;
    /**
     * <pre>
     *当日是否挑战过(挑战过才会记录战败次数)
     * </pre>
     *
     * <code>bool todayChallenge = 8;</code>
     */
    public boolean getTodayChallenge() {
      return todayChallenge_;
    }

    public static final int GIFTFIRSTBLOOD_FIELD_NUMBER = 9;
    private boolean giftFirstBlood_;
    /**
     * <pre>
     *首次战败
     * </pre>
     *
     * <code>bool giftFirstBlood = 9;</code>
     */
    public boolean getGiftFirstBlood() {
      return giftFirstBlood_;
    }

    public static final int MONSTERINFO_FIELD_NUMBER = 10;
    private static final class MonsterInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.Battle.PlayerBaseInfo> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.Battle.PlayerBaseInfo>newDefaultInstance(
                  protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_MonsterInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Battle.PlayerBaseInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.Battle.PlayerBaseInfo> monsterInfo_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
    internalGetMonsterInfo() {
      if (monsterInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MonsterInfoDefaultEntryHolder.defaultEntry);
      }
      return monsterInfo_;
    }

    public int getMonsterInfoCount() {
      return internalGetMonsterInfo().getMap().size();
    }
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    public boolean containsMonsterInfo(
        int key) {
      
      return internalGetMonsterInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMonsterInfoMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> getMonsterInfo() {
      return getMonsterInfoMap();
    }
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> getMonsterInfoMap() {
      return internalGetMonsterInfo().getMap();
    }
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    public protocol.Battle.PlayerBaseInfo getMonsterInfoOrDefault(
        int key,
        protocol.Battle.PlayerBaseInfo defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> map =
          internalGetMonsterInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *敌方基本信息
     * </pre>
     *
     * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
     */

    public protocol.Battle.PlayerBaseInfo getMonsterInfoOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> map =
          internalGetMonsterInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NEWGAME_FIELD_NUMBER = 11;
    private boolean newGame_;
    /**
     * <pre>
     *是否新游戏
     * </pre>
     *
     * <code>bool newGame = 11;</code>
     */
    public boolean getNewGame() {
      return newGame_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (progress_ != 0) {
        output.writeInt32(1, progress_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPetsRemainHp(),
          PetsRemainHpDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetBossRemainHp(),
          BossRemainHpDefaultEntryHolder.defaultEntry,
          3);
      if (todayRebornTimes_ != 0) {
        output.writeInt32(4, todayRebornTimes_);
      }
      if (failureTimes_ != 0) {
        output.writeInt32(5, failureTimes_);
      }
      if (monsterExProperty_ != null) {
        output.writeMessage(6, getMonsterExProperty());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPointCfg(),
          PointCfgDefaultEntryHolder.defaultEntry,
          7);
      if (todayChallenge_ != false) {
        output.writeBool(8, todayChallenge_);
      }
      if (giftFirstBlood_ != false) {
        output.writeBool(9, giftFirstBlood_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetMonsterInfo(),
          MonsterInfoDefaultEntryHolder.defaultEntry,
          10);
      if (newGame_ != false) {
        output.writeBool(11, newGame_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (progress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, progress_);
      }
      for (java.util.Map.Entry<java.lang.String, protocol.Battle.BattleRemainPet> entry
           : internalGetPetsRemainHp().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protocol.Battle.BattleRemainPet>
        petsRemainHp__ = PetsRemainHpDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, petsRemainHp__);
      }
      for (java.util.Map.Entry<java.lang.String, protocol.Battle.BattleRemainPet> entry
           : internalGetBossRemainHp().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protocol.Battle.BattleRemainPet>
        bossRemainHp__ = BossRemainHpDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, bossRemainHp__);
      }
      if (todayRebornTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, todayRebornTimes_);
      }
      if (failureTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, failureTimes_);
      }
      if (monsterExProperty_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getMonsterExProperty());
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.BraveChallenge.BravePoint> entry
           : internalGetPointCfg().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.BraveChallenge.BravePoint>
        pointCfg__ = PointCfgDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, pointCfg__);
      }
      if (todayChallenge_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, todayChallenge_);
      }
      if (giftFirstBlood_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, giftFirstBlood_);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.Battle.PlayerBaseInfo> entry
           : internalGetMonsterInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
        monsterInfo__ = MonsterInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, monsterInfo__);
      }
      if (newGame_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, newGame_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.BraveChallengeDB.DB_ChallengeProgress)) {
        return super.equals(obj);
      }
      protocol.BraveChallengeDB.DB_ChallengeProgress other = (protocol.BraveChallengeDB.DB_ChallengeProgress) obj;

      boolean result = true;
      result = result && (getProgress()
          == other.getProgress());
      result = result && internalGetPetsRemainHp().equals(
          other.internalGetPetsRemainHp());
      result = result && internalGetBossRemainHp().equals(
          other.internalGetBossRemainHp());
      result = result && (getTodayRebornTimes()
          == other.getTodayRebornTimes());
      result = result && (getFailureTimes()
          == other.getFailureTimes());
      result = result && (hasMonsterExProperty() == other.hasMonsterExProperty());
      if (hasMonsterExProperty()) {
        result = result && getMonsterExProperty()
            .equals(other.getMonsterExProperty());
      }
      result = result && internalGetPointCfg().equals(
          other.internalGetPointCfg());
      result = result && (getTodayChallenge()
          == other.getTodayChallenge());
      result = result && (getGiftFirstBlood()
          == other.getGiftFirstBlood());
      result = result && internalGetMonsterInfo().equals(
          other.internalGetMonsterInfo());
      result = result && (getNewGame()
          == other.getNewGame());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getProgress();
      if (!internalGetPetsRemainHp().getMap().isEmpty()) {
        hash = (37 * hash) + PETSREMAINHP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPetsRemainHp().hashCode();
      }
      if (!internalGetBossRemainHp().getMap().isEmpty()) {
        hash = (37 * hash) + BOSSREMAINHP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBossRemainHp().hashCode();
      }
      hash = (37 * hash) + TODAYREBORNTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getTodayRebornTimes();
      hash = (37 * hash) + FAILURETIMES_FIELD_NUMBER;
      hash = (53 * hash) + getFailureTimes();
      if (hasMonsterExProperty()) {
        hash = (37 * hash) + MONSTEREXPROPERTY_FIELD_NUMBER;
        hash = (53 * hash) + getMonsterExProperty().hashCode();
      }
      if (!internalGetPointCfg().getMap().isEmpty()) {
        hash = (37 * hash) + POINTCFG_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPointCfg().hashCode();
      }
      hash = (37 * hash) + TODAYCHALLENGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTodayChallenge());
      hash = (37 * hash) + GIFTFIRSTBLOOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getGiftFirstBlood());
      if (!internalGetMonsterInfo().getMap().isEmpty()) {
        hash = (37 * hash) + MONSTERINFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMonsterInfo().hashCode();
      }
      hash = (37 * hash) + NEWGAME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNewGame());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BraveChallengeDB.DB_ChallengeProgress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.BraveChallengeDB.DB_ChallengeProgress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_ChallengeProgress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_ChallengeProgress)
        protocol.BraveChallengeDB.DB_ChallengeProgressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetPetsRemainHp();
          case 3:
            return internalGetBossRemainHp();
          case 7:
            return internalGetPointCfg();
          case 10:
            return internalGetMonsterInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutablePetsRemainHp();
          case 3:
            return internalGetMutableBossRemainHp();
          case 7:
            return internalGetMutablePointCfg();
          case 10:
            return internalGetMutableMonsterInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.BraveChallengeDB.DB_ChallengeProgress.class, protocol.BraveChallengeDB.DB_ChallengeProgress.Builder.class);
      }

      // Construct using protocol.BraveChallengeDB.DB_ChallengeProgress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        progress_ = 0;

        internalGetMutablePetsRemainHp().clear();
        internalGetMutableBossRemainHp().clear();
        todayRebornTimes_ = 0;

        failureTimes_ = 0;

        if (monsterExPropertyBuilder_ == null) {
          monsterExProperty_ = null;
        } else {
          monsterExProperty_ = null;
          monsterExPropertyBuilder_ = null;
        }
        internalGetMutablePointCfg().clear();
        todayChallenge_ = false;

        giftFirstBlood_ = false;

        internalGetMutableMonsterInfo().clear();
        newGame_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.BraveChallengeDB.internal_static_DB_ChallengeProgress_descriptor;
      }

      public protocol.BraveChallengeDB.DB_ChallengeProgress getDefaultInstanceForType() {
        return protocol.BraveChallengeDB.DB_ChallengeProgress.getDefaultInstance();
      }

      public protocol.BraveChallengeDB.DB_ChallengeProgress build() {
        protocol.BraveChallengeDB.DB_ChallengeProgress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.BraveChallengeDB.DB_ChallengeProgress buildPartial() {
        protocol.BraveChallengeDB.DB_ChallengeProgress result = new protocol.BraveChallengeDB.DB_ChallengeProgress(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.progress_ = progress_;
        result.petsRemainHp_ = internalGetPetsRemainHp();
        result.petsRemainHp_.makeImmutable();
        result.bossRemainHp_ = internalGetBossRemainHp();
        result.bossRemainHp_.makeImmutable();
        result.todayRebornTimes_ = todayRebornTimes_;
        result.failureTimes_ = failureTimes_;
        if (monsterExPropertyBuilder_ == null) {
          result.monsterExProperty_ = monsterExProperty_;
        } else {
          result.monsterExProperty_ = monsterExPropertyBuilder_.build();
        }
        result.pointCfg_ = internalGetPointCfg();
        result.pointCfg_.makeImmutable();
        result.todayChallenge_ = todayChallenge_;
        result.giftFirstBlood_ = giftFirstBlood_;
        result.monsterInfo_ = internalGetMonsterInfo();
        result.monsterInfo_.makeImmutable();
        result.newGame_ = newGame_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.BraveChallengeDB.DB_ChallengeProgress) {
          return mergeFrom((protocol.BraveChallengeDB.DB_ChallengeProgress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.BraveChallengeDB.DB_ChallengeProgress other) {
        if (other == protocol.BraveChallengeDB.DB_ChallengeProgress.getDefaultInstance()) return this;
        if (other.getProgress() != 0) {
          setProgress(other.getProgress());
        }
        internalGetMutablePetsRemainHp().mergeFrom(
            other.internalGetPetsRemainHp());
        internalGetMutableBossRemainHp().mergeFrom(
            other.internalGetBossRemainHp());
        if (other.getTodayRebornTimes() != 0) {
          setTodayRebornTimes(other.getTodayRebornTimes());
        }
        if (other.getFailureTimes() != 0) {
          setFailureTimes(other.getFailureTimes());
        }
        if (other.hasMonsterExProperty()) {
          mergeMonsterExProperty(other.getMonsterExProperty());
        }
        internalGetMutablePointCfg().mergeFrom(
            other.internalGetPointCfg());
        if (other.getTodayChallenge() != false) {
          setTodayChallenge(other.getTodayChallenge());
        }
        if (other.getGiftFirstBlood() != false) {
          setGiftFirstBlood(other.getGiftFirstBlood());
        }
        internalGetMutableMonsterInfo().mergeFrom(
            other.internalGetMonsterInfo());
        if (other.getNewGame() != false) {
          setNewGame(other.getNewGame());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.BraveChallengeDB.DB_ChallengeProgress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.BraveChallengeDB.DB_ChallengeProgress) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int progress_ ;
      /**
       * <pre>
       * 关卡进度(只能依次挑战)
       * </pre>
       *
       * <code>int32 progress = 1;</code>
       */
      public int getProgress() {
        return progress_;
      }
      /**
       * <pre>
       * 关卡进度(只能依次挑战)
       * </pre>
       *
       * <code>int32 progress = 1;</code>
       */
      public Builder setProgress(int value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 关卡进度(只能依次挑战)
       * </pre>
       *
       * <code>int32 progress = 1;</code>
       */
      public Builder clearProgress() {
        
        progress_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, protocol.Battle.BattleRemainPet> petsRemainHp_;
      private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
      internalGetPetsRemainHp() {
        if (petsRemainHp_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PetsRemainHpDefaultEntryHolder.defaultEntry);
        }
        return petsRemainHp_;
      }
      private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
      internalGetMutablePetsRemainHp() {
        onChanged();;
        if (petsRemainHp_ == null) {
          petsRemainHp_ = com.google.protobuf.MapField.newMapField(
              PetsRemainHpDefaultEntryHolder.defaultEntry);
        }
        if (!petsRemainHp_.isMutable()) {
          petsRemainHp_ = petsRemainHp_.copy();
        }
        return petsRemainHp_;
      }

      public int getPetsRemainHpCount() {
        return internalGetPetsRemainHp().getMap().size();
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public boolean containsPetsRemainHp(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetPetsRemainHp().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPetsRemainHpMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getPetsRemainHp() {
        return getPetsRemainHpMap();
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getPetsRemainHpMap() {
        return internalGetPetsRemainHp().getMap();
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public protocol.Battle.BattleRemainPet getPetsRemainHpOrDefault(
          java.lang.String key,
          protocol.Battle.BattleRemainPet defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
            internalGetPetsRemainHp().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public protocol.Battle.BattleRemainPet getPetsRemainHpOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
            internalGetPetsRemainHp().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPetsRemainHp() {
        internalGetMutablePetsRemainHp().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public Builder removePetsRemainHp(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePetsRemainHp().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
      getMutablePetsRemainHp() {
        return internalGetMutablePetsRemainHp().getMutableMap();
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */
      public Builder putPetsRemainHp(
          java.lang.String key,
          protocol.Battle.BattleRemainPet value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePetsRemainHp().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 备战宠物剩余血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; petsRemainHp = 2;</code>
       */

      public Builder putAllPetsRemainHp(
          java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> values) {
        internalGetMutablePetsRemainHp().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, protocol.Battle.BattleRemainPet> bossRemainHp_;
      private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
      internalGetBossRemainHp() {
        if (bossRemainHp_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BossRemainHpDefaultEntryHolder.defaultEntry);
        }
        return bossRemainHp_;
      }
      private com.google.protobuf.MapField<java.lang.String, protocol.Battle.BattleRemainPet>
      internalGetMutableBossRemainHp() {
        onChanged();;
        if (bossRemainHp_ == null) {
          bossRemainHp_ = com.google.protobuf.MapField.newMapField(
              BossRemainHpDefaultEntryHolder.defaultEntry);
        }
        if (!bossRemainHp_.isMutable()) {
          bossRemainHp_ = bossRemainHp_.copy();
        }
        return bossRemainHp_;
      }

      public int getBossRemainHpCount() {
        return internalGetBossRemainHp().getMap().size();
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public boolean containsBossRemainHp(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetBossRemainHp().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBossRemainHpMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getBossRemainHp() {
        return getBossRemainHpMap();
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> getBossRemainHpMap() {
        return internalGetBossRemainHp().getMap();
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public protocol.Battle.BattleRemainPet getBossRemainHpOrDefault(
          java.lang.String key,
          protocol.Battle.BattleRemainPet defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
            internalGetBossRemainHp().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public protocol.Battle.BattleRemainPet getBossRemainHpOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> map =
            internalGetBossRemainHp().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBossRemainHp() {
        internalGetMutableBossRemainHp().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public Builder removeBossRemainHp(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBossRemainHp().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet>
      getMutableBossRemainHp() {
        return internalGetMutableBossRemainHp().getMutableMap();
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */
      public Builder putBossRemainHp(
          java.lang.String key,
          protocol.Battle.BattleRemainPet value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBossRemainHp().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 当前关卡剩余怪物血量
       * </pre>
       *
       * <code>map&lt;string, .BattleRemainPet&gt; bossRemainHp = 3;</code>
       */

      public Builder putAllBossRemainHp(
          java.util.Map<java.lang.String, protocol.Battle.BattleRemainPet> values) {
        internalGetMutableBossRemainHp().getMutableMap()
            .putAll(values);
        return this;
      }

      private int todayRebornTimes_ ;
      /**
       * <pre>
       *当天重生次数
       * </pre>
       *
       * <code>int32 todayRebornTimes = 4;</code>
       */
      public int getTodayRebornTimes() {
        return todayRebornTimes_;
      }
      /**
       * <pre>
       *当天重生次数
       * </pre>
       *
       * <code>int32 todayRebornTimes = 4;</code>
       */
      public Builder setTodayRebornTimes(int value) {
        
        todayRebornTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当天重生次数
       * </pre>
       *
       * <code>int32 todayRebornTimes = 4;</code>
       */
      public Builder clearTodayRebornTimes() {
        
        todayRebornTimes_ = 0;
        onChanged();
        return this;
      }

      private int failureTimes_ ;
      /**
       * <pre>
       *失败次数(每日结算时更新)
       * </pre>
       *
       * <code>int32 failureTimes = 5;</code>
       */
      public int getFailureTimes() {
        return failureTimes_;
      }
      /**
       * <pre>
       *失败次数(每日结算时更新)
       * </pre>
       *
       * <code>int32 failureTimes = 5;</code>
       */
      public Builder setFailureTimes(int value) {
        
        failureTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *失败次数(每日结算时更新)
       * </pre>
       *
       * <code>int32 failureTimes = 5;</code>
       */
      public Builder clearFailureTimes() {
        
        failureTimes_ = 0;
        onChanged();
        return this;
      }

      private protocol.Battle.ExtendProperty monsterExProperty_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder> monsterExPropertyBuilder_;
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public boolean hasMonsterExProperty() {
        return monsterExPropertyBuilder_ != null || monsterExProperty_ != null;
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public protocol.Battle.ExtendProperty getMonsterExProperty() {
        if (monsterExPropertyBuilder_ == null) {
          return monsterExProperty_ == null ? protocol.Battle.ExtendProperty.getDefaultInstance() : monsterExProperty_;
        } else {
          return monsterExPropertyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public Builder setMonsterExProperty(protocol.Battle.ExtendProperty value) {
        if (monsterExPropertyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          monsterExProperty_ = value;
          onChanged();
        } else {
          monsterExPropertyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public Builder setMonsterExProperty(
          protocol.Battle.ExtendProperty.Builder builderForValue) {
        if (monsterExPropertyBuilder_ == null) {
          monsterExProperty_ = builderForValue.build();
          onChanged();
        } else {
          monsterExPropertyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public Builder mergeMonsterExProperty(protocol.Battle.ExtendProperty value) {
        if (monsterExPropertyBuilder_ == null) {
          if (monsterExProperty_ != null) {
            monsterExProperty_ =
              protocol.Battle.ExtendProperty.newBuilder(monsterExProperty_).mergeFrom(value).buildPartial();
          } else {
            monsterExProperty_ = value;
          }
          onChanged();
        } else {
          monsterExPropertyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public Builder clearMonsterExProperty() {
        if (monsterExPropertyBuilder_ == null) {
          monsterExProperty_ = null;
          onChanged();
        } else {
          monsterExProperty_ = null;
          monsterExPropertyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public protocol.Battle.ExtendProperty.Builder getMonsterExPropertyBuilder() {
        
        onChanged();
        return getMonsterExPropertyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      public protocol.Battle.ExtendPropertyOrBuilder getMonsterExPropertyOrBuilder() {
        if (monsterExPropertyBuilder_ != null) {
          return monsterExPropertyBuilder_.getMessageOrBuilder();
        } else {
          return monsterExProperty_ == null ?
              protocol.Battle.ExtendProperty.getDefaultInstance() : monsterExProperty_;
        }
      }
      /**
       * <pre>
       *怪物品质加强
       * </pre>
       *
       * <code>.ExtendProperty monsterExProperty = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder> 
          getMonsterExPropertyFieldBuilder() {
        if (monsterExPropertyBuilder_ == null) {
          monsterExPropertyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder>(
                  getMonsterExProperty(),
                  getParentForChildren(),
                  isClean());
          monsterExProperty_ = null;
        }
        return monsterExPropertyBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.BraveChallenge.BravePoint> pointCfg_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.BraveChallenge.BravePoint>
      internalGetPointCfg() {
        if (pointCfg_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PointCfgDefaultEntryHolder.defaultEntry);
        }
        return pointCfg_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.BraveChallenge.BravePoint>
      internalGetMutablePointCfg() {
        onChanged();;
        if (pointCfg_ == null) {
          pointCfg_ = com.google.protobuf.MapField.newMapField(
              PointCfgDefaultEntryHolder.defaultEntry);
        }
        if (!pointCfg_.isMutable()) {
          pointCfg_ = pointCfg_.copy();
        }
        return pointCfg_;
      }

      public int getPointCfgCount() {
        return internalGetPointCfg().getMap().size();
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public boolean containsPointCfg(
          int key) {
        
        return internalGetPointCfg().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPointCfgMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> getPointCfg() {
        return getPointCfgMap();
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> getPointCfgMap() {
        return internalGetPointCfg().getMap();
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public protocol.BraveChallenge.BravePoint getPointCfgOrDefault(
          int key,
          protocol.BraveChallenge.BravePoint defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> map =
            internalGetPointCfg().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public protocol.BraveChallenge.BravePoint getPointCfgOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> map =
            internalGetPointCfg().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPointCfg() {
        internalGetMutablePointCfg().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public Builder removePointCfg(
          int key) {
        
        internalGetMutablePointCfg().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint>
      getMutablePointCfg() {
        return internalGetMutablePointCfg().getMutableMap();
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */
      public Builder putPointCfg(
          int key,
          protocol.BraveChallenge.BravePoint value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePointCfg().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *敌方阵容配置
       * </pre>
       *
       * <code>map&lt;int32, .BravePoint&gt; pointCfg = 7;</code>
       */

      public Builder putAllPointCfg(
          java.util.Map<java.lang.Integer, protocol.BraveChallenge.BravePoint> values) {
        internalGetMutablePointCfg().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean todayChallenge_ ;
      /**
       * <pre>
       *当日是否挑战过(挑战过才会记录战败次数)
       * </pre>
       *
       * <code>bool todayChallenge = 8;</code>
       */
      public boolean getTodayChallenge() {
        return todayChallenge_;
      }
      /**
       * <pre>
       *当日是否挑战过(挑战过才会记录战败次数)
       * </pre>
       *
       * <code>bool todayChallenge = 8;</code>
       */
      public Builder setTodayChallenge(boolean value) {
        
        todayChallenge_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当日是否挑战过(挑战过才会记录战败次数)
       * </pre>
       *
       * <code>bool todayChallenge = 8;</code>
       */
      public Builder clearTodayChallenge() {
        
        todayChallenge_ = false;
        onChanged();
        return this;
      }

      private boolean giftFirstBlood_ ;
      /**
       * <pre>
       *首次战败
       * </pre>
       *
       * <code>bool giftFirstBlood = 9;</code>
       */
      public boolean getGiftFirstBlood() {
        return giftFirstBlood_;
      }
      /**
       * <pre>
       *首次战败
       * </pre>
       *
       * <code>bool giftFirstBlood = 9;</code>
       */
      public Builder setGiftFirstBlood(boolean value) {
        
        giftFirstBlood_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *首次战败
       * </pre>
       *
       * <code>bool giftFirstBlood = 9;</code>
       */
      public Builder clearGiftFirstBlood() {
        
        giftFirstBlood_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.Battle.PlayerBaseInfo> monsterInfo_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
      internalGetMonsterInfo() {
        if (monsterInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MonsterInfoDefaultEntryHolder.defaultEntry);
        }
        return monsterInfo_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
      internalGetMutableMonsterInfo() {
        onChanged();;
        if (monsterInfo_ == null) {
          monsterInfo_ = com.google.protobuf.MapField.newMapField(
              MonsterInfoDefaultEntryHolder.defaultEntry);
        }
        if (!monsterInfo_.isMutable()) {
          monsterInfo_ = monsterInfo_.copy();
        }
        return monsterInfo_;
      }

      public int getMonsterInfoCount() {
        return internalGetMonsterInfo().getMap().size();
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public boolean containsMonsterInfo(
          int key) {
        
        return internalGetMonsterInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMonsterInfoMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> getMonsterInfo() {
        return getMonsterInfoMap();
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> getMonsterInfoMap() {
        return internalGetMonsterInfo().getMap();
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public protocol.Battle.PlayerBaseInfo getMonsterInfoOrDefault(
          int key,
          protocol.Battle.PlayerBaseInfo defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> map =
            internalGetMonsterInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public protocol.Battle.PlayerBaseInfo getMonsterInfoOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> map =
            internalGetMonsterInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMonsterInfo() {
        internalGetMutableMonsterInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public Builder removeMonsterInfo(
          int key) {
        
        internalGetMutableMonsterInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo>
      getMutableMonsterInfo() {
        return internalGetMutableMonsterInfo().getMutableMap();
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */
      public Builder putMonsterInfo(
          int key,
          protocol.Battle.PlayerBaseInfo value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMonsterInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *敌方基本信息
       * </pre>
       *
       * <code>map&lt;int32, .PlayerBaseInfo&gt; monsterInfo = 10;</code>
       */

      public Builder putAllMonsterInfo(
          java.util.Map<java.lang.Integer, protocol.Battle.PlayerBaseInfo> values) {
        internalGetMutableMonsterInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean newGame_ ;
      /**
       * <pre>
       *是否新游戏
       * </pre>
       *
       * <code>bool newGame = 11;</code>
       */
      public boolean getNewGame() {
        return newGame_;
      }
      /**
       * <pre>
       *是否新游戏
       * </pre>
       *
       * <code>bool newGame = 11;</code>
       */
      public Builder setNewGame(boolean value) {
        
        newGame_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *是否新游戏
       * </pre>
       *
       * <code>bool newGame = 11;</code>
       */
      public Builder clearNewGame() {
        
        newGame_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_ChallengeProgress)
    }

    // @@protoc_insertion_point(class_scope:DB_ChallengeProgress)
    private static final protocol.BraveChallengeDB.DB_ChallengeProgress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.BraveChallengeDB.DB_ChallengeProgress();
    }

    public static protocol.BraveChallengeDB.DB_ChallengeProgress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_ChallengeProgress>
        PARSER = new com.google.protobuf.AbstractParser<DB_ChallengeProgress>() {
      public DB_ChallengeProgress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_ChallengeProgress(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_ChallengeProgress> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_ChallengeProgress> getParserForType() {
      return PARSER;
    }

    public protocol.BraveChallengeDB.DB_ChallengeProgress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ChallengeProgress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ChallengeProgress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ChallengeProgress_PetsRemainHpEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ChallengeProgress_PetsRemainHpEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ChallengeProgress_BossRemainHpEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ChallengeProgress_BossRemainHpEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ChallengeProgress_PointCfgEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ChallengeProgress_PointCfgEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ChallengeProgress_MonsterInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ChallengeProgress_MonsterInfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026BraveChallengeDB.proto\032\014Battle.proto\032\024" +
      "BraveChallenge.proto\"\310\005\n\024DB_ChallengePro" +
      "gress\022\020\n\010progress\030\001 \001(\005\022=\n\014petsRemainHp\030" +
      "\002 \003(\0132\'.DB_ChallengeProgress.PetsRemainH" +
      "pEntry\022=\n\014bossRemainHp\030\003 \003(\0132\'.DB_Challe" +
      "ngeProgress.BossRemainHpEntry\022\030\n\020todayRe" +
      "bornTimes\030\004 \001(\005\022\024\n\014failureTimes\030\005 \001(\005\022*\n" +
      "\021monsterExProperty\030\006 \001(\0132\017.ExtendPropert" +
      "y\0225\n\010pointCfg\030\007 \003(\0132#.DB_ChallengeProgre" +
      "ss.PointCfgEntry\022\026\n\016todayChallenge\030\010 \001(\010",
      "\022\026\n\016giftFirstBlood\030\t \001(\010\022;\n\013monsterInfo\030" +
      "\n \003(\0132&.DB_ChallengeProgress.MonsterInfo" +
      "Entry\022\017\n\007newGame\030\013 \001(\010\032E\n\021PetsRemainHpEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.Battle" +
      "RemainPet:\0028\001\032E\n\021BossRemainHpEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.BattleRemainPet" +
      ":\0028\001\032<\n\rPointCfgEntry\022\013\n\003key\030\001 \001(\005\022\032\n\005va" +
      "lue\030\002 \001(\0132\013.BravePoint:\0028\001\032C\n\020MonsterInf" +
      "oEntry\022\013\n\003key\030\001 \001(\005\022\036\n\005value\030\002 \001(\0132\017.Pla" +
      "yerBaseInfo:\0028\001B\033\n\010protocol\252\002\016ETHotfix.P",
      "rotob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.Battle.getDescriptor(),
          protocol.BraveChallenge.getDescriptor(),
        }, assigner);
    internal_static_DB_ChallengeProgress_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DB_ChallengeProgress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ChallengeProgress_descriptor,
        new java.lang.String[] { "Progress", "PetsRemainHp", "BossRemainHp", "TodayRebornTimes", "FailureTimes", "MonsterExProperty", "PointCfg", "TodayChallenge", "GiftFirstBlood", "MonsterInfo", "NewGame", });
    internal_static_DB_ChallengeProgress_PetsRemainHpEntry_descriptor =
      internal_static_DB_ChallengeProgress_descriptor.getNestedTypes().get(0);
    internal_static_DB_ChallengeProgress_PetsRemainHpEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ChallengeProgress_PetsRemainHpEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ChallengeProgress_BossRemainHpEntry_descriptor =
      internal_static_DB_ChallengeProgress_descriptor.getNestedTypes().get(1);
    internal_static_DB_ChallengeProgress_BossRemainHpEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ChallengeProgress_BossRemainHpEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ChallengeProgress_PointCfgEntry_descriptor =
      internal_static_DB_ChallengeProgress_descriptor.getNestedTypes().get(2);
    internal_static_DB_ChallengeProgress_PointCfgEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ChallengeProgress_PointCfgEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ChallengeProgress_MonsterInfoEntry_descriptor =
      internal_static_DB_ChallengeProgress_descriptor.getNestedTypes().get(3);
    internal_static_DB_ChallengeProgress_MonsterInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ChallengeProgress_MonsterInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    protocol.Battle.getDescriptor();
    protocol.BraveChallenge.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
