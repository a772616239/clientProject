// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CrossArenaPvp.proto

package protocol;

public final class CrossArenaPvp {
  private CrossArenaPvp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CS_CrossArenaOpenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaOpen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *-1表示不设置
     * </pre>
     *
     * <code>int32 costIndex = 1;</code>
     */
    int getCostIndex();

    /**
     * <code>int32 maxLv = 2;</code>
     */
    int getMaxLv();

    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    java.util.List<java.lang.Integer> getBlackpetList();
    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    int getBlackpetCount();
    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    int getBlackpet(int index);

    /**
     * <pre>
     *更新房间才发送
     * </pre>
     *
     * <code>string id = 4;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *更新房间才发送
     * </pre>
     *
     * <code>string id = 4;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    java.util.List<protocol.PrepareWar.PositionPetMap> 
        getMapsList();
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    protocol.PrepareWar.PositionPetMap getMaps(int index);
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    int getMapsCount();
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
        getMapsOrBuilderList();
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
        int index);

    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    java.util.List<protocol.PrepareWar.SkillMap> 
        getSkillMapList();
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    protocol.PrepareWar.SkillMap getSkillMap(int index);
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    int getSkillMapCount();
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
        getSkillMapOrBuilderList();
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CS_CrossArenaOpen}
   */
  public  static final class CS_CrossArenaOpen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaOpen)
      CS_CrossArenaOpenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaOpen.newBuilder() to construct.
    private CS_CrossArenaOpen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaOpen() {
      costIndex_ = 0;
      maxLv_ = 0;
      blackpet_ = java.util.Collections.emptyList();
      id_ = "";
      maps_ = java.util.Collections.emptyList();
      skillMap_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaOpen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              costIndex_ = input.readInt32();
              break;
            }
            case 16: {

              maxLv_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                blackpet_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              blackpet_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                blackpet_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                blackpet_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                maps_ = new java.util.ArrayList<protocol.PrepareWar.PositionPetMap>();
                mutable_bitField0_ |= 0x00000010;
              }
              maps_.add(
                  input.readMessage(protocol.PrepareWar.PositionPetMap.parser(), extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                skillMap_ = new java.util.ArrayList<protocol.PrepareWar.SkillMap>();
                mutable_bitField0_ |= 0x00000020;
              }
              skillMap_.add(
                  input.readMessage(protocol.PrepareWar.SkillMap.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          blackpet_ = java.util.Collections.unmodifiableList(blackpet_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          maps_ = java.util.Collections.unmodifiableList(maps_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          skillMap_ = java.util.Collections.unmodifiableList(skillMap_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaOpen_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaOpen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaOpen.class, protocol.CrossArenaPvp.CS_CrossArenaOpen.Builder.class);
    }

    private int bitField0_;
    public static final int COSTINDEX_FIELD_NUMBER = 1;
    private int costIndex_;
    /**
     * <pre>
     *-1表示不设置
     * </pre>
     *
     * <code>int32 costIndex = 1;</code>
     */
    public int getCostIndex() {
      return costIndex_;
    }

    public static final int MAXLV_FIELD_NUMBER = 2;
    private int maxLv_;
    /**
     * <code>int32 maxLv = 2;</code>
     */
    public int getMaxLv() {
      return maxLv_;
    }

    public static final int BLACKPET_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> blackpet_;
    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getBlackpetList() {
      return blackpet_;
    }
    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    public int getBlackpetCount() {
      return blackpet_.size();
    }
    /**
     * <code>repeated int32 blackpet = 3;</code>
     */
    public int getBlackpet(int index) {
      return blackpet_.get(index);
    }
    private int blackpetMemoizedSerializedSize = -1;

    public static final int ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *更新房间才发送
     * </pre>
     *
     * <code>string id = 4;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *更新房间才发送
     * </pre>
     *
     * <code>string id = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MAPS_FIELD_NUMBER = 5;
    private java.util.List<protocol.PrepareWar.PositionPetMap> maps_;
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    public java.util.List<protocol.PrepareWar.PositionPetMap> getMapsList() {
      return maps_;
    }
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    public java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
        getMapsOrBuilderList() {
      return maps_;
    }
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    public int getMapsCount() {
      return maps_.size();
    }
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    public protocol.PrepareWar.PositionPetMap getMaps(int index) {
      return maps_.get(index);
    }
    /**
     * <code>repeated .PositionPetMap maps = 5;</code>
     */
    public protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
        int index) {
      return maps_.get(index);
    }

    public static final int SKILLMAP_FIELD_NUMBER = 6;
    private java.util.List<protocol.PrepareWar.SkillMap> skillMap_;
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    public java.util.List<protocol.PrepareWar.SkillMap> getSkillMapList() {
      return skillMap_;
    }
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    public java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
        getSkillMapOrBuilderList() {
      return skillMap_;
    }
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    public int getSkillMapCount() {
      return skillMap_.size();
    }
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    public protocol.PrepareWar.SkillMap getSkillMap(int index) {
      return skillMap_.get(index);
    }
    /**
     * <code>repeated .SkillMap skillMap = 6;</code>
     */
    public protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
        int index) {
      return skillMap_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (costIndex_ != 0) {
        output.writeInt32(1, costIndex_);
      }
      if (maxLv_ != 0) {
        output.writeInt32(2, maxLv_);
      }
      if (getBlackpetList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(blackpetMemoizedSerializedSize);
      }
      for (int i = 0; i < blackpet_.size(); i++) {
        output.writeInt32NoTag(blackpet_.get(i));
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, id_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        output.writeMessage(5, maps_.get(i));
      }
      for (int i = 0; i < skillMap_.size(); i++) {
        output.writeMessage(6, skillMap_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (costIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, costIndex_);
      }
      if (maxLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxLv_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < blackpet_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(blackpet_.get(i));
        }
        size += dataSize;
        if (!getBlackpetList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        blackpetMemoizedSerializedSize = dataSize;
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, id_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, maps_.get(i));
      }
      for (int i = 0; i < skillMap_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, skillMap_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaOpen)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaOpen other = (protocol.CrossArenaPvp.CS_CrossArenaOpen) obj;

      boolean result = true;
      result = result && (getCostIndex()
          == other.getCostIndex());
      result = result && (getMaxLv()
          == other.getMaxLv());
      result = result && getBlackpetList()
          .equals(other.getBlackpetList());
      result = result && getId()
          .equals(other.getId());
      result = result && getMapsList()
          .equals(other.getMapsList());
      result = result && getSkillMapList()
          .equals(other.getSkillMapList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COSTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getCostIndex();
      hash = (37 * hash) + MAXLV_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLv();
      if (getBlackpetCount() > 0) {
        hash = (37 * hash) + BLACKPET_FIELD_NUMBER;
        hash = (53 * hash) + getBlackpetList().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getMapsCount() > 0) {
        hash = (37 * hash) + MAPS_FIELD_NUMBER;
        hash = (53 * hash) + getMapsList().hashCode();
      }
      if (getSkillMapCount() > 0) {
        hash = (37 * hash) + SKILLMAP_FIELD_NUMBER;
        hash = (53 * hash) + getSkillMapList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaOpen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaOpen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CS_CrossArenaOpen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaOpen)
        protocol.CrossArenaPvp.CS_CrossArenaOpenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaOpen_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaOpen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaOpen.class, protocol.CrossArenaPvp.CS_CrossArenaOpen.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaOpen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMapsFieldBuilder();
          getSkillMapFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        costIndex_ = 0;

        maxLv_ = 0;

        blackpet_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        id_ = "";

        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          mapsBuilder_.clear();
        }
        if (skillMapBuilder_ == null) {
          skillMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          skillMapBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaOpen_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaOpen getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaOpen.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaOpen build() {
        protocol.CrossArenaPvp.CS_CrossArenaOpen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaOpen buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaOpen result = new protocol.CrossArenaPvp.CS_CrossArenaOpen(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.costIndex_ = costIndex_;
        result.maxLv_ = maxLv_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          blackpet_ = java.util.Collections.unmodifiableList(blackpet_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.blackpet_ = blackpet_;
        result.id_ = id_;
        if (mapsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            maps_ = java.util.Collections.unmodifiableList(maps_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.maps_ = maps_;
        } else {
          result.maps_ = mapsBuilder_.build();
        }
        if (skillMapBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            skillMap_ = java.util.Collections.unmodifiableList(skillMap_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.skillMap_ = skillMap_;
        } else {
          result.skillMap_ = skillMapBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaOpen) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaOpen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaOpen other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaOpen.getDefaultInstance()) return this;
        if (other.getCostIndex() != 0) {
          setCostIndex(other.getCostIndex());
        }
        if (other.getMaxLv() != 0) {
          setMaxLv(other.getMaxLv());
        }
        if (!other.blackpet_.isEmpty()) {
          if (blackpet_.isEmpty()) {
            blackpet_ = other.blackpet_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBlackpetIsMutable();
            blackpet_.addAll(other.blackpet_);
          }
          onChanged();
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (mapsBuilder_ == null) {
          if (!other.maps_.isEmpty()) {
            if (maps_.isEmpty()) {
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureMapsIsMutable();
              maps_.addAll(other.maps_);
            }
            onChanged();
          }
        } else {
          if (!other.maps_.isEmpty()) {
            if (mapsBuilder_.isEmpty()) {
              mapsBuilder_.dispose();
              mapsBuilder_ = null;
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000010);
              mapsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMapsFieldBuilder() : null;
            } else {
              mapsBuilder_.addAllMessages(other.maps_);
            }
          }
        }
        if (skillMapBuilder_ == null) {
          if (!other.skillMap_.isEmpty()) {
            if (skillMap_.isEmpty()) {
              skillMap_ = other.skillMap_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureSkillMapIsMutable();
              skillMap_.addAll(other.skillMap_);
            }
            onChanged();
          }
        } else {
          if (!other.skillMap_.isEmpty()) {
            if (skillMapBuilder_.isEmpty()) {
              skillMapBuilder_.dispose();
              skillMapBuilder_ = null;
              skillMap_ = other.skillMap_;
              bitField0_ = (bitField0_ & ~0x00000020);
              skillMapBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSkillMapFieldBuilder() : null;
            } else {
              skillMapBuilder_.addAllMessages(other.skillMap_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaOpen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaOpen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int costIndex_ ;
      /**
       * <pre>
       *-1表示不设置
       * </pre>
       *
       * <code>int32 costIndex = 1;</code>
       */
      public int getCostIndex() {
        return costIndex_;
      }
      /**
       * <pre>
       *-1表示不设置
       * </pre>
       *
       * <code>int32 costIndex = 1;</code>
       */
      public Builder setCostIndex(int value) {
        
        costIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *-1表示不设置
       * </pre>
       *
       * <code>int32 costIndex = 1;</code>
       */
      public Builder clearCostIndex() {
        
        costIndex_ = 0;
        onChanged();
        return this;
      }

      private int maxLv_ ;
      /**
       * <code>int32 maxLv = 2;</code>
       */
      public int getMaxLv() {
        return maxLv_;
      }
      /**
       * <code>int32 maxLv = 2;</code>
       */
      public Builder setMaxLv(int value) {
        
        maxLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxLv = 2;</code>
       */
      public Builder clearMaxLv() {
        
        maxLv_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> blackpet_ = java.util.Collections.emptyList();
      private void ensureBlackpetIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          blackpet_ = new java.util.ArrayList<java.lang.Integer>(blackpet_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getBlackpetList() {
        return java.util.Collections.unmodifiableList(blackpet_);
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public int getBlackpetCount() {
        return blackpet_.size();
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public int getBlackpet(int index) {
        return blackpet_.get(index);
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public Builder setBlackpet(
          int index, int value) {
        ensureBlackpetIsMutable();
        blackpet_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public Builder addBlackpet(int value) {
        ensureBlackpetIsMutable();
        blackpet_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public Builder addAllBlackpet(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBlackpetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blackpet_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 blackpet = 3;</code>
       */
      public Builder clearBlackpet() {
        blackpet_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *更新房间才发送
       * </pre>
       *
       * <code>string id = 4;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *更新房间才发送
       * </pre>
       *
       * <code>string id = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *更新房间才发送
       * </pre>
       *
       * <code>string id = 4;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *更新房间才发送
       * </pre>
       *
       * <code>string id = 4;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *更新房间才发送
       * </pre>
       *
       * <code>string id = 4;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<protocol.PrepareWar.PositionPetMap> maps_ =
        java.util.Collections.emptyList();
      private void ensureMapsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          maps_ = new java.util.ArrayList<protocol.PrepareWar.PositionPetMap>(maps_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder> mapsBuilder_;

      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public java.util.List<protocol.PrepareWar.PositionPetMap> getMapsList() {
        if (mapsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(maps_);
        } else {
          return mapsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public int getMapsCount() {
        if (mapsBuilder_ == null) {
          return maps_.size();
        } else {
          return mapsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public protocol.PrepareWar.PositionPetMap getMaps(int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);
        } else {
          return mapsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder setMaps(
          int index, protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.set(index, value);
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder setMaps(
          int index, protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder addMaps(protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder addMaps(
          int index, protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(index, value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder addMaps(
          protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder addMaps(
          int index, protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder addAllMaps(
          java.lang.Iterable<? extends protocol.PrepareWar.PositionPetMap> values) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, maps_);
          onChanged();
        } else {
          mapsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder clearMaps() {
        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          mapsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public Builder removeMaps(int index) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.remove(index);
          onChanged();
        } else {
          mapsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder getMapsBuilder(
          int index) {
        return getMapsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
          int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);  } else {
          return mapsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
           getMapsOrBuilderList() {
        if (mapsBuilder_ != null) {
          return mapsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(maps_);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder addMapsBuilder() {
        return getMapsFieldBuilder().addBuilder(
            protocol.PrepareWar.PositionPetMap.getDefaultInstance());
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder addMapsBuilder(
          int index) {
        return getMapsFieldBuilder().addBuilder(
            index, protocol.PrepareWar.PositionPetMap.getDefaultInstance());
      }
      /**
       * <code>repeated .PositionPetMap maps = 5;</code>
       */
      public java.util.List<protocol.PrepareWar.PositionPetMap.Builder> 
           getMapsBuilderList() {
        return getMapsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder> 
          getMapsFieldBuilder() {
        if (mapsBuilder_ == null) {
          mapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder>(
                  maps_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          maps_ = null;
        }
        return mapsBuilder_;
      }

      private java.util.List<protocol.PrepareWar.SkillMap> skillMap_ =
        java.util.Collections.emptyList();
      private void ensureSkillMapIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          skillMap_ = new java.util.ArrayList<protocol.PrepareWar.SkillMap>(skillMap_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder> skillMapBuilder_;

      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public java.util.List<protocol.PrepareWar.SkillMap> getSkillMapList() {
        if (skillMapBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillMap_);
        } else {
          return skillMapBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public int getSkillMapCount() {
        if (skillMapBuilder_ == null) {
          return skillMap_.size();
        } else {
          return skillMapBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public protocol.PrepareWar.SkillMap getSkillMap(int index) {
        if (skillMapBuilder_ == null) {
          return skillMap_.get(index);
        } else {
          return skillMapBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder setSkillMap(
          int index, protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.set(index, value);
          onChanged();
        } else {
          skillMapBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder setSkillMap(
          int index, protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder addSkillMap(protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.add(value);
          onChanged();
        } else {
          skillMapBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder addSkillMap(
          int index, protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.add(index, value);
          onChanged();
        } else {
          skillMapBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder addSkillMap(
          protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.add(builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder addSkillMap(
          int index, protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder addAllSkillMap(
          java.lang.Iterable<? extends protocol.PrepareWar.SkillMap> values) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, skillMap_);
          onChanged();
        } else {
          skillMapBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder clearSkillMap() {
        if (skillMapBuilder_ == null) {
          skillMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          skillMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public Builder removeSkillMap(int index) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.remove(index);
          onChanged();
        } else {
          skillMapBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder getSkillMapBuilder(
          int index) {
        return getSkillMapFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
          int index) {
        if (skillMapBuilder_ == null) {
          return skillMap_.get(index);  } else {
          return skillMapBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
           getSkillMapOrBuilderList() {
        if (skillMapBuilder_ != null) {
          return skillMapBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillMap_);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder addSkillMapBuilder() {
        return getSkillMapFieldBuilder().addBuilder(
            protocol.PrepareWar.SkillMap.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder addSkillMapBuilder(
          int index) {
        return getSkillMapFieldBuilder().addBuilder(
            index, protocol.PrepareWar.SkillMap.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillMap skillMap = 6;</code>
       */
      public java.util.List<protocol.PrepareWar.SkillMap.Builder> 
           getSkillMapBuilderList() {
        return getSkillMapFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder> 
          getSkillMapFieldBuilder() {
        if (skillMapBuilder_ == null) {
          skillMapBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder>(
                  skillMap_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          skillMap_ = null;
        }
        return skillMapBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaOpen)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaOpen)
    private static final protocol.CrossArenaPvp.CS_CrossArenaOpen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaOpen();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaOpen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaOpen>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaOpen>() {
      public CS_CrossArenaOpen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaOpen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaOpen> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaOpen> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaOpen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaOpenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaOpen)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaOpen}
   */
  public  static final class SC_CrossArenaOpen extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaOpen)
      SC_CrossArenaOpenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaOpen.newBuilder() to construct.
    private SC_CrossArenaOpen(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaOpen() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaOpen(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaOpen_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaOpen_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaOpen.class, protocol.CrossArenaPvp.SC_CrossArenaOpen.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaOpen)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaOpen other = (protocol.CrossArenaPvp.SC_CrossArenaOpen) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaOpen parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaOpen prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaOpen}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaOpen)
        protocol.CrossArenaPvp.SC_CrossArenaOpenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaOpen_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaOpen_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaOpen.class, protocol.CrossArenaPvp.SC_CrossArenaOpen.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaOpen.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaOpen_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaOpen getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaOpen.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaOpen build() {
        protocol.CrossArenaPvp.SC_CrossArenaOpen result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaOpen buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaOpen result = new protocol.CrossArenaPvp.SC_CrossArenaOpen(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaOpen) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaOpen)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaOpen other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaOpen.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaOpen parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaOpen) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaOpen)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaOpen)
    private static final protocol.CrossArenaPvp.SC_CrossArenaOpen DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaOpen();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaOpen getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaOpen>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaOpen>() {
      public SC_CrossArenaOpen parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaOpen(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaOpen> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaOpen> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaOpen getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpPanelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpPanel)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CS_CrossArenaPvpPanel}
   */
  public  static final class CS_CrossArenaPvpPanel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpPanel)
      CS_CrossArenaPvpPanelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpPanel.newBuilder() to construct.
    private CS_CrossArenaPvpPanel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpPanel() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpPanel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpPanel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpPanel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.class, protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpPanel)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpPanel other = (protocol.CrossArenaPvp.CS_CrossArenaPvpPanel) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpPanel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CS_CrossArenaPvpPanel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpPanel)
        protocol.CrossArenaPvp.CS_CrossArenaPvpPanelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpPanel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpPanel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.class, protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpPanel_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpPanel getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpPanel build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpPanel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpPanel buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpPanel result = new protocol.CrossArenaPvp.CS_CrossArenaPvpPanel(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpPanel) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpPanel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpPanel other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpPanel.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpPanel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpPanel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpPanel)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpPanel)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpPanel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpPanel();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpPanel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpPanel>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpPanel>() {
      public CS_CrossArenaPvpPanel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpPanel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpPanel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpPanel> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpPanel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpInfoOneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpInfoOne)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    boolean hasRoom();
    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom();
    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder();

    /**
     * <pre>
     *0新增 1删除 2房间内数据变化
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpInfoOne}
   */
  public  static final class SC_CrossArenaPvpInfoOne extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpInfoOne)
      SC_CrossArenaPvpInfoOneOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpInfoOne.newBuilder() to construct.
    private SC_CrossArenaPvpInfoOne(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpInfoOne() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpInfoOne(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder subBuilder = null;
              if (room_ != null) {
                subBuilder = room_.toBuilder();
              }
              room_ = input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(room_);
                room_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpInfoOne_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpInfoOne_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.class, protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.Builder.class);
    }

    public static final int ROOM_FIELD_NUMBER = 1;
    private protocol.CrossArenaPvp.CrossArenaPvpRoom room_;
    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    public boolean hasRoom() {
      return room_ != null;
    }
    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom() {
      return room_ == null ? protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : room_;
    }
    /**
     * <code>.CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder() {
      return getRoom();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <pre>
     *0新增 1删除 2房间内数据变化
     * </pre>
     *
     * <code>int32 type = 2;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (room_ != null) {
        output.writeMessage(1, getRoom());
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (room_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRoom());
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne other = (protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne) obj;

      boolean result = true;
      result = result && (hasRoom() == other.hasRoom());
      if (hasRoom()) {
        result = result && getRoom()
            .equals(other.getRoom());
      }
      result = result && (getType()
          == other.getType());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRoom()) {
        hash = (37 * hash) + ROOM_FIELD_NUMBER;
        hash = (53 * hash) + getRoom().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpInfoOne}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpInfoOne)
        protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpInfoOne_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpInfoOne_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.class, protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (roomBuilder_ == null) {
          room_ = null;
        } else {
          room_ = null;
          roomBuilder_ = null;
        }
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpInfoOne_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne result = new protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne(this);
        if (roomBuilder_ == null) {
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne.getDefaultInstance()) return this;
        if (other.hasRoom()) {
          mergeRoom(other.getRoom());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.CrossArenaPvp.CrossArenaPvpRoom room_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> roomBuilder_;
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public boolean hasRoom() {
        return roomBuilder_ != null || room_ != null;
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom() {
        if (roomBuilder_ == null) {
          return room_ == null ? protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : room_;
        } else {
          return roomBuilder_.getMessage();
        }
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          room_ = value;
          onChanged();
        } else {
          roomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(
          protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          room_ = builderForValue.build();
          onChanged();
        } else {
          roomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public Builder mergeRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (room_ != null) {
            room_ =
              protocol.CrossArenaPvp.CrossArenaPvpRoom.newBuilder(room_).mergeFrom(value).buildPartial();
          } else {
            room_ = value;
          }
          onChanged();
        } else {
          roomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = null;
          onChanged();
        } else {
          room_ = null;
          roomBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder getRoomBuilder() {
        
        onChanged();
        return getRoomFieldBuilder().getBuilder();
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilder();
        } else {
          return room_ == null ?
              protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : room_;
        }
      }
      /**
       * <code>.CrossArenaPvpRoom room = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder>(
                  getRoom(),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }

      private int type_ ;
      /**
       * <pre>
       *0新增 1删除 2房间内数据变化
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *0新增 1删除 2房间内数据变化
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0新增 1删除 2房间内数据变化
       * </pre>
       *
       * <code>int32 type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpInfoOne)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpInfoOne)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpInfoOne>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpInfoOne>() {
      public SC_CrossArenaPvpInfoOne parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpInfoOne(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpInfoOne> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpInfoOne> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpInfoOne getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpPanelOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpPanel)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> 
        getRoomList();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index);
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    int getRoomCount();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
        getRoomOrBuilderList();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
        int index);

    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    boolean hasMyRoom();
    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoom getMyRoom();
    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getMyRoomOrBuilder();

    /**
     * <pre>
     *0有1无
     * </pre>
     *
     * <code>int32 haveCost = 3;</code>
     */
    int getHaveCost();

    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    java.util.List<java.lang.String>
        getIdsList();
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    int getIdsCount();
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    java.lang.String getIds(int index);
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    com.google.protobuf.ByteString
        getIdsBytes(int index);
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpPanel}
   */
  public  static final class SC_CrossArenaPvpPanel extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpPanel)
      SC_CrossArenaPvpPanelOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpPanel.newBuilder() to construct.
    private SC_CrossArenaPvpPanel(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpPanel() {
      room_ = java.util.Collections.emptyList();
      haveCost_ = 0;
      ids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpPanel(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                room_ = new java.util.ArrayList<protocol.CrossArenaPvp.CrossArenaPvpRoom>();
                mutable_bitField0_ |= 0x00000001;
              }
              room_.add(
                  input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpRoom.parser(), extensionRegistry));
              break;
            }
            case 18: {
              protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder subBuilder = null;
              if (myRoom_ != null) {
                subBuilder = myRoom_.toBuilder();
              }
              myRoom_ = input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpRoom.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(myRoom_);
                myRoom_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              haveCost_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ids_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              ids_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = java.util.Collections.unmodifiableList(room_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ids_ = ids_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPanel_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPanel_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.class, protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.Builder.class);
    }

    private int bitField0_;
    public static final int ROOM_FIELD_NUMBER = 1;
    private java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> room_;
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> getRoomList() {
      return room_;
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
        getRoomOrBuilderList() {
      return room_;
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public int getRoomCount() {
      return room_.size();
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index) {
      return room_.get(index);
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
        int index) {
      return room_.get(index);
    }

    public static final int MYROOM_FIELD_NUMBER = 2;
    private protocol.CrossArenaPvp.CrossArenaPvpRoom myRoom_;
    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    public boolean hasMyRoom() {
      return myRoom_ != null;
    }
    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoom getMyRoom() {
      return myRoom_ == null ? protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : myRoom_;
    }
    /**
     * <pre>
     *我的房间
     * </pre>
     *
     * <code>.CrossArenaPvpRoom myRoom = 2;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getMyRoomOrBuilder() {
      return getMyRoom();
    }

    public static final int HAVECOST_FIELD_NUMBER = 3;
    private int haveCost_;
    /**
     * <pre>
     *0有1无
     * </pre>
     *
     * <code>int32 haveCost = 3;</code>
     */
    public int getHaveCost() {
      return haveCost_;
    }

    public static final int IDS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList ids_;
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getIdsList() {
      return ids_;
    }
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    public int getIdsCount() {
      return ids_.size();
    }
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    public java.lang.String getIds(int index) {
      return ids_.get(index);
    }
    /**
     * <pre>
     *所有房间号
     * </pre>
     *
     * <code>repeated string ids = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIdsBytes(int index) {
      return ids_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < room_.size(); i++) {
        output.writeMessage(1, room_.get(i));
      }
      if (myRoom_ != null) {
        output.writeMessage(2, getMyRoom());
      }
      if (haveCost_ != 0) {
        output.writeInt32(3, haveCost_);
      }
      for (int i = 0; i < ids_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ids_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < room_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, room_.get(i));
      }
      if (myRoom_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getMyRoom());
      }
      if (haveCost_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, haveCost_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ids_.size(); i++) {
          dataSize += computeStringSizeNoTag(ids_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpPanel)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpPanel other = (protocol.CrossArenaPvp.SC_CrossArenaPvpPanel) obj;

      boolean result = true;
      result = result && getRoomList()
          .equals(other.getRoomList());
      result = result && (hasMyRoom() == other.hasMyRoom());
      if (hasMyRoom()) {
        result = result && getMyRoom()
            .equals(other.getMyRoom());
      }
      result = result && (getHaveCost()
          == other.getHaveCost());
      result = result && getIdsList()
          .equals(other.getIdsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRoomCount() > 0) {
        hash = (37 * hash) + ROOM_FIELD_NUMBER;
        hash = (53 * hash) + getRoomList().hashCode();
      }
      if (hasMyRoom()) {
        hash = (37 * hash) + MYROOM_FIELD_NUMBER;
        hash = (53 * hash) + getMyRoom().hashCode();
      }
      hash = (37 * hash) + HAVECOST_FIELD_NUMBER;
      hash = (53 * hash) + getHaveCost();
      if (getIdsCount() > 0) {
        hash = (37 * hash) + IDS_FIELD_NUMBER;
        hash = (53 * hash) + getIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpPanel prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpPanel}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpPanel)
        protocol.CrossArenaPvp.SC_CrossArenaPvpPanelOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPanel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPanel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.class, protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRoomFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomBuilder_.clear();
        }
        if (myRoomBuilder_ == null) {
          myRoom_ = null;
        } else {
          myRoom_ = null;
          myRoomBuilder_ = null;
        }
        haveCost_ = 0;

        ids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPanel_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPanel getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPanel build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPanel result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPanel buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPanel result = new protocol.CrossArenaPvp.SC_CrossArenaPvpPanel(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (roomBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            room_ = java.util.Collections.unmodifiableList(room_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        if (myRoomBuilder_ == null) {
          result.myRoom_ = myRoom_;
        } else {
          result.myRoom_ = myRoomBuilder_.build();
        }
        result.haveCost_ = haveCost_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ids_ = ids_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ids_ = ids_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpPanel) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpPanel)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpPanel other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpPanel.getDefaultInstance()) return this;
        if (roomBuilder_ == null) {
          if (!other.room_.isEmpty()) {
            if (room_.isEmpty()) {
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomIsMutable();
              room_.addAll(other.room_);
            }
            onChanged();
          }
        } else {
          if (!other.room_.isEmpty()) {
            if (roomBuilder_.isEmpty()) {
              roomBuilder_.dispose();
              roomBuilder_ = null;
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRoomFieldBuilder() : null;
            } else {
              roomBuilder_.addAllMessages(other.room_);
            }
          }
        }
        if (other.hasMyRoom()) {
          mergeMyRoom(other.getMyRoom());
        }
        if (other.getHaveCost() != 0) {
          setHaveCost(other.getHaveCost());
        }
        if (!other.ids_.isEmpty()) {
          if (ids_.isEmpty()) {
            ids_ = other.ids_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureIdsIsMutable();
            ids_.addAll(other.ids_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPanel parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpPanel) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> room_ =
        java.util.Collections.emptyList();
      private void ensureRoomIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = new java.util.ArrayList<protocol.CrossArenaPvp.CrossArenaPvpRoom>(room_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> roomBuilder_;

      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> getRoomList() {
        if (roomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(room_);
        } else {
          return roomBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public int getRoomCount() {
        if (roomBuilder_ == null) {
          return room_.size();
        } else {
          return roomBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);
        } else {
          return roomBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.set(index, value);
          onChanged();
        } else {
          roomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(value);
          onChanged();
        } else {
          roomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(index, value);
          onChanged();
        } else {
          roomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addAllRoom(
          java.lang.Iterable<? extends protocol.CrossArenaPvp.CrossArenaPvpRoom> values) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, room_);
          onChanged();
        } else {
          roomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder removeRoom(int index) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.remove(index);
          onChanged();
        } else {
          roomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder getRoomBuilder(
          int index) {
        return getRoomFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
          int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);  } else {
          return roomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
           getRoomOrBuilderList() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(room_);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder addRoomBuilder() {
        return getRoomFieldBuilder().addBuilder(
            protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance());
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder addRoomBuilder(
          int index) {
        return getRoomFieldBuilder().addBuilder(
            index, protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance());
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder> 
           getRoomBuilderList() {
        return getRoomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder>(
                  room_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }

      private protocol.CrossArenaPvp.CrossArenaPvpRoom myRoom_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> myRoomBuilder_;
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public boolean hasMyRoom() {
        return myRoomBuilder_ != null || myRoom_ != null;
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom getMyRoom() {
        if (myRoomBuilder_ == null) {
          return myRoom_ == null ? protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : myRoom_;
        } else {
          return myRoomBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public Builder setMyRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (myRoomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          myRoom_ = value;
          onChanged();
        } else {
          myRoomBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public Builder setMyRoom(
          protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (myRoomBuilder_ == null) {
          myRoom_ = builderForValue.build();
          onChanged();
        } else {
          myRoomBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public Builder mergeMyRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (myRoomBuilder_ == null) {
          if (myRoom_ != null) {
            myRoom_ =
              protocol.CrossArenaPvp.CrossArenaPvpRoom.newBuilder(myRoom_).mergeFrom(value).buildPartial();
          } else {
            myRoom_ = value;
          }
          onChanged();
        } else {
          myRoomBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public Builder clearMyRoom() {
        if (myRoomBuilder_ == null) {
          myRoom_ = null;
          onChanged();
        } else {
          myRoom_ = null;
          myRoomBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder getMyRoomBuilder() {
        
        onChanged();
        return getMyRoomFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getMyRoomOrBuilder() {
        if (myRoomBuilder_ != null) {
          return myRoomBuilder_.getMessageOrBuilder();
        } else {
          return myRoom_ == null ?
              protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance() : myRoom_;
        }
      }
      /**
       * <pre>
       *我的房间
       * </pre>
       *
       * <code>.CrossArenaPvpRoom myRoom = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
          getMyRoomFieldBuilder() {
        if (myRoomBuilder_ == null) {
          myRoomBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder>(
                  getMyRoom(),
                  getParentForChildren(),
                  isClean());
          myRoom_ = null;
        }
        return myRoomBuilder_;
      }

      private int haveCost_ ;
      /**
       * <pre>
       *0有1无
       * </pre>
       *
       * <code>int32 haveCost = 3;</code>
       */
      public int getHaveCost() {
        return haveCost_;
      }
      /**
       * <pre>
       *0有1无
       * </pre>
       *
       * <code>int32 haveCost = 3;</code>
       */
      public Builder setHaveCost(int value) {
        
        haveCost_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0有1无
       * </pre>
       *
       * <code>int32 haveCost = 3;</code>
       */
      public Builder clearHaveCost() {
        
        haveCost_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList ids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ids_ = new com.google.protobuf.LazyStringArrayList(ids_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getIdsList() {
        return ids_.getUnmodifiableView();
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public int getIdsCount() {
        return ids_.size();
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public java.lang.String getIds(int index) {
        return ids_.get(index);
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIdsBytes(int index) {
        return ids_.getByteString(index);
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public Builder setIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public Builder addIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public Builder addAllIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, ids_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public Builder clearIds() {
        ids_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *所有房间号
       * </pre>
       *
       * <code>repeated string ids = 4;</code>
       */
      public Builder addIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureIdsIsMutable();
        ids_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpPanel)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpPanel)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpPanel DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpPanel();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPanel getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpPanel>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpPanel>() {
      public SC_CrossArenaPvpPanel parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpPanel(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpPanel> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpPanel> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpPanel getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpRefreshOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpRefresh)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();
  }
  /**
   * Protobuf type {@code CS_CrossArenaPvpRefresh}
   */
  public  static final class CS_CrossArenaPvpRefresh extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpRefresh)
      CS_CrossArenaPvpRefreshOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpRefresh.newBuilder() to construct.
    private CS_CrossArenaPvpRefresh(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpRefresh() {
      roomId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpRefresh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              roomId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpRefresh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpRefresh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.class, protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private volatile java.lang.Object roomId_;
    /**
     * <code>string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomId_ = s;
        return s;
      }
    }
    /**
     * <code>string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRoomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, roomId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRoomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, roomId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh other = (protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh) obj;

      boolean result = true;
      result = result && getRoomId()
          .equals(other.getRoomId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CS_CrossArenaPvpRefresh}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpRefresh)
        protocol.CrossArenaPvp.CS_CrossArenaPvpRefreshOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpRefresh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpRefresh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.class, protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpRefresh_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh result = new protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh(this);
        result.roomId_ = roomId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh.getDefaultInstance()) return this;
        if (!other.getRoomId().isEmpty()) {
          roomId_ = other.roomId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object roomId_ = "";
      /**
       * <code>string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpRefresh)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpRefresh)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpRefresh>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpRefresh>() {
      public CS_CrossArenaPvpRefresh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpRefresh(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpRefresh> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpRefresh> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpRefresh getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpRefreshOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpRefresh)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> 
        getRoomList();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index);
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    int getRoomCount();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
        getRoomOrBuilderList();
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpRefresh}
   */
  public  static final class SC_CrossArenaPvpRefresh extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpRefresh)
      SC_CrossArenaPvpRefreshOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpRefresh.newBuilder() to construct.
    private SC_CrossArenaPvpRefresh(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpRefresh() {
      room_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpRefresh(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                room_ = new java.util.ArrayList<protocol.CrossArenaPvp.CrossArenaPvpRoom>();
                mutable_bitField0_ |= 0x00000001;
              }
              room_.add(
                  input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpRoom.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = java.util.Collections.unmodifiableList(room_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpRefresh_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpRefresh_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.class, protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.Builder.class);
    }

    public static final int ROOM_FIELD_NUMBER = 1;
    private java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> room_;
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> getRoomList() {
      return room_;
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
        getRoomOrBuilderList() {
      return room_;
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public int getRoomCount() {
      return room_.size();
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index) {
      return room_.get(index);
    }
    /**
     * <pre>
     *切磋房间
     * </pre>
     *
     * <code>repeated .CrossArenaPvpRoom room = 1;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
        int index) {
      return room_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < room_.size(); i++) {
        output.writeMessage(1, room_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < room_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, room_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh other = (protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh) obj;

      boolean result = true;
      result = result && getRoomList()
          .equals(other.getRoomList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRoomCount() > 0) {
        hash = (37 * hash) + ROOM_FIELD_NUMBER;
        hash = (53 * hash) + getRoomList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpRefresh}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpRefresh)
        protocol.CrossArenaPvp.SC_CrossArenaPvpRefreshOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpRefresh_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpRefresh_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.class, protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRoomFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          roomBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpRefresh_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh result = new protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh(this);
        int from_bitField0_ = bitField0_;
        if (roomBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            room_ = java.util.Collections.unmodifiableList(room_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.room_ = room_;
        } else {
          result.room_ = roomBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh.getDefaultInstance()) return this;
        if (roomBuilder_ == null) {
          if (!other.room_.isEmpty()) {
            if (room_.isEmpty()) {
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRoomIsMutable();
              room_.addAll(other.room_);
            }
            onChanged();
          }
        } else {
          if (!other.room_.isEmpty()) {
            if (roomBuilder_.isEmpty()) {
              roomBuilder_.dispose();
              roomBuilder_ = null;
              room_ = other.room_;
              bitField0_ = (bitField0_ & ~0x00000001);
              roomBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRoomFieldBuilder() : null;
            } else {
              roomBuilder_.addAllMessages(other.room_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> room_ =
        java.util.Collections.emptyList();
      private void ensureRoomIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          room_ = new java.util.ArrayList<protocol.CrossArenaPvp.CrossArenaPvpRoom>(room_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> roomBuilder_;

      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom> getRoomList() {
        if (roomBuilder_ == null) {
          return java.util.Collections.unmodifiableList(room_);
        } else {
          return roomBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public int getRoomCount() {
        if (roomBuilder_ == null) {
          return room_.size();
        } else {
          return roomBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom getRoom(int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);
        } else {
          return roomBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.set(index, value);
          onChanged();
        } else {
          roomBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder setRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.set(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(value);
          onChanged();
        } else {
          roomBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom value) {
        if (roomBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRoomIsMutable();
          room_.add(index, value);
          onChanged();
        } else {
          roomBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addRoom(
          int index, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder builderForValue) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.add(index, builderForValue.build());
          onChanged();
        } else {
          roomBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder addAllRoom(
          java.lang.Iterable<? extends protocol.CrossArenaPvp.CrossArenaPvpRoom> values) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, room_);
          onChanged();
        } else {
          roomBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder clearRoom() {
        if (roomBuilder_ == null) {
          room_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          roomBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public Builder removeRoom(int index) {
        if (roomBuilder_ == null) {
          ensureRoomIsMutable();
          room_.remove(index);
          onChanged();
        } else {
          roomBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder getRoomBuilder(
          int index) {
        return getRoomFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder getRoomOrBuilder(
          int index) {
        if (roomBuilder_ == null) {
          return room_.get(index);  } else {
          return roomBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<? extends protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
           getRoomOrBuilderList() {
        if (roomBuilder_ != null) {
          return roomBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(room_);
        }
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder addRoomBuilder() {
        return getRoomFieldBuilder().addBuilder(
            protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance());
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder addRoomBuilder(
          int index) {
        return getRoomFieldBuilder().addBuilder(
            index, protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance());
      }
      /**
       * <pre>
       *切磋房间
       * </pre>
       *
       * <code>repeated .CrossArenaPvpRoom room = 1;</code>
       */
      public java.util.List<protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder> 
           getRoomBuilderList() {
        return getRoomFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder> 
          getRoomFieldBuilder() {
        if (roomBuilder_ == null) {
          roomBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpRoom, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder, protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder>(
                  room_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          room_ = null;
        }
        return roomBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpRefresh)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpRefresh)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpRefresh>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpRefresh>() {
      public SC_CrossArenaPvpRefresh parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpRefresh(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpRefresh> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpRefresh> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpRefresh getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CrossArenaPvpRoomOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CrossArenaPvpRoom)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *房间ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *房间ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *战斗服标识
     * </pre>
     *
     * <code>int32 serverIndex = 2;</code>
     */
    int getServerIndex();

    /**
     * <pre>
     *彩头下标
     * </pre>
     *
     * <code>int32 costIndex = 3;</code>
     */
    int getCostIndex();

    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    java.util.List<java.lang.String>
        getBlacklistList();
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    int getBlacklistCount();
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    java.lang.String getBlacklist(int index);
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    com.google.protobuf.ByteString
        getBlacklistBytes(int index);

    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    boolean hasOwner();
    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpPlayer getOwner();
    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getOwnerOrBuilder();

    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    boolean hasAtter();
    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpPlayer getAtter();
    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getAtterOrBuilder();

    /**
     * <code>int32 minLv = 7;</code>
     */
    int getMinLv();

    /**
     * <code>int32 maxLv = 8;</code>
     */
    int getMaxLv();

    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    java.util.List<java.lang.Integer> getBlackpetList();
    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    int getBlackpetCount();
    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    int getBlackpet(int index);

    /**
     * <code>int64 creteTime = 10;</code>
     */
    long getCreteTime();

    /**
     * <code>int64 startBattleTime = 11;</code>
     */
    long getStartBattleTime();

    /**
     * <pre>
     *非0战斗中
     * </pre>
     *
     * <code>int32 fight = 12;</code>
     */
    int getFight();

    /**
     * <code>int64 totalPower = 13;</code>
     */
    long getTotalPower();

    /**
     * <code>int32 totalLv = 14;</code>
     */
    int getTotalLv();

    /**
     * <code>string battleId = 15;</code>
     */
    java.lang.String getBattleId();
    /**
     * <code>string battleId = 15;</code>
     */
    com.google.protobuf.ByteString
        getBattleIdBytes();
  }
  /**
   * Protobuf type {@code CrossArenaPvpRoom}
   */
  public  static final class CrossArenaPvpRoom extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CrossArenaPvpRoom)
      CrossArenaPvpRoomOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrossArenaPvpRoom.newBuilder() to construct.
    private CrossArenaPvpRoom(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrossArenaPvpRoom() {
      id_ = "";
      serverIndex_ = 0;
      costIndex_ = 0;
      blacklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      minLv_ = 0;
      maxLv_ = 0;
      blackpet_ = java.util.Collections.emptyList();
      creteTime_ = 0L;
      startBattleTime_ = 0L;
      fight_ = 0;
      totalPower_ = 0L;
      totalLv_ = 0;
      battleId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CrossArenaPvpRoom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              serverIndex_ = input.readInt32();
              break;
            }
            case 24: {

              costIndex_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                blacklist_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              blacklist_.add(s);
              break;
            }
            case 42: {
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder subBuilder = null;
              if (owner_ != null) {
                subBuilder = owner_.toBuilder();
              }
              owner_ = input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(owner_);
                owner_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder subBuilder = null;
              if (atter_ != null) {
                subBuilder = atter_.toBuilder();
              }
              atter_ = input.readMessage(protocol.CrossArenaPvp.CrossArenaPvpPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(atter_);
                atter_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              minLv_ = input.readInt32();
              break;
            }
            case 64: {

              maxLv_ = input.readInt32();
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                blackpet_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              blackpet_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                blackpet_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                blackpet_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {

              creteTime_ = input.readInt64();
              break;
            }
            case 88: {

              startBattleTime_ = input.readInt64();
              break;
            }
            case 96: {

              fight_ = input.readInt32();
              break;
            }
            case 104: {

              totalPower_ = input.readInt64();
              break;
            }
            case 112: {

              totalLv_ = input.readInt32();
              break;
            }
            case 122: {
              java.lang.String s = input.readStringRequireUtf8();

              battleId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          blacklist_ = blacklist_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          blackpet_ = java.util.Collections.unmodifiableList(blackpet_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CrossArenaPvpRoom_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CrossArenaPvpRoom_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CrossArenaPvpRoom.class, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *房间ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *房间ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVERINDEX_FIELD_NUMBER = 2;
    private int serverIndex_;
    /**
     * <pre>
     *战斗服标识
     * </pre>
     *
     * <code>int32 serverIndex = 2;</code>
     */
    public int getServerIndex() {
      return serverIndex_;
    }

    public static final int COSTINDEX_FIELD_NUMBER = 3;
    private int costIndex_;
    /**
     * <pre>
     *彩头下标
     * </pre>
     *
     * <code>int32 costIndex = 3;</code>
     */
    public int getCostIndex() {
      return costIndex_;
    }

    public static final int BLACKLIST_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList blacklist_;
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getBlacklistList() {
      return blacklist_;
    }
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    public int getBlacklistCount() {
      return blacklist_.size();
    }
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    public java.lang.String getBlacklist(int index) {
      return blacklist_.get(index);
    }
    /**
     * <pre>
     *踢出玩家名单
     * </pre>
     *
     * <code>repeated string blacklist = 4;</code>
     */
    public com.google.protobuf.ByteString
        getBlacklistBytes(int index) {
      return blacklist_.getByteString(index);
    }

    public static final int OWNER_FIELD_NUMBER = 5;
    private protocol.CrossArenaPvp.CrossArenaPvpPlayer owner_;
    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    public boolean hasOwner() {
      return owner_ != null;
    }
    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpPlayer getOwner() {
      return owner_ == null ? protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : owner_;
    }
    /**
     * <pre>
     *房主
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer owner = 5;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getOwnerOrBuilder() {
      return getOwner();
    }

    public static final int ATTER_FIELD_NUMBER = 6;
    private protocol.CrossArenaPvp.CrossArenaPvpPlayer atter_;
    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    public boolean hasAtter() {
      return atter_ != null;
    }
    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpPlayer getAtter() {
      return atter_ == null ? protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : atter_;
    }
    /**
     * <pre>
     *挑战玩家
     * </pre>
     *
     * <code>.CrossArenaPvpPlayer atter = 6;</code>
     */
    public protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getAtterOrBuilder() {
      return getAtter();
    }

    public static final int MINLV_FIELD_NUMBER = 7;
    private int minLv_;
    /**
     * <code>int32 minLv = 7;</code>
     */
    public int getMinLv() {
      return minLv_;
    }

    public static final int MAXLV_FIELD_NUMBER = 8;
    private int maxLv_;
    /**
     * <code>int32 maxLv = 8;</code>
     */
    public int getMaxLv() {
      return maxLv_;
    }

    public static final int BLACKPET_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> blackpet_;
    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getBlackpetList() {
      return blackpet_;
    }
    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    public int getBlackpetCount() {
      return blackpet_.size();
    }
    /**
     * <pre>
     *禁用魔灵
     * </pre>
     *
     * <code>repeated int32 blackpet = 9;</code>
     */
    public int getBlackpet(int index) {
      return blackpet_.get(index);
    }
    private int blackpetMemoizedSerializedSize = -1;

    public static final int CRETETIME_FIELD_NUMBER = 10;
    private long creteTime_;
    /**
     * <code>int64 creteTime = 10;</code>
     */
    public long getCreteTime() {
      return creteTime_;
    }

    public static final int STARTBATTLETIME_FIELD_NUMBER = 11;
    private long startBattleTime_;
    /**
     * <code>int64 startBattleTime = 11;</code>
     */
    public long getStartBattleTime() {
      return startBattleTime_;
    }

    public static final int FIGHT_FIELD_NUMBER = 12;
    private int fight_;
    /**
     * <pre>
     *非0战斗中
     * </pre>
     *
     * <code>int32 fight = 12;</code>
     */
    public int getFight() {
      return fight_;
    }

    public static final int TOTALPOWER_FIELD_NUMBER = 13;
    private long totalPower_;
    /**
     * <code>int64 totalPower = 13;</code>
     */
    public long getTotalPower() {
      return totalPower_;
    }

    public static final int TOTALLV_FIELD_NUMBER = 14;
    private int totalLv_;
    /**
     * <code>int32 totalLv = 14;</code>
     */
    public int getTotalLv() {
      return totalLv_;
    }

    public static final int BATTLEID_FIELD_NUMBER = 15;
    private volatile java.lang.Object battleId_;
    /**
     * <code>string battleId = 15;</code>
     */
    public java.lang.String getBattleId() {
      java.lang.Object ref = battleId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        battleId_ = s;
        return s;
      }
    }
    /**
     * <code>string battleId = 15;</code>
     */
    public com.google.protobuf.ByteString
        getBattleIdBytes() {
      java.lang.Object ref = battleId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        battleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (serverIndex_ != 0) {
        output.writeInt32(2, serverIndex_);
      }
      if (costIndex_ != 0) {
        output.writeInt32(3, costIndex_);
      }
      for (int i = 0; i < blacklist_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, blacklist_.getRaw(i));
      }
      if (owner_ != null) {
        output.writeMessage(5, getOwner());
      }
      if (atter_ != null) {
        output.writeMessage(6, getAtter());
      }
      if (minLv_ != 0) {
        output.writeInt32(7, minLv_);
      }
      if (maxLv_ != 0) {
        output.writeInt32(8, maxLv_);
      }
      if (getBlackpetList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(blackpetMemoizedSerializedSize);
      }
      for (int i = 0; i < blackpet_.size(); i++) {
        output.writeInt32NoTag(blackpet_.get(i));
      }
      if (creteTime_ != 0L) {
        output.writeInt64(10, creteTime_);
      }
      if (startBattleTime_ != 0L) {
        output.writeInt64(11, startBattleTime_);
      }
      if (fight_ != 0) {
        output.writeInt32(12, fight_);
      }
      if (totalPower_ != 0L) {
        output.writeInt64(13, totalPower_);
      }
      if (totalLv_ != 0) {
        output.writeInt32(14, totalLv_);
      }
      if (!getBattleIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 15, battleId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (serverIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverIndex_);
      }
      if (costIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, costIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < blacklist_.size(); i++) {
          dataSize += computeStringSizeNoTag(blacklist_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getBlacklistList().size();
      }
      if (owner_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getOwner());
      }
      if (atter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getAtter());
      }
      if (minLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, minLv_);
      }
      if (maxLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, maxLv_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < blackpet_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(blackpet_.get(i));
        }
        size += dataSize;
        if (!getBlackpetList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        blackpetMemoizedSerializedSize = dataSize;
      }
      if (creteTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, creteTime_);
      }
      if (startBattleTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, startBattleTime_);
      }
      if (fight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fight_);
      }
      if (totalPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, totalPower_);
      }
      if (totalLv_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, totalLv_);
      }
      if (!getBattleIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, battleId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CrossArenaPvpRoom)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CrossArenaPvpRoom other = (protocol.CrossArenaPvp.CrossArenaPvpRoom) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getServerIndex()
          == other.getServerIndex());
      result = result && (getCostIndex()
          == other.getCostIndex());
      result = result && getBlacklistList()
          .equals(other.getBlacklistList());
      result = result && (hasOwner() == other.hasOwner());
      if (hasOwner()) {
        result = result && getOwner()
            .equals(other.getOwner());
      }
      result = result && (hasAtter() == other.hasAtter());
      if (hasAtter()) {
        result = result && getAtter()
            .equals(other.getAtter());
      }
      result = result && (getMinLv()
          == other.getMinLv());
      result = result && (getMaxLv()
          == other.getMaxLv());
      result = result && getBlackpetList()
          .equals(other.getBlackpetList());
      result = result && (getCreteTime()
          == other.getCreteTime());
      result = result && (getStartBattleTime()
          == other.getStartBattleTime());
      result = result && (getFight()
          == other.getFight());
      result = result && (getTotalPower()
          == other.getTotalPower());
      result = result && (getTotalLv()
          == other.getTotalLv());
      result = result && getBattleId()
          .equals(other.getBattleId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + SERVERINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getServerIndex();
      hash = (37 * hash) + COSTINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getCostIndex();
      if (getBlacklistCount() > 0) {
        hash = (37 * hash) + BLACKLIST_FIELD_NUMBER;
        hash = (53 * hash) + getBlacklistList().hashCode();
      }
      if (hasOwner()) {
        hash = (37 * hash) + OWNER_FIELD_NUMBER;
        hash = (53 * hash) + getOwner().hashCode();
      }
      if (hasAtter()) {
        hash = (37 * hash) + ATTER_FIELD_NUMBER;
        hash = (53 * hash) + getAtter().hashCode();
      }
      hash = (37 * hash) + MINLV_FIELD_NUMBER;
      hash = (53 * hash) + getMinLv();
      hash = (37 * hash) + MAXLV_FIELD_NUMBER;
      hash = (53 * hash) + getMaxLv();
      if (getBlackpetCount() > 0) {
        hash = (37 * hash) + BLACKPET_FIELD_NUMBER;
        hash = (53 * hash) + getBlackpetList().hashCode();
      }
      hash = (37 * hash) + CRETETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreteTime());
      hash = (37 * hash) + STARTBATTLETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartBattleTime());
      hash = (37 * hash) + FIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getFight();
      hash = (37 * hash) + TOTALPOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalPower());
      hash = (37 * hash) + TOTALLV_FIELD_NUMBER;
      hash = (53 * hash) + getTotalLv();
      hash = (37 * hash) + BATTLEID_FIELD_NUMBER;
      hash = (53 * hash) + getBattleId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpRoom parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CrossArenaPvpRoom prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CrossArenaPvpRoom}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CrossArenaPvpRoom)
        protocol.CrossArenaPvp.CrossArenaPvpRoomOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpRoom_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpRoom_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CrossArenaPvpRoom.class, protocol.CrossArenaPvp.CrossArenaPvpRoom.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CrossArenaPvpRoom.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        serverIndex_ = 0;

        costIndex_ = 0;

        blacklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (ownerBuilder_ == null) {
          owner_ = null;
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }
        if (atterBuilder_ == null) {
          atter_ = null;
        } else {
          atter_ = null;
          atterBuilder_ = null;
        }
        minLv_ = 0;

        maxLv_ = 0;

        blackpet_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        creteTime_ = 0L;

        startBattleTime_ = 0L;

        fight_ = 0;

        totalPower_ = 0L;

        totalLv_ = 0;

        battleId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpRoom_descriptor;
      }

      public protocol.CrossArenaPvp.CrossArenaPvpRoom getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CrossArenaPvpRoom build() {
        protocol.CrossArenaPvp.CrossArenaPvpRoom result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CrossArenaPvpRoom buildPartial() {
        protocol.CrossArenaPvp.CrossArenaPvpRoom result = new protocol.CrossArenaPvp.CrossArenaPvpRoom(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.serverIndex_ = serverIndex_;
        result.costIndex_ = costIndex_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          blacklist_ = blacklist_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.blacklist_ = blacklist_;
        if (ownerBuilder_ == null) {
          result.owner_ = owner_;
        } else {
          result.owner_ = ownerBuilder_.build();
        }
        if (atterBuilder_ == null) {
          result.atter_ = atter_;
        } else {
          result.atter_ = atterBuilder_.build();
        }
        result.minLv_ = minLv_;
        result.maxLv_ = maxLv_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          blackpet_ = java.util.Collections.unmodifiableList(blackpet_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.blackpet_ = blackpet_;
        result.creteTime_ = creteTime_;
        result.startBattleTime_ = startBattleTime_;
        result.fight_ = fight_;
        result.totalPower_ = totalPower_;
        result.totalLv_ = totalLv_;
        result.battleId_ = battleId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CrossArenaPvpRoom) {
          return mergeFrom((protocol.CrossArenaPvp.CrossArenaPvpRoom)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CrossArenaPvpRoom other) {
        if (other == protocol.CrossArenaPvp.CrossArenaPvpRoom.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getServerIndex() != 0) {
          setServerIndex(other.getServerIndex());
        }
        if (other.getCostIndex() != 0) {
          setCostIndex(other.getCostIndex());
        }
        if (!other.blacklist_.isEmpty()) {
          if (blacklist_.isEmpty()) {
            blacklist_ = other.blacklist_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureBlacklistIsMutable();
            blacklist_.addAll(other.blacklist_);
          }
          onChanged();
        }
        if (other.hasOwner()) {
          mergeOwner(other.getOwner());
        }
        if (other.hasAtter()) {
          mergeAtter(other.getAtter());
        }
        if (other.getMinLv() != 0) {
          setMinLv(other.getMinLv());
        }
        if (other.getMaxLv() != 0) {
          setMaxLv(other.getMaxLv());
        }
        if (!other.blackpet_.isEmpty()) {
          if (blackpet_.isEmpty()) {
            blackpet_ = other.blackpet_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureBlackpetIsMutable();
            blackpet_.addAll(other.blackpet_);
          }
          onChanged();
        }
        if (other.getCreteTime() != 0L) {
          setCreteTime(other.getCreteTime());
        }
        if (other.getStartBattleTime() != 0L) {
          setStartBattleTime(other.getStartBattleTime());
        }
        if (other.getFight() != 0) {
          setFight(other.getFight());
        }
        if (other.getTotalPower() != 0L) {
          setTotalPower(other.getTotalPower());
        }
        if (other.getTotalLv() != 0) {
          setTotalLv(other.getTotalLv());
        }
        if (!other.getBattleId().isEmpty()) {
          battleId_ = other.battleId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CrossArenaPvpRoom parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CrossArenaPvpRoom) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *房间ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *房间ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *房间ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int serverIndex_ ;
      /**
       * <pre>
       *战斗服标识
       * </pre>
       *
       * <code>int32 serverIndex = 2;</code>
       */
      public int getServerIndex() {
        return serverIndex_;
      }
      /**
       * <pre>
       *战斗服标识
       * </pre>
       *
       * <code>int32 serverIndex = 2;</code>
       */
      public Builder setServerIndex(int value) {
        
        serverIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *战斗服标识
       * </pre>
       *
       * <code>int32 serverIndex = 2;</code>
       */
      public Builder clearServerIndex() {
        
        serverIndex_ = 0;
        onChanged();
        return this;
      }

      private int costIndex_ ;
      /**
       * <pre>
       *彩头下标
       * </pre>
       *
       * <code>int32 costIndex = 3;</code>
       */
      public int getCostIndex() {
        return costIndex_;
      }
      /**
       * <pre>
       *彩头下标
       * </pre>
       *
       * <code>int32 costIndex = 3;</code>
       */
      public Builder setCostIndex(int value) {
        
        costIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *彩头下标
       * </pre>
       *
       * <code>int32 costIndex = 3;</code>
       */
      public Builder clearCostIndex() {
        
        costIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList blacklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureBlacklistIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          blacklist_ = new com.google.protobuf.LazyStringArrayList(blacklist_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getBlacklistList() {
        return blacklist_.getUnmodifiableView();
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public int getBlacklistCount() {
        return blacklist_.size();
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public java.lang.String getBlacklist(int index) {
        return blacklist_.get(index);
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public com.google.protobuf.ByteString
          getBlacklistBytes(int index) {
        return blacklist_.getByteString(index);
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public Builder setBlacklist(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBlacklistIsMutable();
        blacklist_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public Builder addBlacklist(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBlacklistIsMutable();
        blacklist_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public Builder addAllBlacklist(
          java.lang.Iterable<java.lang.String> values) {
        ensureBlacklistIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blacklist_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public Builder clearBlacklist() {
        blacklist_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *踢出玩家名单
       * </pre>
       *
       * <code>repeated string blacklist = 4;</code>
       */
      public Builder addBlacklistBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureBlacklistIsMutable();
        blacklist_.add(value);
        onChanged();
        return this;
      }

      private protocol.CrossArenaPvp.CrossArenaPvpPlayer owner_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder> ownerBuilder_;
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public boolean hasOwner() {
        return ownerBuilder_ != null || owner_ != null;
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayer getOwner() {
        if (ownerBuilder_ == null) {
          return owner_ == null ? protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : owner_;
        } else {
          return ownerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public Builder setOwner(protocol.CrossArenaPvp.CrossArenaPvpPlayer value) {
        if (ownerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          owner_ = value;
          onChanged();
        } else {
          ownerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public Builder setOwner(
          protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder builderForValue) {
        if (ownerBuilder_ == null) {
          owner_ = builderForValue.build();
          onChanged();
        } else {
          ownerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public Builder mergeOwner(protocol.CrossArenaPvp.CrossArenaPvpPlayer value) {
        if (ownerBuilder_ == null) {
          if (owner_ != null) {
            owner_ =
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.newBuilder(owner_).mergeFrom(value).buildPartial();
          } else {
            owner_ = value;
          }
          onChanged();
        } else {
          ownerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public Builder clearOwner() {
        if (ownerBuilder_ == null) {
          owner_ = null;
          onChanged();
        } else {
          owner_ = null;
          ownerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder getOwnerBuilder() {
        
        onChanged();
        return getOwnerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getOwnerOrBuilder() {
        if (ownerBuilder_ != null) {
          return ownerBuilder_.getMessageOrBuilder();
        } else {
          return owner_ == null ?
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : owner_;
        }
      }
      /**
       * <pre>
       *房主
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer owner = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder> 
          getOwnerFieldBuilder() {
        if (ownerBuilder_ == null) {
          ownerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder>(
                  getOwner(),
                  getParentForChildren(),
                  isClean());
          owner_ = null;
        }
        return ownerBuilder_;
      }

      private protocol.CrossArenaPvp.CrossArenaPvpPlayer atter_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder> atterBuilder_;
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public boolean hasAtter() {
        return atterBuilder_ != null || atter_ != null;
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayer getAtter() {
        if (atterBuilder_ == null) {
          return atter_ == null ? protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : atter_;
        } else {
          return atterBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public Builder setAtter(protocol.CrossArenaPvp.CrossArenaPvpPlayer value) {
        if (atterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          atter_ = value;
          onChanged();
        } else {
          atterBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public Builder setAtter(
          protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder builderForValue) {
        if (atterBuilder_ == null) {
          atter_ = builderForValue.build();
          onChanged();
        } else {
          atterBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public Builder mergeAtter(protocol.CrossArenaPvp.CrossArenaPvpPlayer value) {
        if (atterBuilder_ == null) {
          if (atter_ != null) {
            atter_ =
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.newBuilder(atter_).mergeFrom(value).buildPartial();
          } else {
            atter_ = value;
          }
          onChanged();
        } else {
          atterBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public Builder clearAtter() {
        if (atterBuilder_ == null) {
          atter_ = null;
          onChanged();
        } else {
          atter_ = null;
          atterBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder getAtterBuilder() {
        
        onChanged();
        return getAtterFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      public protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder getAtterOrBuilder() {
        if (atterBuilder_ != null) {
          return atterBuilder_.getMessageOrBuilder();
        } else {
          return atter_ == null ?
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance() : atter_;
        }
      }
      /**
       * <pre>
       *挑战玩家
       * </pre>
       *
       * <code>.CrossArenaPvpPlayer atter = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder> 
          getAtterFieldBuilder() {
        if (atterBuilder_ == null) {
          atterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaPvp.CrossArenaPvpPlayer, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder, protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder>(
                  getAtter(),
                  getParentForChildren(),
                  isClean());
          atter_ = null;
        }
        return atterBuilder_;
      }

      private int minLv_ ;
      /**
       * <code>int32 minLv = 7;</code>
       */
      public int getMinLv() {
        return minLv_;
      }
      /**
       * <code>int32 minLv = 7;</code>
       */
      public Builder setMinLv(int value) {
        
        minLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 minLv = 7;</code>
       */
      public Builder clearMinLv() {
        
        minLv_ = 0;
        onChanged();
        return this;
      }

      private int maxLv_ ;
      /**
       * <code>int32 maxLv = 8;</code>
       */
      public int getMaxLv() {
        return maxLv_;
      }
      /**
       * <code>int32 maxLv = 8;</code>
       */
      public Builder setMaxLv(int value) {
        
        maxLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 maxLv = 8;</code>
       */
      public Builder clearMaxLv() {
        
        maxLv_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> blackpet_ = java.util.Collections.emptyList();
      private void ensureBlackpetIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          blackpet_ = new java.util.ArrayList<java.lang.Integer>(blackpet_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getBlackpetList() {
        return java.util.Collections.unmodifiableList(blackpet_);
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public int getBlackpetCount() {
        return blackpet_.size();
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public int getBlackpet(int index) {
        return blackpet_.get(index);
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public Builder setBlackpet(
          int index, int value) {
        ensureBlackpetIsMutable();
        blackpet_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public Builder addBlackpet(int value) {
        ensureBlackpetIsMutable();
        blackpet_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public Builder addAllBlackpet(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBlackpetIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, blackpet_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *禁用魔灵
       * </pre>
       *
       * <code>repeated int32 blackpet = 9;</code>
       */
      public Builder clearBlackpet() {
        blackpet_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private long creteTime_ ;
      /**
       * <code>int64 creteTime = 10;</code>
       */
      public long getCreteTime() {
        return creteTime_;
      }
      /**
       * <code>int64 creteTime = 10;</code>
       */
      public Builder setCreteTime(long value) {
        
        creteTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 creteTime = 10;</code>
       */
      public Builder clearCreteTime() {
        
        creteTime_ = 0L;
        onChanged();
        return this;
      }

      private long startBattleTime_ ;
      /**
       * <code>int64 startBattleTime = 11;</code>
       */
      public long getStartBattleTime() {
        return startBattleTime_;
      }
      /**
       * <code>int64 startBattleTime = 11;</code>
       */
      public Builder setStartBattleTime(long value) {
        
        startBattleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 startBattleTime = 11;</code>
       */
      public Builder clearStartBattleTime() {
        
        startBattleTime_ = 0L;
        onChanged();
        return this;
      }

      private int fight_ ;
      /**
       * <pre>
       *非0战斗中
       * </pre>
       *
       * <code>int32 fight = 12;</code>
       */
      public int getFight() {
        return fight_;
      }
      /**
       * <pre>
       *非0战斗中
       * </pre>
       *
       * <code>int32 fight = 12;</code>
       */
      public Builder setFight(int value) {
        
        fight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *非0战斗中
       * </pre>
       *
       * <code>int32 fight = 12;</code>
       */
      public Builder clearFight() {
        
        fight_ = 0;
        onChanged();
        return this;
      }

      private long totalPower_ ;
      /**
       * <code>int64 totalPower = 13;</code>
       */
      public long getTotalPower() {
        return totalPower_;
      }
      /**
       * <code>int64 totalPower = 13;</code>
       */
      public Builder setTotalPower(long value) {
        
        totalPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 totalPower = 13;</code>
       */
      public Builder clearTotalPower() {
        
        totalPower_ = 0L;
        onChanged();
        return this;
      }

      private int totalLv_ ;
      /**
       * <code>int32 totalLv = 14;</code>
       */
      public int getTotalLv() {
        return totalLv_;
      }
      /**
       * <code>int32 totalLv = 14;</code>
       */
      public Builder setTotalLv(int value) {
        
        totalLv_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 totalLv = 14;</code>
       */
      public Builder clearTotalLv() {
        
        totalLv_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object battleId_ = "";
      /**
       * <code>string battleId = 15;</code>
       */
      public java.lang.String getBattleId() {
        java.lang.Object ref = battleId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          battleId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string battleId = 15;</code>
       */
      public com.google.protobuf.ByteString
          getBattleIdBytes() {
        java.lang.Object ref = battleId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          battleId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string battleId = 15;</code>
       */
      public Builder setBattleId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        battleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string battleId = 15;</code>
       */
      public Builder clearBattleId() {
        
        battleId_ = getDefaultInstance().getBattleId();
        onChanged();
        return this;
      }
      /**
       * <code>string battleId = 15;</code>
       */
      public Builder setBattleIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        battleId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CrossArenaPvpRoom)
    }

    // @@protoc_insertion_point(class_scope:CrossArenaPvpRoom)
    private static final protocol.CrossArenaPvp.CrossArenaPvpRoom DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CrossArenaPvpRoom();
    }

    public static protocol.CrossArenaPvp.CrossArenaPvpRoom getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CrossArenaPvpRoom>
        PARSER = new com.google.protobuf.AbstractParser<CrossArenaPvpRoom>() {
      public CrossArenaPvpRoom parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CrossArenaPvpRoom(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CrossArenaPvpRoom> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrossArenaPvpRoom> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CrossArenaPvpRoom getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CrossArenaPvpPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CrossArenaPvpPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    boolean hasPlayerBaseInfo();
    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    protocol.Battle.PlayerBaseInfo getPlayerBaseInfo();
    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    protocol.Battle.PlayerBaseInfoOrBuilder getPlayerBaseInfoOrBuilder();

    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    boolean hasTeamInfo();
    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    protocol.PrepareWar.TeamInfo getTeamInfo();
    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    protocol.PrepareWar.TeamInfoOrBuilder getTeamInfoOrBuilder();

    /**
     * <pre>
     *0准备 1取消
     * </pre>
     *
     * <code>int32 ready = 3;</code>
     */
    int getReady();

    /**
     * <pre>
     *来源服务器ip(即将废弃)
     * </pre>
     *
     * <code>string ip = 4;</code>
     */
    java.lang.String getIp();
    /**
     * <pre>
     *来源服务器ip(即将废弃)
     * </pre>
     *
     * <code>string ip = 4;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    java.util.List<java.lang.Integer> getBookIdsList();
    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    int getBookIdsCount();
    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    int getBookIds(int index);

    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    java.util.List<protocol.PetMessage.Pet> 
        getPetList();
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    protocol.PetMessage.Pet getPet(int index);
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    int getPetCount();
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    java.util.List<? extends protocol.PetMessage.PetOrBuilder> 
        getPetOrBuilderList();
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    protocol.PetMessage.PetOrBuilder getPetOrBuilder(
        int index);

    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    java.util.List<protocol.Battle.BattlePetData> 
        getBattlePetList();
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    protocol.Battle.BattlePetData getBattlePet(int index);
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    int getBattlePetCount();
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    java.util.List<? extends protocol.Battle.BattlePetDataOrBuilder> 
        getBattlePetOrBuilderList();
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    protocol.Battle.BattlePetDataOrBuilder getBattlePetOrBuilder(
        int index);

    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    java.util.List<protocol.Battle.SkillBattleDict> 
        getSkillList();
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    protocol.Battle.SkillBattleDict getSkill(int index);
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    int getSkillCount();
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    java.util.List<? extends protocol.Battle.SkillBattleDictOrBuilder> 
        getSkillOrBuilderList();
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    protocol.Battle.SkillBattleDictOrBuilder getSkillOrBuilder(
        int index);

    /**
     * <pre>
     *来源服务器
     * </pre>
     *
     * <code>int32 svrIndex = 9;</code>
     */
    int getSvrIndex();
  }
  /**
   * Protobuf type {@code CrossArenaPvpPlayer}
   */
  public  static final class CrossArenaPvpPlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CrossArenaPvpPlayer)
      CrossArenaPvpPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrossArenaPvpPlayer.newBuilder() to construct.
    private CrossArenaPvpPlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrossArenaPvpPlayer() {
      ready_ = 0;
      ip_ = "";
      bookIds_ = java.util.Collections.emptyList();
      pet_ = java.util.Collections.emptyList();
      battlePet_ = java.util.Collections.emptyList();
      skill_ = java.util.Collections.emptyList();
      svrIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CrossArenaPvpPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.Battle.PlayerBaseInfo.Builder subBuilder = null;
              if (playerBaseInfo_ != null) {
                subBuilder = playerBaseInfo_.toBuilder();
              }
              playerBaseInfo_ = input.readMessage(protocol.Battle.PlayerBaseInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerBaseInfo_);
                playerBaseInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              protocol.PrepareWar.TeamInfo.Builder subBuilder = null;
              if (teamInfo_ != null) {
                subBuilder = teamInfo_.toBuilder();
              }
              teamInfo_ = input.readMessage(protocol.PrepareWar.TeamInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teamInfo_);
                teamInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              ready_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                bookIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              bookIds_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                bookIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                bookIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                pet_ = new java.util.ArrayList<protocol.PetMessage.Pet>();
                mutable_bitField0_ |= 0x00000020;
              }
              pet_.add(
                  input.readMessage(protocol.PetMessage.Pet.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                battlePet_ = new java.util.ArrayList<protocol.Battle.BattlePetData>();
                mutable_bitField0_ |= 0x00000040;
              }
              battlePet_.add(
                  input.readMessage(protocol.Battle.BattlePetData.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                skill_ = new java.util.ArrayList<protocol.Battle.SkillBattleDict>();
                mutable_bitField0_ |= 0x00000080;
              }
              skill_.add(
                  input.readMessage(protocol.Battle.SkillBattleDict.parser(), extensionRegistry));
              break;
            }
            case 72: {

              svrIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          bookIds_ = java.util.Collections.unmodifiableList(bookIds_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          pet_ = java.util.Collections.unmodifiableList(pet_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          battlePet_ = java.util.Collections.unmodifiableList(battlePet_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          skill_ = java.util.Collections.unmodifiableList(skill_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CrossArenaPvpPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CrossArenaPvpPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CrossArenaPvpPlayer.class, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYERBASEINFO_FIELD_NUMBER = 1;
    private protocol.Battle.PlayerBaseInfo playerBaseInfo_;
    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    public boolean hasPlayerBaseInfo() {
      return playerBaseInfo_ != null;
    }
    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    public protocol.Battle.PlayerBaseInfo getPlayerBaseInfo() {
      return playerBaseInfo_ == null ? protocol.Battle.PlayerBaseInfo.getDefaultInstance() : playerBaseInfo_;
    }
    /**
     * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
     */
    public protocol.Battle.PlayerBaseInfoOrBuilder getPlayerBaseInfoOrBuilder() {
      return getPlayerBaseInfo();
    }

    public static final int TEAMINFO_FIELD_NUMBER = 2;
    private protocol.PrepareWar.TeamInfo teamInfo_;
    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    public boolean hasTeamInfo() {
      return teamInfo_ != null;
    }
    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    public protocol.PrepareWar.TeamInfo getTeamInfo() {
      return teamInfo_ == null ? protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamInfo_;
    }
    /**
     * <pre>
     *类型TeamInfo
     * </pre>
     *
     * <code>.TeamInfo teamInfo = 2;</code>
     */
    public protocol.PrepareWar.TeamInfoOrBuilder getTeamInfoOrBuilder() {
      return getTeamInfo();
    }

    public static final int READY_FIELD_NUMBER = 3;
    private int ready_;
    /**
     * <pre>
     *0准备 1取消
     * </pre>
     *
     * <code>int32 ready = 3;</code>
     */
    public int getReady() {
      return ready_;
    }

    public static final int IP_FIELD_NUMBER = 4;
    private volatile java.lang.Object ip_;
    /**
     * <pre>
     *来源服务器ip(即将废弃)
     * </pre>
     *
     * <code>string ip = 4;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *来源服务器ip(即将废弃)
     * </pre>
     *
     * <code>string ip = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOOKIDS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> bookIds_;
    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getBookIdsList() {
      return bookIds_;
    }
    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    public int getBookIdsCount() {
      return bookIds_.size();
    }
    /**
     * <code>repeated int32 bookIds = 5;</code>
     */
    public int getBookIds(int index) {
      return bookIds_.get(index);
    }
    private int bookIdsMemoizedSerializedSize = -1;

    public static final int PET_FIELD_NUMBER = 6;
    private java.util.List<protocol.PetMessage.Pet> pet_;
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    public java.util.List<protocol.PetMessage.Pet> getPetList() {
      return pet_;
    }
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    public java.util.List<? extends protocol.PetMessage.PetOrBuilder> 
        getPetOrBuilderList() {
      return pet_;
    }
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    public int getPetCount() {
      return pet_.size();
    }
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    public protocol.PetMessage.Pet getPet(int index) {
      return pet_.get(index);
    }
    /**
     * <code>repeated .Pet pet = 6;</code>
     */
    public protocol.PetMessage.PetOrBuilder getPetOrBuilder(
        int index) {
      return pet_.get(index);
    }

    public static final int BATTLEPET_FIELD_NUMBER = 7;
    private java.util.List<protocol.Battle.BattlePetData> battlePet_;
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    public java.util.List<protocol.Battle.BattlePetData> getBattlePetList() {
      return battlePet_;
    }
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    public java.util.List<? extends protocol.Battle.BattlePetDataOrBuilder> 
        getBattlePetOrBuilderList() {
      return battlePet_;
    }
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    public int getBattlePetCount() {
      return battlePet_.size();
    }
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    public protocol.Battle.BattlePetData getBattlePet(int index) {
      return battlePet_.get(index);
    }
    /**
     * <code>repeated .BattlePetData battlePet = 7;</code>
     */
    public protocol.Battle.BattlePetDataOrBuilder getBattlePetOrBuilder(
        int index) {
      return battlePet_.get(index);
    }

    public static final int SKILL_FIELD_NUMBER = 8;
    private java.util.List<protocol.Battle.SkillBattleDict> skill_;
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    public java.util.List<protocol.Battle.SkillBattleDict> getSkillList() {
      return skill_;
    }
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    public java.util.List<? extends protocol.Battle.SkillBattleDictOrBuilder> 
        getSkillOrBuilderList() {
      return skill_;
    }
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    public int getSkillCount() {
      return skill_.size();
    }
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    public protocol.Battle.SkillBattleDict getSkill(int index) {
      return skill_.get(index);
    }
    /**
     * <code>repeated .SkillBattleDict skill = 8;</code>
     */
    public protocol.Battle.SkillBattleDictOrBuilder getSkillOrBuilder(
        int index) {
      return skill_.get(index);
    }

    public static final int SVRINDEX_FIELD_NUMBER = 9;
    private int svrIndex_;
    /**
     * <pre>
     *来源服务器
     * </pre>
     *
     * <code>int32 svrIndex = 9;</code>
     */
    public int getSvrIndex() {
      return svrIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (playerBaseInfo_ != null) {
        output.writeMessage(1, getPlayerBaseInfo());
      }
      if (teamInfo_ != null) {
        output.writeMessage(2, getTeamInfo());
      }
      if (ready_ != 0) {
        output.writeInt32(3, ready_);
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, ip_);
      }
      if (getBookIdsList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(bookIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < bookIds_.size(); i++) {
        output.writeInt32NoTag(bookIds_.get(i));
      }
      for (int i = 0; i < pet_.size(); i++) {
        output.writeMessage(6, pet_.get(i));
      }
      for (int i = 0; i < battlePet_.size(); i++) {
        output.writeMessage(7, battlePet_.get(i));
      }
      for (int i = 0; i < skill_.size(); i++) {
        output.writeMessage(8, skill_.get(i));
      }
      if (svrIndex_ != 0) {
        output.writeInt32(9, svrIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playerBaseInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPlayerBaseInfo());
      }
      if (teamInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTeamInfo());
      }
      if (ready_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ready_);
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, ip_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bookIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bookIds_.get(i));
        }
        size += dataSize;
        if (!getBookIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        bookIdsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < pet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, pet_.get(i));
      }
      for (int i = 0; i < battlePet_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, battlePet_.get(i));
      }
      for (int i = 0; i < skill_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, skill_.get(i));
      }
      if (svrIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, svrIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CrossArenaPvpPlayer)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CrossArenaPvpPlayer other = (protocol.CrossArenaPvp.CrossArenaPvpPlayer) obj;

      boolean result = true;
      result = result && (hasPlayerBaseInfo() == other.hasPlayerBaseInfo());
      if (hasPlayerBaseInfo()) {
        result = result && getPlayerBaseInfo()
            .equals(other.getPlayerBaseInfo());
      }
      result = result && (hasTeamInfo() == other.hasTeamInfo());
      if (hasTeamInfo()) {
        result = result && getTeamInfo()
            .equals(other.getTeamInfo());
      }
      result = result && (getReady()
          == other.getReady());
      result = result && getIp()
          .equals(other.getIp());
      result = result && getBookIdsList()
          .equals(other.getBookIdsList());
      result = result && getPetList()
          .equals(other.getPetList());
      result = result && getBattlePetList()
          .equals(other.getBattlePetList());
      result = result && getSkillList()
          .equals(other.getSkillList());
      result = result && (getSvrIndex()
          == other.getSvrIndex());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPlayerBaseInfo()) {
        hash = (37 * hash) + PLAYERBASEINFO_FIELD_NUMBER;
        hash = (53 * hash) + getPlayerBaseInfo().hashCode();
      }
      if (hasTeamInfo()) {
        hash = (37 * hash) + TEAMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getTeamInfo().hashCode();
      }
      hash = (37 * hash) + READY_FIELD_NUMBER;
      hash = (53 * hash) + getReady();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      if (getBookIdsCount() > 0) {
        hash = (37 * hash) + BOOKIDS_FIELD_NUMBER;
        hash = (53 * hash) + getBookIdsList().hashCode();
      }
      if (getPetCount() > 0) {
        hash = (37 * hash) + PET_FIELD_NUMBER;
        hash = (53 * hash) + getPetList().hashCode();
      }
      if (getBattlePetCount() > 0) {
        hash = (37 * hash) + BATTLEPET_FIELD_NUMBER;
        hash = (53 * hash) + getBattlePetList().hashCode();
      }
      if (getSkillCount() > 0) {
        hash = (37 * hash) + SKILL_FIELD_NUMBER;
        hash = (53 * hash) + getSkillList().hashCode();
      }
      hash = (37 * hash) + SVRINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getSvrIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CrossArenaPvpPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CrossArenaPvpPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CrossArenaPvpPlayer)
        protocol.CrossArenaPvp.CrossArenaPvpPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CrossArenaPvpPlayer.class, protocol.CrossArenaPvp.CrossArenaPvpPlayer.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CrossArenaPvpPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPetFieldBuilder();
          getBattlePetFieldBuilder();
          getSkillFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (playerBaseInfoBuilder_ == null) {
          playerBaseInfo_ = null;
        } else {
          playerBaseInfo_ = null;
          playerBaseInfoBuilder_ = null;
        }
        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }
        ready_ = 0;

        ip_ = "";

        bookIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        if (petBuilder_ == null) {
          pet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          petBuilder_.clear();
        }
        if (battlePetBuilder_ == null) {
          battlePet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          battlePetBuilder_.clear();
        }
        if (skillBuilder_ == null) {
          skill_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          skillBuilder_.clear();
        }
        svrIndex_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CrossArenaPvpPlayer_descriptor;
      }

      public protocol.CrossArenaPvp.CrossArenaPvpPlayer getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CrossArenaPvpPlayer build() {
        protocol.CrossArenaPvp.CrossArenaPvpPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CrossArenaPvpPlayer buildPartial() {
        protocol.CrossArenaPvp.CrossArenaPvpPlayer result = new protocol.CrossArenaPvp.CrossArenaPvpPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (playerBaseInfoBuilder_ == null) {
          result.playerBaseInfo_ = playerBaseInfo_;
        } else {
          result.playerBaseInfo_ = playerBaseInfoBuilder_.build();
        }
        if (teamInfoBuilder_ == null) {
          result.teamInfo_ = teamInfo_;
        } else {
          result.teamInfo_ = teamInfoBuilder_.build();
        }
        result.ready_ = ready_;
        result.ip_ = ip_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          bookIds_ = java.util.Collections.unmodifiableList(bookIds_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.bookIds_ = bookIds_;
        if (petBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            pet_ = java.util.Collections.unmodifiableList(pet_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.pet_ = pet_;
        } else {
          result.pet_ = petBuilder_.build();
        }
        if (battlePetBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            battlePet_ = java.util.Collections.unmodifiableList(battlePet_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.battlePet_ = battlePet_;
        } else {
          result.battlePet_ = battlePetBuilder_.build();
        }
        if (skillBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            skill_ = java.util.Collections.unmodifiableList(skill_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.skill_ = skill_;
        } else {
          result.skill_ = skillBuilder_.build();
        }
        result.svrIndex_ = svrIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CrossArenaPvpPlayer) {
          return mergeFrom((protocol.CrossArenaPvp.CrossArenaPvpPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CrossArenaPvpPlayer other) {
        if (other == protocol.CrossArenaPvp.CrossArenaPvpPlayer.getDefaultInstance()) return this;
        if (other.hasPlayerBaseInfo()) {
          mergePlayerBaseInfo(other.getPlayerBaseInfo());
        }
        if (other.hasTeamInfo()) {
          mergeTeamInfo(other.getTeamInfo());
        }
        if (other.getReady() != 0) {
          setReady(other.getReady());
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (!other.bookIds_.isEmpty()) {
          if (bookIds_.isEmpty()) {
            bookIds_ = other.bookIds_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBookIdsIsMutable();
            bookIds_.addAll(other.bookIds_);
          }
          onChanged();
        }
        if (petBuilder_ == null) {
          if (!other.pet_.isEmpty()) {
            if (pet_.isEmpty()) {
              pet_ = other.pet_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensurePetIsMutable();
              pet_.addAll(other.pet_);
            }
            onChanged();
          }
        } else {
          if (!other.pet_.isEmpty()) {
            if (petBuilder_.isEmpty()) {
              petBuilder_.dispose();
              petBuilder_ = null;
              pet_ = other.pet_;
              bitField0_ = (bitField0_ & ~0x00000020);
              petBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPetFieldBuilder() : null;
            } else {
              petBuilder_.addAllMessages(other.pet_);
            }
          }
        }
        if (battlePetBuilder_ == null) {
          if (!other.battlePet_.isEmpty()) {
            if (battlePet_.isEmpty()) {
              battlePet_ = other.battlePet_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureBattlePetIsMutable();
              battlePet_.addAll(other.battlePet_);
            }
            onChanged();
          }
        } else {
          if (!other.battlePet_.isEmpty()) {
            if (battlePetBuilder_.isEmpty()) {
              battlePetBuilder_.dispose();
              battlePetBuilder_ = null;
              battlePet_ = other.battlePet_;
              bitField0_ = (bitField0_ & ~0x00000040);
              battlePetBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBattlePetFieldBuilder() : null;
            } else {
              battlePetBuilder_.addAllMessages(other.battlePet_);
            }
          }
        }
        if (skillBuilder_ == null) {
          if (!other.skill_.isEmpty()) {
            if (skill_.isEmpty()) {
              skill_ = other.skill_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureSkillIsMutable();
              skill_.addAll(other.skill_);
            }
            onChanged();
          }
        } else {
          if (!other.skill_.isEmpty()) {
            if (skillBuilder_.isEmpty()) {
              skillBuilder_.dispose();
              skillBuilder_ = null;
              skill_ = other.skill_;
              bitField0_ = (bitField0_ & ~0x00000080);
              skillBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSkillFieldBuilder() : null;
            } else {
              skillBuilder_.addAllMessages(other.skill_);
            }
          }
        }
        if (other.getSvrIndex() != 0) {
          setSvrIndex(other.getSvrIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CrossArenaPvpPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CrossArenaPvpPlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private protocol.Battle.PlayerBaseInfo playerBaseInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.PlayerBaseInfo, protocol.Battle.PlayerBaseInfo.Builder, protocol.Battle.PlayerBaseInfoOrBuilder> playerBaseInfoBuilder_;
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public boolean hasPlayerBaseInfo() {
        return playerBaseInfoBuilder_ != null || playerBaseInfo_ != null;
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public protocol.Battle.PlayerBaseInfo getPlayerBaseInfo() {
        if (playerBaseInfoBuilder_ == null) {
          return playerBaseInfo_ == null ? protocol.Battle.PlayerBaseInfo.getDefaultInstance() : playerBaseInfo_;
        } else {
          return playerBaseInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public Builder setPlayerBaseInfo(protocol.Battle.PlayerBaseInfo value) {
        if (playerBaseInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerBaseInfo_ = value;
          onChanged();
        } else {
          playerBaseInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public Builder setPlayerBaseInfo(
          protocol.Battle.PlayerBaseInfo.Builder builderForValue) {
        if (playerBaseInfoBuilder_ == null) {
          playerBaseInfo_ = builderForValue.build();
          onChanged();
        } else {
          playerBaseInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public Builder mergePlayerBaseInfo(protocol.Battle.PlayerBaseInfo value) {
        if (playerBaseInfoBuilder_ == null) {
          if (playerBaseInfo_ != null) {
            playerBaseInfo_ =
              protocol.Battle.PlayerBaseInfo.newBuilder(playerBaseInfo_).mergeFrom(value).buildPartial();
          } else {
            playerBaseInfo_ = value;
          }
          onChanged();
        } else {
          playerBaseInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public Builder clearPlayerBaseInfo() {
        if (playerBaseInfoBuilder_ == null) {
          playerBaseInfo_ = null;
          onChanged();
        } else {
          playerBaseInfo_ = null;
          playerBaseInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public protocol.Battle.PlayerBaseInfo.Builder getPlayerBaseInfoBuilder() {
        
        onChanged();
        return getPlayerBaseInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      public protocol.Battle.PlayerBaseInfoOrBuilder getPlayerBaseInfoOrBuilder() {
        if (playerBaseInfoBuilder_ != null) {
          return playerBaseInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerBaseInfo_ == null ?
              protocol.Battle.PlayerBaseInfo.getDefaultInstance() : playerBaseInfo_;
        }
      }
      /**
       * <code>.PlayerBaseInfo playerBaseInfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.PlayerBaseInfo, protocol.Battle.PlayerBaseInfo.Builder, protocol.Battle.PlayerBaseInfoOrBuilder> 
          getPlayerBaseInfoFieldBuilder() {
        if (playerBaseInfoBuilder_ == null) {
          playerBaseInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Battle.PlayerBaseInfo, protocol.Battle.PlayerBaseInfo.Builder, protocol.Battle.PlayerBaseInfoOrBuilder>(
                  getPlayerBaseInfo(),
                  getParentForChildren(),
                  isClean());
          playerBaseInfo_ = null;
        }
        return playerBaseInfoBuilder_;
      }

      private protocol.PrepareWar.TeamInfo teamInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder> teamInfoBuilder_;
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public boolean hasTeamInfo() {
        return teamInfoBuilder_ != null || teamInfo_ != null;
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public protocol.PrepareWar.TeamInfo getTeamInfo() {
        if (teamInfoBuilder_ == null) {
          return teamInfo_ == null ? protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamInfo_;
        } else {
          return teamInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public Builder setTeamInfo(protocol.PrepareWar.TeamInfo value) {
        if (teamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teamInfo_ = value;
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public Builder setTeamInfo(
          protocol.PrepareWar.TeamInfo.Builder builderForValue) {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = builderForValue.build();
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public Builder mergeTeamInfo(protocol.PrepareWar.TeamInfo value) {
        if (teamInfoBuilder_ == null) {
          if (teamInfo_ != null) {
            teamInfo_ =
              protocol.PrepareWar.TeamInfo.newBuilder(teamInfo_).mergeFrom(value).buildPartial();
          } else {
            teamInfo_ = value;
          }
          onChanged();
        } else {
          teamInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public Builder clearTeamInfo() {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
          onChanged();
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public protocol.PrepareWar.TeamInfo.Builder getTeamInfoBuilder() {
        
        onChanged();
        return getTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      public protocol.PrepareWar.TeamInfoOrBuilder getTeamInfoOrBuilder() {
        if (teamInfoBuilder_ != null) {
          return teamInfoBuilder_.getMessageOrBuilder();
        } else {
          return teamInfo_ == null ?
              protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamInfo_;
        }
      }
      /**
       * <pre>
       *类型TeamInfo
       * </pre>
       *
       * <code>.TeamInfo teamInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder> 
          getTeamInfoFieldBuilder() {
        if (teamInfoBuilder_ == null) {
          teamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder>(
                  getTeamInfo(),
                  getParentForChildren(),
                  isClean());
          teamInfo_ = null;
        }
        return teamInfoBuilder_;
      }

      private int ready_ ;
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 3;</code>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 3;</code>
       */
      public Builder setReady(int value) {
        
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 3;</code>
       */
      public Builder clearReady() {
        
        ready_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <pre>
       *来源服务器ip(即将废弃)
       * </pre>
       *
       * <code>string ip = 4;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *来源服务器ip(即将废弃)
       * </pre>
       *
       * <code>string ip = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *来源服务器ip(即将废弃)
       * </pre>
       *
       * <code>string ip = 4;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来源服务器ip(即将废弃)
       * </pre>
       *
       * <code>string ip = 4;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来源服务器ip(即将废弃)
       * </pre>
       *
       * <code>string ip = 4;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> bookIds_ = java.util.Collections.emptyList();
      private void ensureBookIdsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          bookIds_ = new java.util.ArrayList<java.lang.Integer>(bookIds_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getBookIdsList() {
        return java.util.Collections.unmodifiableList(bookIds_);
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public int getBookIdsCount() {
        return bookIds_.size();
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public int getBookIds(int index) {
        return bookIds_.get(index);
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public Builder setBookIds(
          int index, int value) {
        ensureBookIdsIsMutable();
        bookIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public Builder addBookIds(int value) {
        ensureBookIdsIsMutable();
        bookIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public Builder addAllBookIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBookIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bookIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookIds = 5;</code>
       */
      public Builder clearBookIds() {
        bookIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<protocol.PetMessage.Pet> pet_ =
        java.util.Collections.emptyList();
      private void ensurePetIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          pet_ = new java.util.ArrayList<protocol.PetMessage.Pet>(pet_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PetMessage.Pet, protocol.PetMessage.Pet.Builder, protocol.PetMessage.PetOrBuilder> petBuilder_;

      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public java.util.List<protocol.PetMessage.Pet> getPetList() {
        if (petBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pet_);
        } else {
          return petBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public int getPetCount() {
        if (petBuilder_ == null) {
          return pet_.size();
        } else {
          return petBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public protocol.PetMessage.Pet getPet(int index) {
        if (petBuilder_ == null) {
          return pet_.get(index);
        } else {
          return petBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder setPet(
          int index, protocol.PetMessage.Pet value) {
        if (petBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePetIsMutable();
          pet_.set(index, value);
          onChanged();
        } else {
          petBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder setPet(
          int index, protocol.PetMessage.Pet.Builder builderForValue) {
        if (petBuilder_ == null) {
          ensurePetIsMutable();
          pet_.set(index, builderForValue.build());
          onChanged();
        } else {
          petBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder addPet(protocol.PetMessage.Pet value) {
        if (petBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePetIsMutable();
          pet_.add(value);
          onChanged();
        } else {
          petBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder addPet(
          int index, protocol.PetMessage.Pet value) {
        if (petBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePetIsMutable();
          pet_.add(index, value);
          onChanged();
        } else {
          petBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder addPet(
          protocol.PetMessage.Pet.Builder builderForValue) {
        if (petBuilder_ == null) {
          ensurePetIsMutable();
          pet_.add(builderForValue.build());
          onChanged();
        } else {
          petBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder addPet(
          int index, protocol.PetMessage.Pet.Builder builderForValue) {
        if (petBuilder_ == null) {
          ensurePetIsMutable();
          pet_.add(index, builderForValue.build());
          onChanged();
        } else {
          petBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder addAllPet(
          java.lang.Iterable<? extends protocol.PetMessage.Pet> values) {
        if (petBuilder_ == null) {
          ensurePetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pet_);
          onChanged();
        } else {
          petBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder clearPet() {
        if (petBuilder_ == null) {
          pet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          petBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public Builder removePet(int index) {
        if (petBuilder_ == null) {
          ensurePetIsMutable();
          pet_.remove(index);
          onChanged();
        } else {
          petBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public protocol.PetMessage.Pet.Builder getPetBuilder(
          int index) {
        return getPetFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public protocol.PetMessage.PetOrBuilder getPetOrBuilder(
          int index) {
        if (petBuilder_ == null) {
          return pet_.get(index);  } else {
          return petBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public java.util.List<? extends protocol.PetMessage.PetOrBuilder> 
           getPetOrBuilderList() {
        if (petBuilder_ != null) {
          return petBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pet_);
        }
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public protocol.PetMessage.Pet.Builder addPetBuilder() {
        return getPetFieldBuilder().addBuilder(
            protocol.PetMessage.Pet.getDefaultInstance());
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public protocol.PetMessage.Pet.Builder addPetBuilder(
          int index) {
        return getPetFieldBuilder().addBuilder(
            index, protocol.PetMessage.Pet.getDefaultInstance());
      }
      /**
       * <code>repeated .Pet pet = 6;</code>
       */
      public java.util.List<protocol.PetMessage.Pet.Builder> 
           getPetBuilderList() {
        return getPetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PetMessage.Pet, protocol.PetMessage.Pet.Builder, protocol.PetMessage.PetOrBuilder> 
          getPetFieldBuilder() {
        if (petBuilder_ == null) {
          petBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.PetMessage.Pet, protocol.PetMessage.Pet.Builder, protocol.PetMessage.PetOrBuilder>(
                  pet_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          pet_ = null;
        }
        return petBuilder_;
      }

      private java.util.List<protocol.Battle.BattlePetData> battlePet_ =
        java.util.Collections.emptyList();
      private void ensureBattlePetIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          battlePet_ = new java.util.ArrayList<protocol.Battle.BattlePetData>(battlePet_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.BattlePetData, protocol.Battle.BattlePetData.Builder, protocol.Battle.BattlePetDataOrBuilder> battlePetBuilder_;

      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public java.util.List<protocol.Battle.BattlePetData> getBattlePetList() {
        if (battlePetBuilder_ == null) {
          return java.util.Collections.unmodifiableList(battlePet_);
        } else {
          return battlePetBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public int getBattlePetCount() {
        if (battlePetBuilder_ == null) {
          return battlePet_.size();
        } else {
          return battlePetBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public protocol.Battle.BattlePetData getBattlePet(int index) {
        if (battlePetBuilder_ == null) {
          return battlePet_.get(index);
        } else {
          return battlePetBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder setBattlePet(
          int index, protocol.Battle.BattlePetData value) {
        if (battlePetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBattlePetIsMutable();
          battlePet_.set(index, value);
          onChanged();
        } else {
          battlePetBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder setBattlePet(
          int index, protocol.Battle.BattlePetData.Builder builderForValue) {
        if (battlePetBuilder_ == null) {
          ensureBattlePetIsMutable();
          battlePet_.set(index, builderForValue.build());
          onChanged();
        } else {
          battlePetBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder addBattlePet(protocol.Battle.BattlePetData value) {
        if (battlePetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBattlePetIsMutable();
          battlePet_.add(value);
          onChanged();
        } else {
          battlePetBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder addBattlePet(
          int index, protocol.Battle.BattlePetData value) {
        if (battlePetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBattlePetIsMutable();
          battlePet_.add(index, value);
          onChanged();
        } else {
          battlePetBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder addBattlePet(
          protocol.Battle.BattlePetData.Builder builderForValue) {
        if (battlePetBuilder_ == null) {
          ensureBattlePetIsMutable();
          battlePet_.add(builderForValue.build());
          onChanged();
        } else {
          battlePetBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder addBattlePet(
          int index, protocol.Battle.BattlePetData.Builder builderForValue) {
        if (battlePetBuilder_ == null) {
          ensureBattlePetIsMutable();
          battlePet_.add(index, builderForValue.build());
          onChanged();
        } else {
          battlePetBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder addAllBattlePet(
          java.lang.Iterable<? extends protocol.Battle.BattlePetData> values) {
        if (battlePetBuilder_ == null) {
          ensureBattlePetIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, battlePet_);
          onChanged();
        } else {
          battlePetBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder clearBattlePet() {
        if (battlePetBuilder_ == null) {
          battlePet_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          battlePetBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public Builder removeBattlePet(int index) {
        if (battlePetBuilder_ == null) {
          ensureBattlePetIsMutable();
          battlePet_.remove(index);
          onChanged();
        } else {
          battlePetBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public protocol.Battle.BattlePetData.Builder getBattlePetBuilder(
          int index) {
        return getBattlePetFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public protocol.Battle.BattlePetDataOrBuilder getBattlePetOrBuilder(
          int index) {
        if (battlePetBuilder_ == null) {
          return battlePet_.get(index);  } else {
          return battlePetBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public java.util.List<? extends protocol.Battle.BattlePetDataOrBuilder> 
           getBattlePetOrBuilderList() {
        if (battlePetBuilder_ != null) {
          return battlePetBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(battlePet_);
        }
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public protocol.Battle.BattlePetData.Builder addBattlePetBuilder() {
        return getBattlePetFieldBuilder().addBuilder(
            protocol.Battle.BattlePetData.getDefaultInstance());
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public protocol.Battle.BattlePetData.Builder addBattlePetBuilder(
          int index) {
        return getBattlePetFieldBuilder().addBuilder(
            index, protocol.Battle.BattlePetData.getDefaultInstance());
      }
      /**
       * <code>repeated .BattlePetData battlePet = 7;</code>
       */
      public java.util.List<protocol.Battle.BattlePetData.Builder> 
           getBattlePetBuilderList() {
        return getBattlePetFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.BattlePetData, protocol.Battle.BattlePetData.Builder, protocol.Battle.BattlePetDataOrBuilder> 
          getBattlePetFieldBuilder() {
        if (battlePetBuilder_ == null) {
          battlePetBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Battle.BattlePetData, protocol.Battle.BattlePetData.Builder, protocol.Battle.BattlePetDataOrBuilder>(
                  battlePet_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          battlePet_ = null;
        }
        return battlePetBuilder_;
      }

      private java.util.List<protocol.Battle.SkillBattleDict> skill_ =
        java.util.Collections.emptyList();
      private void ensureSkillIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          skill_ = new java.util.ArrayList<protocol.Battle.SkillBattleDict>(skill_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.SkillBattleDict, protocol.Battle.SkillBattleDict.Builder, protocol.Battle.SkillBattleDictOrBuilder> skillBuilder_;

      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public java.util.List<protocol.Battle.SkillBattleDict> getSkillList() {
        if (skillBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skill_);
        } else {
          return skillBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public int getSkillCount() {
        if (skillBuilder_ == null) {
          return skill_.size();
        } else {
          return skillBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public protocol.Battle.SkillBattleDict getSkill(int index) {
        if (skillBuilder_ == null) {
          return skill_.get(index);
        } else {
          return skillBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder setSkill(
          int index, protocol.Battle.SkillBattleDict value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.set(index, value);
          onChanged();
        } else {
          skillBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder setSkill(
          int index, protocol.Battle.SkillBattleDict.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder addSkill(protocol.Battle.SkillBattleDict value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.add(value);
          onChanged();
        } else {
          skillBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder addSkill(
          int index, protocol.Battle.SkillBattleDict value) {
        if (skillBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillIsMutable();
          skill_.add(index, value);
          onChanged();
        } else {
          skillBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder addSkill(
          protocol.Battle.SkillBattleDict.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.add(builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder addSkill(
          int index, protocol.Battle.SkillBattleDict.Builder builderForValue) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder addAllSkill(
          java.lang.Iterable<? extends protocol.Battle.SkillBattleDict> values) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, skill_);
          onChanged();
        } else {
          skillBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder clearSkill() {
        if (skillBuilder_ == null) {
          skill_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          skillBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public Builder removeSkill(int index) {
        if (skillBuilder_ == null) {
          ensureSkillIsMutable();
          skill_.remove(index);
          onChanged();
        } else {
          skillBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public protocol.Battle.SkillBattleDict.Builder getSkillBuilder(
          int index) {
        return getSkillFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public protocol.Battle.SkillBattleDictOrBuilder getSkillOrBuilder(
          int index) {
        if (skillBuilder_ == null) {
          return skill_.get(index);  } else {
          return skillBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public java.util.List<? extends protocol.Battle.SkillBattleDictOrBuilder> 
           getSkillOrBuilderList() {
        if (skillBuilder_ != null) {
          return skillBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skill_);
        }
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public protocol.Battle.SkillBattleDict.Builder addSkillBuilder() {
        return getSkillFieldBuilder().addBuilder(
            protocol.Battle.SkillBattleDict.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public protocol.Battle.SkillBattleDict.Builder addSkillBuilder(
          int index) {
        return getSkillFieldBuilder().addBuilder(
            index, protocol.Battle.SkillBattleDict.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillBattleDict skill = 8;</code>
       */
      public java.util.List<protocol.Battle.SkillBattleDict.Builder> 
           getSkillBuilderList() {
        return getSkillFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.SkillBattleDict, protocol.Battle.SkillBattleDict.Builder, protocol.Battle.SkillBattleDictOrBuilder> 
          getSkillFieldBuilder() {
        if (skillBuilder_ == null) {
          skillBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Battle.SkillBattleDict, protocol.Battle.SkillBattleDict.Builder, protocol.Battle.SkillBattleDictOrBuilder>(
                  skill_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          skill_ = null;
        }
        return skillBuilder_;
      }

      private int svrIndex_ ;
      /**
       * <pre>
       *来源服务器
       * </pre>
       *
       * <code>int32 svrIndex = 9;</code>
       */
      public int getSvrIndex() {
        return svrIndex_;
      }
      /**
       * <pre>
       *来源服务器
       * </pre>
       *
       * <code>int32 svrIndex = 9;</code>
       */
      public Builder setSvrIndex(int value) {
        
        svrIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *来源服务器
       * </pre>
       *
       * <code>int32 svrIndex = 9;</code>
       */
      public Builder clearSvrIndex() {
        
        svrIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CrossArenaPvpPlayer)
    }

    // @@protoc_insertion_point(class_scope:CrossArenaPvpPlayer)
    private static final protocol.CrossArenaPvp.CrossArenaPvpPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CrossArenaPvpPlayer();
    }

    public static protocol.CrossArenaPvp.CrossArenaPvpPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CrossArenaPvpPlayer>
        PARSER = new com.google.protobuf.AbstractParser<CrossArenaPvpPlayer>() {
      public CrossArenaPvpPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CrossArenaPvpPlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CrossArenaPvpPlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrossArenaPvpPlayer> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CrossArenaPvpPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *0进入 1退出
     * </pre>
     *
     * <code>int32 join = 2;</code>
     */
    int getJoin();

    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    java.util.List<protocol.PrepareWar.PositionPetMap> 
        getMapsList();
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    protocol.PrepareWar.PositionPetMap getMaps(int index);
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    int getMapsCount();
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
        getMapsOrBuilderList();
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
        int index);

    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    java.util.List<protocol.PrepareWar.SkillMap> 
        getSkillMapList();
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    protocol.PrepareWar.SkillMap getSkillMap(int index);
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    int getSkillMapCount();
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
        getSkillMapOrBuilderList();
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
        int index);
  }
  /**
   * <pre>
   *加入房间,已加入则退出
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpJoin}
   */
  public  static final class CS_CrossArenaPvpJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpJoin)
      CS_CrossArenaPvpJoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpJoin.newBuilder() to construct.
    private CS_CrossArenaPvpJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpJoin() {
      id_ = "";
      join_ = 0;
      maps_ = java.util.Collections.emptyList();
      skillMap_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              join_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                maps_ = new java.util.ArrayList<protocol.PrepareWar.PositionPetMap>();
                mutable_bitField0_ |= 0x00000004;
              }
              maps_.add(
                  input.readMessage(protocol.PrepareWar.PositionPetMap.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                skillMap_ = new java.util.ArrayList<protocol.PrepareWar.SkillMap>();
                mutable_bitField0_ |= 0x00000008;
              }
              skillMap_.add(
                  input.readMessage(protocol.PrepareWar.SkillMap.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          maps_ = java.util.Collections.unmodifiableList(maps_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          skillMap_ = java.util.Collections.unmodifiableList(skillMap_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpJoin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.class, protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JOIN_FIELD_NUMBER = 2;
    private int join_;
    /**
     * <pre>
     *0进入 1退出
     * </pre>
     *
     * <code>int32 join = 2;</code>
     */
    public int getJoin() {
      return join_;
    }

    public static final int MAPS_FIELD_NUMBER = 3;
    private java.util.List<protocol.PrepareWar.PositionPetMap> maps_;
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    public java.util.List<protocol.PrepareWar.PositionPetMap> getMapsList() {
      return maps_;
    }
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    public java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
        getMapsOrBuilderList() {
      return maps_;
    }
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    public int getMapsCount() {
      return maps_.size();
    }
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    public protocol.PrepareWar.PositionPetMap getMaps(int index) {
      return maps_.get(index);
    }
    /**
     * <code>repeated .PositionPetMap maps = 3;</code>
     */
    public protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
        int index) {
      return maps_.get(index);
    }

    public static final int SKILLMAP_FIELD_NUMBER = 4;
    private java.util.List<protocol.PrepareWar.SkillMap> skillMap_;
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    public java.util.List<protocol.PrepareWar.SkillMap> getSkillMapList() {
      return skillMap_;
    }
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    public java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
        getSkillMapOrBuilderList() {
      return skillMap_;
    }
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    public int getSkillMapCount() {
      return skillMap_.size();
    }
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    public protocol.PrepareWar.SkillMap getSkillMap(int index) {
      return skillMap_.get(index);
    }
    /**
     * <code>repeated .SkillMap skillMap = 4;</code>
     */
    public protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
        int index) {
      return skillMap_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (join_ != 0) {
        output.writeInt32(2, join_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        output.writeMessage(3, maps_.get(i));
      }
      for (int i = 0; i < skillMap_.size(); i++) {
        output.writeMessage(4, skillMap_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (join_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, join_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, maps_.get(i));
      }
      for (int i = 0; i < skillMap_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, skillMap_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpJoin)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpJoin other = (protocol.CrossArenaPvp.CS_CrossArenaPvpJoin) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getJoin()
          == other.getJoin());
      result = result && getMapsList()
          .equals(other.getMapsList());
      result = result && getSkillMapList()
          .equals(other.getSkillMapList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + JOIN_FIELD_NUMBER;
      hash = (53 * hash) + getJoin();
      if (getMapsCount() > 0) {
        hash = (37 * hash) + MAPS_FIELD_NUMBER;
        hash = (53 * hash) + getMapsList().hashCode();
      }
      if (getSkillMapCount() > 0) {
        hash = (37 * hash) + SKILLMAP_FIELD_NUMBER;
        hash = (53 * hash) + getSkillMapList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *加入房间,已加入则退出
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpJoin)
        protocol.CrossArenaPvp.CS_CrossArenaPvpJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpJoin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.class, protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMapsFieldBuilder();
          getSkillMapFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        join_ = 0;

        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          mapsBuilder_.clear();
        }
        if (skillMapBuilder_ == null) {
          skillMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          skillMapBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpJoin_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpJoin getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpJoin build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpJoin buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpJoin result = new protocol.CrossArenaPvp.CS_CrossArenaPvpJoin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.join_ = join_;
        if (mapsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            maps_ = java.util.Collections.unmodifiableList(maps_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.maps_ = maps_;
        } else {
          result.maps_ = mapsBuilder_.build();
        }
        if (skillMapBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            skillMap_ = java.util.Collections.unmodifiableList(skillMap_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.skillMap_ = skillMap_;
        } else {
          result.skillMap_ = skillMapBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpJoin) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpJoin other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpJoin.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getJoin() != 0) {
          setJoin(other.getJoin());
        }
        if (mapsBuilder_ == null) {
          if (!other.maps_.isEmpty()) {
            if (maps_.isEmpty()) {
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMapsIsMutable();
              maps_.addAll(other.maps_);
            }
            onChanged();
          }
        } else {
          if (!other.maps_.isEmpty()) {
            if (mapsBuilder_.isEmpty()) {
              mapsBuilder_.dispose();
              mapsBuilder_ = null;
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000004);
              mapsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMapsFieldBuilder() : null;
            } else {
              mapsBuilder_.addAllMessages(other.maps_);
            }
          }
        }
        if (skillMapBuilder_ == null) {
          if (!other.skillMap_.isEmpty()) {
            if (skillMap_.isEmpty()) {
              skillMap_ = other.skillMap_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSkillMapIsMutable();
              skillMap_.addAll(other.skillMap_);
            }
            onChanged();
          }
        } else {
          if (!other.skillMap_.isEmpty()) {
            if (skillMapBuilder_.isEmpty()) {
              skillMapBuilder_.dispose();
              skillMapBuilder_ = null;
              skillMap_ = other.skillMap_;
              bitField0_ = (bitField0_ & ~0x00000008);
              skillMapBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSkillMapFieldBuilder() : null;
            } else {
              skillMapBuilder_.addAllMessages(other.skillMap_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int join_ ;
      /**
       * <pre>
       *0进入 1退出
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public int getJoin() {
        return join_;
      }
      /**
       * <pre>
       *0进入 1退出
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public Builder setJoin(int value) {
        
        join_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0进入 1退出
       * </pre>
       *
       * <code>int32 join = 2;</code>
       */
      public Builder clearJoin() {
        
        join_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol.PrepareWar.PositionPetMap> maps_ =
        java.util.Collections.emptyList();
      private void ensureMapsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          maps_ = new java.util.ArrayList<protocol.PrepareWar.PositionPetMap>(maps_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder> mapsBuilder_;

      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public java.util.List<protocol.PrepareWar.PositionPetMap> getMapsList() {
        if (mapsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(maps_);
        } else {
          return mapsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public int getMapsCount() {
        if (mapsBuilder_ == null) {
          return maps_.size();
        } else {
          return mapsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public protocol.PrepareWar.PositionPetMap getMaps(int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);
        } else {
          return mapsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder setMaps(
          int index, protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.set(index, value);
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder setMaps(
          int index, protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder addMaps(protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder addMaps(
          int index, protocol.PrepareWar.PositionPetMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(index, value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder addMaps(
          protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder addMaps(
          int index, protocol.PrepareWar.PositionPetMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder addAllMaps(
          java.lang.Iterable<? extends protocol.PrepareWar.PositionPetMap> values) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, maps_);
          onChanged();
        } else {
          mapsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder clearMaps() {
        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          mapsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public Builder removeMaps(int index) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.remove(index);
          onChanged();
        } else {
          mapsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder getMapsBuilder(
          int index) {
        return getMapsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public protocol.PrepareWar.PositionPetMapOrBuilder getMapsOrBuilder(
          int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);  } else {
          return mapsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public java.util.List<? extends protocol.PrepareWar.PositionPetMapOrBuilder> 
           getMapsOrBuilderList() {
        if (mapsBuilder_ != null) {
          return mapsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(maps_);
        }
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder addMapsBuilder() {
        return getMapsFieldBuilder().addBuilder(
            protocol.PrepareWar.PositionPetMap.getDefaultInstance());
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public protocol.PrepareWar.PositionPetMap.Builder addMapsBuilder(
          int index) {
        return getMapsFieldBuilder().addBuilder(
            index, protocol.PrepareWar.PositionPetMap.getDefaultInstance());
      }
      /**
       * <code>repeated .PositionPetMap maps = 3;</code>
       */
      public java.util.List<protocol.PrepareWar.PositionPetMap.Builder> 
           getMapsBuilderList() {
        return getMapsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder> 
          getMapsFieldBuilder() {
        if (mapsBuilder_ == null) {
          mapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.PrepareWar.PositionPetMap, protocol.PrepareWar.PositionPetMap.Builder, protocol.PrepareWar.PositionPetMapOrBuilder>(
                  maps_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          maps_ = null;
        }
        return mapsBuilder_;
      }

      private java.util.List<protocol.PrepareWar.SkillMap> skillMap_ =
        java.util.Collections.emptyList();
      private void ensureSkillMapIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          skillMap_ = new java.util.ArrayList<protocol.PrepareWar.SkillMap>(skillMap_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder> skillMapBuilder_;

      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public java.util.List<protocol.PrepareWar.SkillMap> getSkillMapList() {
        if (skillMapBuilder_ == null) {
          return java.util.Collections.unmodifiableList(skillMap_);
        } else {
          return skillMapBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public int getSkillMapCount() {
        if (skillMapBuilder_ == null) {
          return skillMap_.size();
        } else {
          return skillMapBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public protocol.PrepareWar.SkillMap getSkillMap(int index) {
        if (skillMapBuilder_ == null) {
          return skillMap_.get(index);
        } else {
          return skillMapBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder setSkillMap(
          int index, protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.set(index, value);
          onChanged();
        } else {
          skillMapBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder setSkillMap(
          int index, protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.set(index, builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder addSkillMap(protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.add(value);
          onChanged();
        } else {
          skillMapBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder addSkillMap(
          int index, protocol.PrepareWar.SkillMap value) {
        if (skillMapBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSkillMapIsMutable();
          skillMap_.add(index, value);
          onChanged();
        } else {
          skillMapBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder addSkillMap(
          protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.add(builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder addSkillMap(
          int index, protocol.PrepareWar.SkillMap.Builder builderForValue) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.add(index, builderForValue.build());
          onChanged();
        } else {
          skillMapBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder addAllSkillMap(
          java.lang.Iterable<? extends protocol.PrepareWar.SkillMap> values) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, skillMap_);
          onChanged();
        } else {
          skillMapBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder clearSkillMap() {
        if (skillMapBuilder_ == null) {
          skillMap_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          skillMapBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public Builder removeSkillMap(int index) {
        if (skillMapBuilder_ == null) {
          ensureSkillMapIsMutable();
          skillMap_.remove(index);
          onChanged();
        } else {
          skillMapBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder getSkillMapBuilder(
          int index) {
        return getSkillMapFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public protocol.PrepareWar.SkillMapOrBuilder getSkillMapOrBuilder(
          int index) {
        if (skillMapBuilder_ == null) {
          return skillMap_.get(index);  } else {
          return skillMapBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public java.util.List<? extends protocol.PrepareWar.SkillMapOrBuilder> 
           getSkillMapOrBuilderList() {
        if (skillMapBuilder_ != null) {
          return skillMapBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(skillMap_);
        }
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder addSkillMapBuilder() {
        return getSkillMapFieldBuilder().addBuilder(
            protocol.PrepareWar.SkillMap.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public protocol.PrepareWar.SkillMap.Builder addSkillMapBuilder(
          int index) {
        return getSkillMapFieldBuilder().addBuilder(
            index, protocol.PrepareWar.SkillMap.getDefaultInstance());
      }
      /**
       * <code>repeated .SkillMap skillMap = 4;</code>
       */
      public java.util.List<protocol.PrepareWar.SkillMap.Builder> 
           getSkillMapBuilderList() {
        return getSkillMapFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder> 
          getSkillMapFieldBuilder() {
        if (skillMapBuilder_ == null) {
          skillMapBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.PrepareWar.SkillMap, protocol.PrepareWar.SkillMap.Builder, protocol.PrepareWar.SkillMapOrBuilder>(
                  skillMap_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          skillMap_ = null;
        }
        return skillMapBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpJoin)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpJoin)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpJoin();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpJoin>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpJoin>() {
      public CS_CrossArenaPvpJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpJoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpJoin> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpUpdateTeamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpUpdateTeam)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpUpdateTeam}
   */
  public  static final class CS_CrossArenaPvpUpdateTeam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpUpdateTeam)
      CS_CrossArenaPvpUpdateTeamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpUpdateTeam.newBuilder() to construct.
    private CS_CrossArenaPvpUpdateTeam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpUpdateTeam() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpUpdateTeam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpUpdateTeam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpUpdateTeam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.class, protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam other = (protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpUpdateTeam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpUpdateTeam)
        protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpUpdateTeam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpUpdateTeam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.class, protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpUpdateTeam_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam result = new protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpUpdateTeam)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpUpdateTeam)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpUpdateTeam>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpUpdateTeam>() {
      public CS_CrossArenaPvpUpdateTeam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpUpdateTeam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpUpdateTeam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpUpdateTeam> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpUpdateTeam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpJoinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpJoin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpJoin}
   */
  public  static final class SC_CrossArenaPvpJoin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpJoin)
      SC_CrossArenaPvpJoinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpJoin.newBuilder() to construct.
    private SC_CrossArenaPvpJoin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpJoin() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpJoin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpJoin_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpJoin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.class, protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpJoin)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpJoin other = (protocol.CrossArenaPvp.SC_CrossArenaPvpJoin) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpJoin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpJoin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpJoin)
        protocol.CrossArenaPvp.SC_CrossArenaPvpJoinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpJoin_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpJoin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.class, protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpJoin_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpJoin getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpJoin build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpJoin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpJoin buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpJoin result = new protocol.CrossArenaPvp.SC_CrossArenaPvpJoin(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpJoin) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpJoin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpJoin other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpJoin.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpJoin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpJoin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpJoin)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpJoin)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpJoin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpJoin();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpJoin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpJoin>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpJoin>() {
      public SC_CrossArenaPvpJoin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpJoin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpJoin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpJoin> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpJoin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpReadyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpReady)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     *0准备 1取消
     * </pre>
     *
     * <code>int32 ready = 2;</code>
     */
    int getReady();
  }
  /**
   * <pre>
   *准备
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpReady}
   */
  public  static final class CS_CrossArenaPvpReady extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpReady)
      CS_CrossArenaPvpReadyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpReady.newBuilder() to construct.
    private CS_CrossArenaPvpReady(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpReady() {
      id_ = "";
      ready_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpReady(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 16: {

              ready_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpReady_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpReady_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpReady.class, protocol.CrossArenaPvp.CS_CrossArenaPvpReady.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int READY_FIELD_NUMBER = 2;
    private int ready_;
    /**
     * <pre>
     *0准备 1取消
     * </pre>
     *
     * <code>int32 ready = 2;</code>
     */
    public int getReady() {
      return ready_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (ready_ != 0) {
        output.writeInt32(2, ready_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (ready_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, ready_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpReady)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpReady other = (protocol.CrossArenaPvp.CS_CrossArenaPvpReady) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && (getReady()
          == other.getReady());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + READY_FIELD_NUMBER;
      hash = (53 * hash) + getReady();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpReady prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *准备
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpReady}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpReady)
        protocol.CrossArenaPvp.CS_CrossArenaPvpReadyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpReady_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpReady_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpReady.class, protocol.CrossArenaPvp.CS_CrossArenaPvpReady.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpReady.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        ready_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpReady_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpReady getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpReady.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpReady build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpReady result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpReady buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpReady result = new protocol.CrossArenaPvp.CS_CrossArenaPvpReady(this);
        result.id_ = id_;
        result.ready_ = ready_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpReady) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpReady)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpReady other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpReady.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (other.getReady() != 0) {
          setReady(other.getReady());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpReady parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpReady) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private int ready_ ;
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 2;</code>
       */
      public int getReady() {
        return ready_;
      }
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 2;</code>
       */
      public Builder setReady(int value) {
        
        ready_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0准备 1取消
       * </pre>
       *
       * <code>int32 ready = 2;</code>
       */
      public Builder clearReady() {
        
        ready_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpReady)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpReady)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpReady DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpReady();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpReady getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpReady>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpReady>() {
      public CS_CrossArenaPvpReady parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpReady(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpReady> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpReady> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpReady getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpReadyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpReady)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpReady}
   */
  public  static final class SC_CrossArenaPvpReady extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpReady)
      SC_CrossArenaPvpReadyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpReady.newBuilder() to construct.
    private SC_CrossArenaPvpReady(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpReady() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpReady(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpReady_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpReady_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpReady.class, protocol.CrossArenaPvp.SC_CrossArenaPvpReady.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpReady)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpReady other = (protocol.CrossArenaPvp.SC_CrossArenaPvpReady) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpReady prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpReady}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpReady)
        protocol.CrossArenaPvp.SC_CrossArenaPvpReadyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpReady_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpReady_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpReady.class, protocol.CrossArenaPvp.SC_CrossArenaPvpReady.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpReady.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpReady_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpReady getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpReady.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpReady build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpReady result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpReady buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpReady result = new protocol.CrossArenaPvp.SC_CrossArenaPvpReady(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpReady) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpReady)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpReady other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpReady.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpReady parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpReady) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpReady)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpReady)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpReady DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpReady();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpReady getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpReady>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpReady>() {
      public SC_CrossArenaPvpReady parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpReady(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpReady> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpReady> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpReady getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpKickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpKick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * <pre>
   *踢人
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpKick}
   */
  public  static final class CS_CrossArenaPvpKick extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpKick)
      CS_CrossArenaPvpKickOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpKick.newBuilder() to construct.
    private CS_CrossArenaPvpKick(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpKick() {
      id_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpKick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpKick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpKick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpKick.class, protocol.CrossArenaPvp.CS_CrossArenaPvpKick.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpKick)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpKick other = (protocol.CrossArenaPvp.CS_CrossArenaPvpKick) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpKick prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *踢人
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpKick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpKick)
        protocol.CrossArenaPvp.CS_CrossArenaPvpKickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpKick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpKick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpKick.class, protocol.CrossArenaPvp.CS_CrossArenaPvpKick.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpKick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpKick_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpKick getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpKick.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpKick build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpKick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpKick buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpKick result = new protocol.CrossArenaPvp.CS_CrossArenaPvpKick(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpKick) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpKick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpKick other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpKick.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpKick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpKick) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpKick)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpKick)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpKick DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpKick();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpKick getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpKick>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpKick>() {
      public CS_CrossArenaPvpKick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpKick(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpKick> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpKick> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpKick getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpKickOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpKick)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpKick}
   */
  public  static final class SC_CrossArenaPvpKick extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpKick)
      SC_CrossArenaPvpKickOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpKick.newBuilder() to construct.
    private SC_CrossArenaPvpKick(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpKick() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpKick(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpKick_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpKick_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpKick.class, protocol.CrossArenaPvp.SC_CrossArenaPvpKick.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpKick)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpKick other = (protocol.CrossArenaPvp.SC_CrossArenaPvpKick) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpKick prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpKick}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpKick)
        protocol.CrossArenaPvp.SC_CrossArenaPvpKickOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpKick_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpKick_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpKick.class, protocol.CrossArenaPvp.SC_CrossArenaPvpKick.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpKick.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpKick_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpKick getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpKick.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpKick build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpKick result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpKick buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpKick result = new protocol.CrossArenaPvp.SC_CrossArenaPvpKick(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpKick) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpKick)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpKick other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpKick.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpKick parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpKick) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpKick)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpKick)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpKick DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpKick();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpKick getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpKick>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpKick>() {
      public SC_CrossArenaPvpKick parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpKick(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpKick> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpKick> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpKick getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpCloseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpClose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();
  }
  /**
   * <pre>
   *关闭
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpClose}
   */
  public  static final class CS_CrossArenaPvpClose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpClose)
      CS_CrossArenaPvpCloseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpClose.newBuilder() to construct.
    private CS_CrossArenaPvpClose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpClose() {
      id_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpClose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpClose_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpClose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpClose.class, protocol.CrossArenaPvp.CS_CrossArenaPvpClose.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *房间号
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpClose)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpClose other = (protocol.CrossArenaPvp.CS_CrossArenaPvpClose) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpClose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *关闭
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpClose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpClose)
        protocol.CrossArenaPvp.CS_CrossArenaPvpCloseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpClose_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpClose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpClose.class, protocol.CrossArenaPvp.CS_CrossArenaPvpClose.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpClose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpClose_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpClose getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpClose.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpClose build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpClose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpClose buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpClose result = new protocol.CrossArenaPvp.CS_CrossArenaPvpClose(this);
        result.id_ = id_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpClose) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpClose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpClose other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpClose.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpClose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpClose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *房间号
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpClose)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpClose)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpClose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpClose();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpClose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpClose>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpClose>() {
      public CS_CrossArenaPvpClose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpClose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpClose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpClose> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpClose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpCloseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpClose)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpClose}
   */
  public  static final class SC_CrossArenaPvpClose extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpClose)
      SC_CrossArenaPvpCloseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpClose.newBuilder() to construct.
    private SC_CrossArenaPvpClose(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpClose() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpClose(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpClose_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpClose_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpClose.class, protocol.CrossArenaPvp.SC_CrossArenaPvpClose.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpClose)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpClose other = (protocol.CrossArenaPvp.SC_CrossArenaPvpClose) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpClose prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpClose}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpClose)
        protocol.CrossArenaPvp.SC_CrossArenaPvpCloseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpClose_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpClose_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpClose.class, protocol.CrossArenaPvp.SC_CrossArenaPvpClose.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpClose.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpClose_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpClose getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpClose.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpClose build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpClose result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpClose buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpClose result = new protocol.CrossArenaPvp.SC_CrossArenaPvpClose(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpClose) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpClose)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpClose other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpClose.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpClose parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpClose) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpClose)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpClose)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpClose DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpClose();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpClose getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpClose>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpClose>() {
      public SC_CrossArenaPvpClose parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpClose(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpClose> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpClose> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpClose getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpNoticeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpNotice)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *通知收到更新包
   * </pre>
   *
   * Protobuf type {@code CS_CrossArenaPvpNotice}
   */
  public  static final class CS_CrossArenaPvpNotice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpNotice)
      CS_CrossArenaPvpNoticeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpNotice.newBuilder() to construct.
    private CS_CrossArenaPvpNotice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpNotice() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpNotice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpNotice_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpNotice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.class, protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpNotice)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpNotice other = (protocol.CrossArenaPvp.CS_CrossArenaPvpNotice) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpNotice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通知收到更新包
     * </pre>
     *
     * Protobuf type {@code CS_CrossArenaPvpNotice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpNotice)
        protocol.CrossArenaPvp.CS_CrossArenaPvpNoticeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpNotice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpNotice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.class, protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpNotice_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpNotice getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpNotice build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpNotice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpNotice buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpNotice result = new protocol.CrossArenaPvp.CS_CrossArenaPvpNotice(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpNotice) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpNotice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpNotice other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpNotice.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpNotice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpNotice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpNotice)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpNotice)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpNotice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpNotice();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpNotice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpNotice>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpNotice>() {
      public CS_CrossArenaPvpNotice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpNotice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpNotice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpNotice> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpNotice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpPrepareOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpPrepare)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *倒计时秒数
     * </pre>
     *
     * <code>int32 time = 1;</code>
     */
    int getTime();
  }
  /**
   * <pre>
   *通知倒计时
   * </pre>
   *
   * Protobuf type {@code SC_CrossArenaPvpPrepare}
   */
  public  static final class SC_CrossArenaPvpPrepare extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpPrepare)
      SC_CrossArenaPvpPrepareOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpPrepare.newBuilder() to construct.
    private SC_CrossArenaPvpPrepare(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpPrepare() {
      time_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpPrepare(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPrepare_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPrepare_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.class, protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private int time_;
    /**
     * <pre>
     *倒计时秒数
     * </pre>
     *
     * <code>int32 time = 1;</code>
     */
    public int getTime() {
      return time_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0) {
        output.writeInt32(1, time_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, time_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare other = (protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通知倒计时
     * </pre>
     *
     * Protobuf type {@code SC_CrossArenaPvpPrepare}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpPrepare)
        protocol.CrossArenaPvp.SC_CrossArenaPvpPrepareOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPrepare_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPrepare_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.class, protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpPrepare_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare result = new protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare(this);
        result.time_ = time_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare.getDefaultInstance()) return this;
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       *倒计时秒数
       * </pre>
       *
       * <code>int32 time = 1;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       *倒计时秒数
       * </pre>
       *
       * <code>int32 time = 1;</code>
       */
      public Builder setTime(int value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *倒计时秒数
       * </pre>
       *
       * <code>int32 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpPrepare)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpPrepare)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpPrepare>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpPrepare>() {
      public SC_CrossArenaPvpPrepare parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpPrepare(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpPrepare> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpPrepare> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpPrepare getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossRenaPvpNeedBackOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossRenaPvpNeedBack)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   *通知返回房间才能继续操作
   * </pre>
   *
   * Protobuf type {@code SC_CrossRenaPvpNeedBack}
   */
  public  static final class SC_CrossRenaPvpNeedBack extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossRenaPvpNeedBack)
      SC_CrossRenaPvpNeedBackOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossRenaPvpNeedBack.newBuilder() to construct.
    private SC_CrossRenaPvpNeedBack(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossRenaPvpNeedBack() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossRenaPvpNeedBack(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossRenaPvpNeedBack_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossRenaPvpNeedBack_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.class, protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack other = (protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack) obj;

      boolean result = true;
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *通知返回房间才能继续操作
     * </pre>
     *
     * Protobuf type {@code SC_CrossRenaPvpNeedBack}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossRenaPvpNeedBack)
        protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossRenaPvpNeedBack_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossRenaPvpNeedBack_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.class, protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossRenaPvpNeedBack_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack build() {
        protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack buildPartial() {
        protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack result = new protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack other) {
        if (other == protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossRenaPvpNeedBack)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossRenaPvpNeedBack)
    private static final protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack();
    }

    public static protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossRenaPvpNeedBack>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossRenaPvpNeedBack>() {
      public SC_CrossRenaPvpNeedBack parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossRenaPvpNeedBack(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossRenaPvpNeedBack> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossRenaPvpNeedBack> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossRenaPvpNeedBack getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CS_CrossArenaPvpViewFightOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CS_CrossArenaPvpViewFight)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string roomId = 1;</code>
     */
    java.lang.String getRoomId();
    /**
     * <code>string roomId = 1;</code>
     */
    com.google.protobuf.ByteString
        getRoomIdBytes();
  }
  /**
   * Protobuf type {@code CS_CrossArenaPvpViewFight}
   */
  public  static final class CS_CrossArenaPvpViewFight extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CS_CrossArenaPvpViewFight)
      CS_CrossArenaPvpViewFightOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CS_CrossArenaPvpViewFight.newBuilder() to construct.
    private CS_CrossArenaPvpViewFight(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CS_CrossArenaPvpViewFight() {
      roomId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CS_CrossArenaPvpViewFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              roomId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpViewFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpViewFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.class, protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.Builder.class);
    }

    public static final int ROOMID_FIELD_NUMBER = 1;
    private volatile java.lang.Object roomId_;
    /**
     * <code>string roomId = 1;</code>
     */
    public java.lang.String getRoomId() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roomId_ = s;
        return s;
      }
    }
    /**
     * <code>string roomId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getRoomIdBytes() {
      java.lang.Object ref = roomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getRoomIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, roomId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getRoomIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, roomId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight other = (protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight) obj;

      boolean result = true;
      result = result && getRoomId()
          .equals(other.getRoomId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + getRoomId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CS_CrossArenaPvpViewFight}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CS_CrossArenaPvpViewFight)
        protocol.CrossArenaPvp.CS_CrossArenaPvpViewFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpViewFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpViewFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.class, protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        roomId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_CS_CrossArenaPvpViewFight_descriptor;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight build() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight buildPartial() {
        protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight result = new protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight(this);
        result.roomId_ = roomId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight) {
          return mergeFrom((protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight other) {
        if (other == protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight.getDefaultInstance()) return this;
        if (!other.getRoomId().isEmpty()) {
          roomId_ = other.roomId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object roomId_ = "";
      /**
       * <code>string roomId = 1;</code>
       */
      public java.lang.String getRoomId() {
        java.lang.Object ref = roomId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getRoomIdBytes() {
        java.lang.Object ref = roomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder clearRoomId() {
        
        roomId_ = getDefaultInstance().getRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>string roomId = 1;</code>
       */
      public Builder setRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roomId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CS_CrossArenaPvpViewFight)
    }

    // @@protoc_insertion_point(class_scope:CS_CrossArenaPvpViewFight)
    private static final protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight();
    }

    public static protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CS_CrossArenaPvpViewFight>
        PARSER = new com.google.protobuf.AbstractParser<CS_CrossArenaPvpViewFight>() {
      public CS_CrossArenaPvpViewFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CS_CrossArenaPvpViewFight(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CS_CrossArenaPvpViewFight> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CS_CrossArenaPvpViewFight> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.CS_CrossArenaPvpViewFight getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SC_CrossArenaPvpViewFightOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SC_CrossArenaPvpViewFight)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.RetCode ret = 1;</code>
     */
    boolean hasRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCode getRet();
    /**
     * <code>.RetCode ret = 1;</code>
     */
    protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder();
  }
  /**
   * Protobuf type {@code SC_CrossArenaPvpViewFight}
   */
  public  static final class SC_CrossArenaPvpViewFight extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:SC_CrossArenaPvpViewFight)
      SC_CrossArenaPvpViewFightOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SC_CrossArenaPvpViewFight.newBuilder() to construct.
    private SC_CrossArenaPvpViewFight(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SC_CrossArenaPvpViewFight() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SC_CrossArenaPvpViewFight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              protocol.RetCodeId.RetCode.Builder subBuilder = null;
              if (ret_ != null) {
                subBuilder = ret_.toBuilder();
              }
              ret_ = input.readMessage(protocol.RetCodeId.RetCode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(ret_);
                ret_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpViewFight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpViewFight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.class, protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.Builder.class);
    }

    public static final int RET_FIELD_NUMBER = 1;
    private protocol.RetCodeId.RetCode ret_;
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public boolean hasRet() {
      return ret_ != null;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCode getRet() {
      return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
    }
    /**
     * <code>.RetCode ret = 1;</code>
     */
    public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
      return getRet();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (ret_ != null) {
        output.writeMessage(1, getRet());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (ret_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getRet());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight)) {
        return super.equals(obj);
      }
      protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight other = (protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight) obj;

      boolean result = true;
      result = result && (hasRet() == other.hasRet());
      if (hasRet()) {
        result = result && getRet()
            .equals(other.getRet());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRet()) {
        hash = (37 * hash) + RET_FIELD_NUMBER;
        hash = (53 * hash) + getRet().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code SC_CrossArenaPvpViewFight}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SC_CrossArenaPvpViewFight)
        protocol.CrossArenaPvp.SC_CrossArenaPvpViewFightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpViewFight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpViewFight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.class, protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.Builder.class);
      }

      // Construct using protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (retBuilder_ == null) {
          ret_ = null;
        } else {
          ret_ = null;
          retBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaPvp.internal_static_SC_CrossArenaPvpViewFight_descriptor;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight getDefaultInstanceForType() {
        return protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.getDefaultInstance();
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight build() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight buildPartial() {
        protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight result = new protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight(this);
        if (retBuilder_ == null) {
          result.ret_ = ret_;
        } else {
          result.ret_ = retBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight) {
          return mergeFrom((protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight other) {
        if (other == protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight.getDefaultInstance()) return this;
        if (other.hasRet()) {
          mergeRet(other.getRet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private protocol.RetCodeId.RetCode ret_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> retBuilder_;
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public boolean hasRet() {
        return retBuilder_ != null || ret_ != null;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode getRet() {
        if (retBuilder_ == null) {
          return ret_ == null ? protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        } else {
          return retBuilder_.getMessage();
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ret_ = value;
          onChanged();
        } else {
          retBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder setRet(
          protocol.RetCodeId.RetCode.Builder builderForValue) {
        if (retBuilder_ == null) {
          ret_ = builderForValue.build();
          onChanged();
        } else {
          retBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder mergeRet(protocol.RetCodeId.RetCode value) {
        if (retBuilder_ == null) {
          if (ret_ != null) {
            ret_ =
              protocol.RetCodeId.RetCode.newBuilder(ret_).mergeFrom(value).buildPartial();
          } else {
            ret_ = value;
          }
          onChanged();
        } else {
          retBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public Builder clearRet() {
        if (retBuilder_ == null) {
          ret_ = null;
          onChanged();
        } else {
          ret_ = null;
          retBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCode.Builder getRetBuilder() {
        
        onChanged();
        return getRetFieldBuilder().getBuilder();
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      public protocol.RetCodeId.RetCodeOrBuilder getRetOrBuilder() {
        if (retBuilder_ != null) {
          return retBuilder_.getMessageOrBuilder();
        } else {
          return ret_ == null ?
              protocol.RetCodeId.RetCode.getDefaultInstance() : ret_;
        }
      }
      /**
       * <code>.RetCode ret = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder> 
          getRetFieldBuilder() {
        if (retBuilder_ == null) {
          retBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.RetCodeId.RetCode, protocol.RetCodeId.RetCode.Builder, protocol.RetCodeId.RetCodeOrBuilder>(
                  getRet(),
                  getParentForChildren(),
                  isClean());
          ret_ = null;
        }
        return retBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:SC_CrossArenaPvpViewFight)
    }

    // @@protoc_insertion_point(class_scope:SC_CrossArenaPvpViewFight)
    private static final protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight();
    }

    public static protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SC_CrossArenaPvpViewFight>
        PARSER = new com.google.protobuf.AbstractParser<SC_CrossArenaPvpViewFight>() {
      public SC_CrossArenaPvpViewFight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SC_CrossArenaPvpViewFight(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SC_CrossArenaPvpViewFight> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SC_CrossArenaPvpViewFight> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaPvp.SC_CrossArenaPvpViewFight getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaOpen_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaOpen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaOpen_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaOpen_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpPanel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpPanel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpInfoOne_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpInfoOne_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpPanel_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpPanel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpRefresh_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpRefresh_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpRefresh_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpRefresh_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPvpRoom_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPvpRoom_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPvpPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPvpPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpUpdateTeam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpUpdateTeam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpJoin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpJoin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpReady_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpReady_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpReady_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpReady_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpKick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpKick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpKick_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpKick_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpClose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpClose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpClose_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpClose_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpNotice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpNotice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpPrepare_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpPrepare_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossRenaPvpNeedBack_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossRenaPvpNeedBack_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CS_CrossArenaPvpViewFight_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CS_CrossArenaPvpViewFight_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SC_CrossArenaPvpViewFight_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_SC_CrossArenaPvpViewFight_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023CrossArenaPvp.proto\032\017RetCodeId.proto\032\014" +
      "Battle.proto\032\020PrepareWar.proto\032\020PetMessa" +
      "ge.proto\"\217\001\n\021CS_CrossArenaOpen\022\021\n\tcostIn" +
      "dex\030\001 \001(\005\022\r\n\005maxLv\030\002 \001(\005\022\020\n\010blackpet\030\003 \003" +
      "(\005\022\n\n\002id\030\004 \001(\t\022\035\n\004maps\030\005 \003(\0132\017.PositionP" +
      "etMap\022\033\n\010skillMap\030\006 \003(\0132\t.SkillMap\"*\n\021SC" +
      "_CrossArenaOpen\022\025\n\003ret\030\001 \001(\0132\010.RetCode\"\027" +
      "\n\025CS_CrossArenaPvpPanel\"I\n\027SC_CrossArena" +
      "PvpInfoOne\022 \n\004room\030\001 \001(\0132\022.CrossArenaPvp" +
      "Room\022\014\n\004type\030\002 \001(\005\"|\n\025SC_CrossArenaPvpPa",
      "nel\022 \n\004room\030\001 \003(\0132\022.CrossArenaPvpRoom\022\"\n" +
      "\006myRoom\030\002 \001(\0132\022.CrossArenaPvpRoom\022\020\n\010hav" +
      "eCost\030\003 \001(\005\022\013\n\003ids\030\004 \003(\t\")\n\027CS_CrossAren" +
      "aPvpRefresh\022\016\n\006roomId\030\001 \001(\t\";\n\027SC_CrossA" +
      "renaPvpRefresh\022 \n\004room\030\001 \003(\0132\022.CrossAren" +
      "aPvpRoom\"\306\002\n\021CrossArenaPvpRoom\022\n\n\002id\030\001 \001" +
      "(\t\022\023\n\013serverIndex\030\002 \001(\005\022\021\n\tcostIndex\030\003 \001" +
      "(\005\022\021\n\tblacklist\030\004 \003(\t\022#\n\005owner\030\005 \001(\0132\024.C" +
      "rossArenaPvpPlayer\022#\n\005atter\030\006 \001(\0132\024.Cros" +
      "sArenaPvpPlayer\022\r\n\005minLv\030\007 \001(\005\022\r\n\005maxLv\030",
      "\010 \001(\005\022\020\n\010blackpet\030\t \003(\005\022\021\n\tcreteTime\030\n \001" +
      "(\003\022\027\n\017startBattleTime\030\013 \001(\003\022\r\n\005fight\030\014 \001" +
      "(\005\022\022\n\ntotalPower\030\r \001(\003\022\017\n\007totalLv\030\016 \001(\005\022" +
      "\020\n\010battleId\030\017 \001(\t\"\360\001\n\023CrossArenaPvpPlaye" +
      "r\022\'\n\016playerBaseInfo\030\001 \001(\0132\017.PlayerBaseIn" +
      "fo\022\033\n\010teamInfo\030\002 \001(\0132\t.TeamInfo\022\r\n\005ready" +
      "\030\003 \001(\005\022\n\n\002ip\030\004 \001(\t\022\017\n\007bookIds\030\005 \003(\005\022\021\n\003p" +
      "et\030\006 \003(\0132\004.Pet\022!\n\tbattlePet\030\007 \003(\0132\016.Batt" +
      "lePetData\022\037\n\005skill\030\010 \003(\0132\020.SkillBattleDi" +
      "ct\022\020\n\010svrIndex\030\t \001(\005\"l\n\024CS_CrossArenaPvp",
      "Join\022\n\n\002id\030\001 \001(\t\022\014\n\004join\030\002 \001(\005\022\035\n\004maps\030\003" +
      " \003(\0132\017.PositionPetMap\022\033\n\010skillMap\030\004 \003(\0132" +
      "\t.SkillMap\"\034\n\032CS_CrossArenaPvpUpdateTeam" +
      "\"-\n\024SC_CrossArenaPvpJoin\022\025\n\003ret\030\001 \001(\0132\010." +
      "RetCode\"2\n\025CS_CrossArenaPvpReady\022\n\n\002id\030\001" +
      " \001(\t\022\r\n\005ready\030\002 \001(\005\".\n\025SC_CrossArenaPvpR" +
      "eady\022\025\n\003ret\030\001 \001(\0132\010.RetCode\"\"\n\024CS_CrossA" +
      "renaPvpKick\022\n\n\002id\030\001 \001(\t\"-\n\024SC_CrossArena" +
      "PvpKick\022\025\n\003ret\030\001 \001(\0132\010.RetCode\"#\n\025CS_Cro" +
      "ssArenaPvpClose\022\n\n\002id\030\001 \001(\t\".\n\025SC_CrossA",
      "renaPvpClose\022\025\n\003ret\030\001 \001(\0132\010.RetCode\"\030\n\026C" +
      "S_CrossArenaPvpNotice\"\'\n\027SC_CrossArenaPv" +
      "pPrepare\022\014\n\004time\030\001 \001(\005\"\031\n\027SC_CrossRenaPv" +
      "pNeedBack\"+\n\031CS_CrossArenaPvpViewFight\022\016" +
      "\n\006roomId\030\001 \001(\t\"2\n\031SC_CrossArenaPvpViewFi" +
      "ght\022\025\n\003ret\030\001 \001(\0132\010.RetCodeB\033\n\010protocol\252\002" +
      "\016ETHotfix.Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.RetCodeId.getDescriptor(),
          protocol.Battle.getDescriptor(),
          protocol.PrepareWar.getDescriptor(),
          protocol.PetMessage.getDescriptor(),
        }, assigner);
    internal_static_CS_CrossArenaOpen_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CS_CrossArenaOpen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaOpen_descriptor,
        new java.lang.String[] { "CostIndex", "MaxLv", "Blackpet", "Id", "Maps", "SkillMap", });
    internal_static_SC_CrossArenaOpen_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_SC_CrossArenaOpen_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaOpen_descriptor,
        new java.lang.String[] { "Ret", });
    internal_static_CS_CrossArenaPvpPanel_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CS_CrossArenaPvpPanel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpPanel_descriptor,
        new java.lang.String[] { });
    internal_static_SC_CrossArenaPvpInfoOne_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_SC_CrossArenaPvpInfoOne_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpInfoOne_descriptor,
        new java.lang.String[] { "Room", "Type", });
    internal_static_SC_CrossArenaPvpPanel_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_SC_CrossArenaPvpPanel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpPanel_descriptor,
        new java.lang.String[] { "Room", "MyRoom", "HaveCost", "Ids", });
    internal_static_CS_CrossArenaPvpRefresh_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CS_CrossArenaPvpRefresh_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpRefresh_descriptor,
        new java.lang.String[] { "RoomId", });
    internal_static_SC_CrossArenaPvpRefresh_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_SC_CrossArenaPvpRefresh_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpRefresh_descriptor,
        new java.lang.String[] { "Room", });
    internal_static_CrossArenaPvpRoom_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CrossArenaPvpRoom_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPvpRoom_descriptor,
        new java.lang.String[] { "Id", "ServerIndex", "CostIndex", "Blacklist", "Owner", "Atter", "MinLv", "MaxLv", "Blackpet", "CreteTime", "StartBattleTime", "Fight", "TotalPower", "TotalLv", "BattleId", });
    internal_static_CrossArenaPvpPlayer_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CrossArenaPvpPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPvpPlayer_descriptor,
        new java.lang.String[] { "PlayerBaseInfo", "TeamInfo", "Ready", "Ip", "BookIds", "Pet", "BattlePet", "Skill", "SvrIndex", });
    internal_static_CS_CrossArenaPvpJoin_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CS_CrossArenaPvpJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpJoin_descriptor,
        new java.lang.String[] { "Id", "Join", "Maps", "SkillMap", });
    internal_static_CS_CrossArenaPvpUpdateTeam_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CS_CrossArenaPvpUpdateTeam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpUpdateTeam_descriptor,
        new java.lang.String[] { });
    internal_static_SC_CrossArenaPvpJoin_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_SC_CrossArenaPvpJoin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpJoin_descriptor,
        new java.lang.String[] { "Ret", });
    internal_static_CS_CrossArenaPvpReady_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CS_CrossArenaPvpReady_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpReady_descriptor,
        new java.lang.String[] { "Id", "Ready", });
    internal_static_SC_CrossArenaPvpReady_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_SC_CrossArenaPvpReady_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpReady_descriptor,
        new java.lang.String[] { "Ret", });
    internal_static_CS_CrossArenaPvpKick_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CS_CrossArenaPvpKick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpKick_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_SC_CrossArenaPvpKick_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_SC_CrossArenaPvpKick_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpKick_descriptor,
        new java.lang.String[] { "Ret", });
    internal_static_CS_CrossArenaPvpClose_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_CS_CrossArenaPvpClose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpClose_descriptor,
        new java.lang.String[] { "Id", });
    internal_static_SC_CrossArenaPvpClose_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_SC_CrossArenaPvpClose_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpClose_descriptor,
        new java.lang.String[] { "Ret", });
    internal_static_CS_CrossArenaPvpNotice_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_CS_CrossArenaPvpNotice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpNotice_descriptor,
        new java.lang.String[] { });
    internal_static_SC_CrossArenaPvpPrepare_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_SC_CrossArenaPvpPrepare_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpPrepare_descriptor,
        new java.lang.String[] { "Time", });
    internal_static_SC_CrossRenaPvpNeedBack_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_SC_CrossRenaPvpNeedBack_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossRenaPvpNeedBack_descriptor,
        new java.lang.String[] { });
    internal_static_CS_CrossArenaPvpViewFight_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_CS_CrossArenaPvpViewFight_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CS_CrossArenaPvpViewFight_descriptor,
        new java.lang.String[] { "RoomId", });
    internal_static_SC_CrossArenaPvpViewFight_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_SC_CrossArenaPvpViewFight_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_SC_CrossArenaPvpViewFight_descriptor,
        new java.lang.String[] { "Ret", });
    protocol.RetCodeId.getDescriptor();
    protocol.Battle.getDescriptor();
    protocol.PrepareWar.getDescriptor();
    protocol.PetMessage.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
