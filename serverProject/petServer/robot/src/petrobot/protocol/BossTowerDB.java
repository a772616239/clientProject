// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BossTowerDB.proto

package protocol;

public final class BossTowerDB {
  private BossTowerDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DB_BossTowerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_BossTower)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */
    int getPassCount();
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */
    boolean containsPass(
        int key);
    /**
     * Use {@link #getPassMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
    getPass();
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */
    java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
    getPassMap();
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrDefault(
        int key,
        protocol.BossTowerDB.DB_BossTowerPassCondition defaultValue);
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrThrow(
        int key);

    /**
     * <pre>
     *当日已经挑战次数
     * </pre>
     *
     * <code>int32 todayAlreadyChallengeTimes = 2;</code>
     */
    int getTodayAlreadyChallengeTimes();

    /**
     * <pre>
     *目前最高层数
     * </pre>
     *
     * <code>int32 maxCfgId = 3;</code>
     */
    int getMaxCfgId();

    /**
     * <code>int32 todayVipBuyTime = 4;</code>
     */
    int getTodayVipBuyTime();

    /**
     * <code>int32 todayVipUseTime = 5;</code>
     */
    int getTodayVipUseTime();

    /**
     * <code>int32 todayItemBuy = 6;</code>
     */
    int getTodayItemBuy();
  }
  /**
   * Protobuf type {@code DB_BossTower}
   */
  public  static final class DB_BossTower extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_BossTower)
      DB_BossTowerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_BossTower.newBuilder() to construct.
    private DB_BossTower(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_BossTower() {
      todayAlreadyChallengeTimes_ = 0;
      maxCfgId_ = 0;
      todayVipBuyTime_ = 0;
      todayVipUseTime_ = 0;
      todayItemBuy_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_BossTower(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                pass_ = com.google.protobuf.MapField.newMapField(
                    PassDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
              pass__ = input.readMessage(
                  PassDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              pass_.getMutableMap().put(
                  pass__.getKey(), pass__.getValue());
              break;
            }
            case 16: {

              todayAlreadyChallengeTimes_ = input.readInt32();
              break;
            }
            case 24: {

              maxCfgId_ = input.readInt32();
              break;
            }
            case 32: {

              todayVipBuyTime_ = input.readInt32();
              break;
            }
            case 40: {

              todayVipUseTime_ = input.readInt32();
              break;
            }
            case 48: {

              todayItemBuy_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.BossTowerDB.internal_static_DB_BossTower_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetPass();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.BossTowerDB.internal_static_DB_BossTower_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.BossTowerDB.DB_BossTower.class, protocol.BossTowerDB.DB_BossTower.Builder.class);
    }

    private int bitField0_;
    public static final int PASS_FIELD_NUMBER = 1;
    private static final class PassDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>newDefaultInstance(
                  protocol.BossTowerDB.internal_static_DB_BossTower_PassEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.BossTowerDB.DB_BossTowerPassCondition.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> pass_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
    internalGetPass() {
      if (pass_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PassDefaultEntryHolder.defaultEntry);
      }
      return pass_;
    }

    public int getPassCount() {
      return internalGetPass().getMap().size();
    }
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    public boolean containsPass(
        int key) {
      
      return internalGetPass().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPassMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> getPass() {
      return getPassMap();
    }
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> getPassMap() {
      return internalGetPass().getMap();
    }
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    public protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrDefault(
        int key,
        protocol.BossTowerDB.DB_BossTowerPassCondition defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> map =
          internalGetPass().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *玩家通关情况
     * </pre>
     *
     * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
     */

    public protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> map =
          internalGetPass().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TODAYALREADYCHALLENGETIMES_FIELD_NUMBER = 2;
    private int todayAlreadyChallengeTimes_;
    /**
     * <pre>
     *当日已经挑战次数
     * </pre>
     *
     * <code>int32 todayAlreadyChallengeTimes = 2;</code>
     */
    public int getTodayAlreadyChallengeTimes() {
      return todayAlreadyChallengeTimes_;
    }

    public static final int MAXCFGID_FIELD_NUMBER = 3;
    private int maxCfgId_;
    /**
     * <pre>
     *目前最高层数
     * </pre>
     *
     * <code>int32 maxCfgId = 3;</code>
     */
    public int getMaxCfgId() {
      return maxCfgId_;
    }

    public static final int TODAYVIPBUYTIME_FIELD_NUMBER = 4;
    private int todayVipBuyTime_;
    /**
     * <code>int32 todayVipBuyTime = 4;</code>
     */
    public int getTodayVipBuyTime() {
      return todayVipBuyTime_;
    }

    public static final int TODAYVIPUSETIME_FIELD_NUMBER = 5;
    private int todayVipUseTime_;
    /**
     * <code>int32 todayVipUseTime = 5;</code>
     */
    public int getTodayVipUseTime() {
      return todayVipUseTime_;
    }

    public static final int TODAYITEMBUY_FIELD_NUMBER = 6;
    private int todayItemBuy_;
    /**
     * <code>int32 todayItemBuy = 6;</code>
     */
    public int getTodayItemBuy() {
      return todayItemBuy_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPass(),
          PassDefaultEntryHolder.defaultEntry,
          1);
      if (todayAlreadyChallengeTimes_ != 0) {
        output.writeInt32(2, todayAlreadyChallengeTimes_);
      }
      if (maxCfgId_ != 0) {
        output.writeInt32(3, maxCfgId_);
      }
      if (todayVipBuyTime_ != 0) {
        output.writeInt32(4, todayVipBuyTime_);
      }
      if (todayVipUseTime_ != 0) {
        output.writeInt32(5, todayVipUseTime_);
      }
      if (todayItemBuy_ != 0) {
        output.writeInt32(6, todayItemBuy_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> entry
           : internalGetPass().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
        pass__ = PassDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, pass__);
      }
      if (todayAlreadyChallengeTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, todayAlreadyChallengeTimes_);
      }
      if (maxCfgId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, maxCfgId_);
      }
      if (todayVipBuyTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, todayVipBuyTime_);
      }
      if (todayVipUseTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, todayVipUseTime_);
      }
      if (todayItemBuy_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, todayItemBuy_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.BossTowerDB.DB_BossTower)) {
        return super.equals(obj);
      }
      protocol.BossTowerDB.DB_BossTower other = (protocol.BossTowerDB.DB_BossTower) obj;

      boolean result = true;
      result = result && internalGetPass().equals(
          other.internalGetPass());
      result = result && (getTodayAlreadyChallengeTimes()
          == other.getTodayAlreadyChallengeTimes());
      result = result && (getMaxCfgId()
          == other.getMaxCfgId());
      result = result && (getTodayVipBuyTime()
          == other.getTodayVipBuyTime());
      result = result && (getTodayVipUseTime()
          == other.getTodayVipUseTime());
      result = result && (getTodayItemBuy()
          == other.getTodayItemBuy());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetPass().getMap().isEmpty()) {
        hash = (37 * hash) + PASS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPass().hashCode();
      }
      hash = (37 * hash) + TODAYALREADYCHALLENGETIMES_FIELD_NUMBER;
      hash = (53 * hash) + getTodayAlreadyChallengeTimes();
      hash = (37 * hash) + MAXCFGID_FIELD_NUMBER;
      hash = (53 * hash) + getMaxCfgId();
      hash = (37 * hash) + TODAYVIPBUYTIME_FIELD_NUMBER;
      hash = (53 * hash) + getTodayVipBuyTime();
      hash = (37 * hash) + TODAYVIPUSETIME_FIELD_NUMBER;
      hash = (53 * hash) + getTodayVipUseTime();
      hash = (37 * hash) + TODAYITEMBUY_FIELD_NUMBER;
      hash = (53 * hash) + getTodayItemBuy();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTower parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTower parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTower parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.BossTowerDB.DB_BossTower prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_BossTower}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_BossTower)
        protocol.BossTowerDB.DB_BossTowerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.BossTowerDB.internal_static_DB_BossTower_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetPass();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutablePass();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.BossTowerDB.internal_static_DB_BossTower_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.BossTowerDB.DB_BossTower.class, protocol.BossTowerDB.DB_BossTower.Builder.class);
      }

      // Construct using protocol.BossTowerDB.DB_BossTower.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutablePass().clear();
        todayAlreadyChallengeTimes_ = 0;

        maxCfgId_ = 0;

        todayVipBuyTime_ = 0;

        todayVipUseTime_ = 0;

        todayItemBuy_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.BossTowerDB.internal_static_DB_BossTower_descriptor;
      }

      public protocol.BossTowerDB.DB_BossTower getDefaultInstanceForType() {
        return protocol.BossTowerDB.DB_BossTower.getDefaultInstance();
      }

      public protocol.BossTowerDB.DB_BossTower build() {
        protocol.BossTowerDB.DB_BossTower result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.BossTowerDB.DB_BossTower buildPartial() {
        protocol.BossTowerDB.DB_BossTower result = new protocol.BossTowerDB.DB_BossTower(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.pass_ = internalGetPass();
        result.pass_.makeImmutable();
        result.todayAlreadyChallengeTimes_ = todayAlreadyChallengeTimes_;
        result.maxCfgId_ = maxCfgId_;
        result.todayVipBuyTime_ = todayVipBuyTime_;
        result.todayVipUseTime_ = todayVipUseTime_;
        result.todayItemBuy_ = todayItemBuy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.BossTowerDB.DB_BossTower) {
          return mergeFrom((protocol.BossTowerDB.DB_BossTower)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.BossTowerDB.DB_BossTower other) {
        if (other == protocol.BossTowerDB.DB_BossTower.getDefaultInstance()) return this;
        internalGetMutablePass().mergeFrom(
            other.internalGetPass());
        if (other.getTodayAlreadyChallengeTimes() != 0) {
          setTodayAlreadyChallengeTimes(other.getTodayAlreadyChallengeTimes());
        }
        if (other.getMaxCfgId() != 0) {
          setMaxCfgId(other.getMaxCfgId());
        }
        if (other.getTodayVipBuyTime() != 0) {
          setTodayVipBuyTime(other.getTodayVipBuyTime());
        }
        if (other.getTodayVipUseTime() != 0) {
          setTodayVipUseTime(other.getTodayVipUseTime());
        }
        if (other.getTodayItemBuy() != 0) {
          setTodayItemBuy(other.getTodayItemBuy());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.BossTowerDB.DB_BossTower parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.BossTowerDB.DB_BossTower) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> pass_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
      internalGetPass() {
        if (pass_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PassDefaultEntryHolder.defaultEntry);
        }
        return pass_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
      internalGetMutablePass() {
        onChanged();;
        if (pass_ == null) {
          pass_ = com.google.protobuf.MapField.newMapField(
              PassDefaultEntryHolder.defaultEntry);
        }
        if (!pass_.isMutable()) {
          pass_ = pass_.copy();
        }
        return pass_;
      }

      public int getPassCount() {
        return internalGetPass().getMap().size();
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public boolean containsPass(
          int key) {
        
        return internalGetPass().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPassMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> getPass() {
        return getPassMap();
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> getPassMap() {
        return internalGetPass().getMap();
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrDefault(
          int key,
          protocol.BossTowerDB.DB_BossTowerPassCondition defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> map =
            internalGetPass().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public protocol.BossTowerDB.DB_BossTowerPassCondition getPassOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> map =
            internalGetPass().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPass() {
        internalGetMutablePass().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public Builder removePass(
          int key) {
        
        internalGetMutablePass().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition>
      getMutablePass() {
        return internalGetMutablePass().getMutableMap();
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */
      public Builder putPass(
          int key,
          protocol.BossTowerDB.DB_BossTowerPassCondition value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePass().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *玩家通关情况
       * </pre>
       *
       * <code>map&lt;int32, .DB_BossTowerPassCondition&gt; pass = 1;</code>
       */

      public Builder putAllPass(
          java.util.Map<java.lang.Integer, protocol.BossTowerDB.DB_BossTowerPassCondition> values) {
        internalGetMutablePass().getMutableMap()
            .putAll(values);
        return this;
      }

      private int todayAlreadyChallengeTimes_ ;
      /**
       * <pre>
       *当日已经挑战次数
       * </pre>
       *
       * <code>int32 todayAlreadyChallengeTimes = 2;</code>
       */
      public int getTodayAlreadyChallengeTimes() {
        return todayAlreadyChallengeTimes_;
      }
      /**
       * <pre>
       *当日已经挑战次数
       * </pre>
       *
       * <code>int32 todayAlreadyChallengeTimes = 2;</code>
       */
      public Builder setTodayAlreadyChallengeTimes(int value) {
        
        todayAlreadyChallengeTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当日已经挑战次数
       * </pre>
       *
       * <code>int32 todayAlreadyChallengeTimes = 2;</code>
       */
      public Builder clearTodayAlreadyChallengeTimes() {
        
        todayAlreadyChallengeTimes_ = 0;
        onChanged();
        return this;
      }

      private int maxCfgId_ ;
      /**
       * <pre>
       *目前最高层数
       * </pre>
       *
       * <code>int32 maxCfgId = 3;</code>
       */
      public int getMaxCfgId() {
        return maxCfgId_;
      }
      /**
       * <pre>
       *目前最高层数
       * </pre>
       *
       * <code>int32 maxCfgId = 3;</code>
       */
      public Builder setMaxCfgId(int value) {
        
        maxCfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *目前最高层数
       * </pre>
       *
       * <code>int32 maxCfgId = 3;</code>
       */
      public Builder clearMaxCfgId() {
        
        maxCfgId_ = 0;
        onChanged();
        return this;
      }

      private int todayVipBuyTime_ ;
      /**
       * <code>int32 todayVipBuyTime = 4;</code>
       */
      public int getTodayVipBuyTime() {
        return todayVipBuyTime_;
      }
      /**
       * <code>int32 todayVipBuyTime = 4;</code>
       */
      public Builder setTodayVipBuyTime(int value) {
        
        todayVipBuyTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 todayVipBuyTime = 4;</code>
       */
      public Builder clearTodayVipBuyTime() {
        
        todayVipBuyTime_ = 0;
        onChanged();
        return this;
      }

      private int todayVipUseTime_ ;
      /**
       * <code>int32 todayVipUseTime = 5;</code>
       */
      public int getTodayVipUseTime() {
        return todayVipUseTime_;
      }
      /**
       * <code>int32 todayVipUseTime = 5;</code>
       */
      public Builder setTodayVipUseTime(int value) {
        
        todayVipUseTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 todayVipUseTime = 5;</code>
       */
      public Builder clearTodayVipUseTime() {
        
        todayVipUseTime_ = 0;
        onChanged();
        return this;
      }

      private int todayItemBuy_ ;
      /**
       * <code>int32 todayItemBuy = 6;</code>
       */
      public int getTodayItemBuy() {
        return todayItemBuy_;
      }
      /**
       * <code>int32 todayItemBuy = 6;</code>
       */
      public Builder setTodayItemBuy(int value) {
        
        todayItemBuy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 todayItemBuy = 6;</code>
       */
      public Builder clearTodayItemBuy() {
        
        todayItemBuy_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_BossTower)
    }

    // @@protoc_insertion_point(class_scope:DB_BossTower)
    private static final protocol.BossTowerDB.DB_BossTower DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.BossTowerDB.DB_BossTower();
    }

    public static protocol.BossTowerDB.DB_BossTower getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_BossTower>
        PARSER = new com.google.protobuf.AbstractParser<DB_BossTower>() {
      public DB_BossTower parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_BossTower(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_BossTower> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_BossTower> getParserForType() {
      return PARSER;
    }

    public protocol.BossTowerDB.DB_BossTower getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DB_BossTowerPassConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_BossTowerPassCondition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 configId = 1;</code>
     */
    int getConfigId();

    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */
    int getPassInfoCount();
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */
    boolean containsPassInfo(
        int key);
    /**
     * Use {@link #getPassInfoMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPassInfo();
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPassInfoMap();
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    int getPassInfoOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    int getPassInfoOrThrow(
        int key);

    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    java.util.List<java.lang.Integer> getCanSweepIdList();
    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    int getCanSweepIdCount();
    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    int getCanSweepId(int index);
  }
  /**
   * Protobuf type {@code DB_BossTowerPassCondition}
   */
  public  static final class DB_BossTowerPassCondition extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_BossTowerPassCondition)
      DB_BossTowerPassConditionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_BossTowerPassCondition.newBuilder() to construct.
    private DB_BossTowerPassCondition(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_BossTowerPassCondition() {
      configId_ = 0;
      canSweepId_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_BossTowerPassCondition(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              configId_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                passInfo_ = com.google.protobuf.MapField.newMapField(
                    PassInfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              passInfo__ = input.readMessage(
                  PassInfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              passInfo_.getMutableMap().put(
                  passInfo__.getKey(), passInfo__.getValue());
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                canSweepId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              canSweepId_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                canSweepId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                canSweepId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          canSweepId_ = java.util.Collections.unmodifiableList(canSweepId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetPassInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.BossTowerDB.DB_BossTowerPassCondition.class, protocol.BossTowerDB.DB_BossTowerPassCondition.Builder.class);
    }

    private int bitField0_;
    public static final int CONFIGID_FIELD_NUMBER = 1;
    private int configId_;
    /**
     * <code>int32 configId = 1;</code>
     */
    public int getConfigId() {
      return configId_;
    }

    public static final int PASSINFO_FIELD_NUMBER = 2;
    private static final class PassInfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_PassInfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> passInfo_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetPassInfo() {
      if (passInfo_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PassInfoDefaultEntryHolder.defaultEntry);
      }
      return passInfo_;
    }

    public int getPassInfoCount() {
      return internalGetPassInfo().getMap().size();
    }
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    public boolean containsPassInfo(
        int key) {
      
      return internalGetPassInfo().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPassInfoMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getPassInfo() {
      return getPassInfoMap();
    }
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getPassInfoMap() {
      return internalGetPassInfo().getMap();
    }
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    public int getPassInfoOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPassInfo().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *&lt;FightMake, passTimes&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
     */

    public int getPassInfoOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPassInfo().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CANSWEEPID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> canSweepId_;
    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCanSweepIdList() {
      return canSweepId_;
    }
    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    public int getCanSweepIdCount() {
      return canSweepId_.size();
    }
    /**
     * <pre>
     *&lt;fightMakeId
     * </pre>
     *
     * <code>repeated int32 canSweepId = 3;</code>
     */
    public int getCanSweepId(int index) {
      return canSweepId_.get(index);
    }
    private int canSweepIdMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (configId_ != 0) {
        output.writeInt32(1, configId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPassInfo(),
          PassInfoDefaultEntryHolder.defaultEntry,
          2);
      if (getCanSweepIdList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(canSweepIdMemoizedSerializedSize);
      }
      for (int i = 0; i < canSweepId_.size(); i++) {
        output.writeInt32NoTag(canSweepId_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (configId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, configId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetPassInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        passInfo__ = PassInfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, passInfo__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < canSweepId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(canSweepId_.get(i));
        }
        size += dataSize;
        if (!getCanSweepIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        canSweepIdMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.BossTowerDB.DB_BossTowerPassCondition)) {
        return super.equals(obj);
      }
      protocol.BossTowerDB.DB_BossTowerPassCondition other = (protocol.BossTowerDB.DB_BossTowerPassCondition) obj;

      boolean result = true;
      result = result && (getConfigId()
          == other.getConfigId());
      result = result && internalGetPassInfo().equals(
          other.internalGetPassInfo());
      result = result && getCanSweepIdList()
          .equals(other.getCanSweepIdList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONFIGID_FIELD_NUMBER;
      hash = (53 * hash) + getConfigId();
      if (!internalGetPassInfo().getMap().isEmpty()) {
        hash = (37 * hash) + PASSINFO_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPassInfo().hashCode();
      }
      if (getCanSweepIdCount() > 0) {
        hash = (37 * hash) + CANSWEEPID_FIELD_NUMBER;
        hash = (53 * hash) + getCanSweepIdList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.BossTowerDB.DB_BossTowerPassCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.BossTowerDB.DB_BossTowerPassCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_BossTowerPassCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_BossTowerPassCondition)
        protocol.BossTowerDB.DB_BossTowerPassConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetPassInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutablePassInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.BossTowerDB.DB_BossTowerPassCondition.class, protocol.BossTowerDB.DB_BossTowerPassCondition.Builder.class);
      }

      // Construct using protocol.BossTowerDB.DB_BossTowerPassCondition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        configId_ = 0;

        internalGetMutablePassInfo().clear();
        canSweepId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.BossTowerDB.internal_static_DB_BossTowerPassCondition_descriptor;
      }

      public protocol.BossTowerDB.DB_BossTowerPassCondition getDefaultInstanceForType() {
        return protocol.BossTowerDB.DB_BossTowerPassCondition.getDefaultInstance();
      }

      public protocol.BossTowerDB.DB_BossTowerPassCondition build() {
        protocol.BossTowerDB.DB_BossTowerPassCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.BossTowerDB.DB_BossTowerPassCondition buildPartial() {
        protocol.BossTowerDB.DB_BossTowerPassCondition result = new protocol.BossTowerDB.DB_BossTowerPassCondition(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.configId_ = configId_;
        result.passInfo_ = internalGetPassInfo();
        result.passInfo_.makeImmutable();
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          canSweepId_ = java.util.Collections.unmodifiableList(canSweepId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.canSweepId_ = canSweepId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.BossTowerDB.DB_BossTowerPassCondition) {
          return mergeFrom((protocol.BossTowerDB.DB_BossTowerPassCondition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.BossTowerDB.DB_BossTowerPassCondition other) {
        if (other == protocol.BossTowerDB.DB_BossTowerPassCondition.getDefaultInstance()) return this;
        if (other.getConfigId() != 0) {
          setConfigId(other.getConfigId());
        }
        internalGetMutablePassInfo().mergeFrom(
            other.internalGetPassInfo());
        if (!other.canSweepId_.isEmpty()) {
          if (canSweepId_.isEmpty()) {
            canSweepId_ = other.canSweepId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCanSweepIdIsMutable();
            canSweepId_.addAll(other.canSweepId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.BossTowerDB.DB_BossTowerPassCondition parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.BossTowerDB.DB_BossTowerPassCondition) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int configId_ ;
      /**
       * <code>int32 configId = 1;</code>
       */
      public int getConfigId() {
        return configId_;
      }
      /**
       * <code>int32 configId = 1;</code>
       */
      public Builder setConfigId(int value) {
        
        configId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 configId = 1;</code>
       */
      public Builder clearConfigId() {
        
        configId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> passInfo_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetPassInfo() {
        if (passInfo_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PassInfoDefaultEntryHolder.defaultEntry);
        }
        return passInfo_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutablePassInfo() {
        onChanged();;
        if (passInfo_ == null) {
          passInfo_ = com.google.protobuf.MapField.newMapField(
              PassInfoDefaultEntryHolder.defaultEntry);
        }
        if (!passInfo_.isMutable()) {
          passInfo_ = passInfo_.copy();
        }
        return passInfo_;
      }

      public int getPassInfoCount() {
        return internalGetPassInfo().getMap().size();
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public boolean containsPassInfo(
          int key) {
        
        return internalGetPassInfo().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPassInfoMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getPassInfo() {
        return getPassInfoMap();
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getPassInfoMap() {
        return internalGetPassInfo().getMap();
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public int getPassInfoOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPassInfo().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public int getPassInfoOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPassInfo().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPassInfo() {
        internalGetMutablePassInfo().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public Builder removePassInfo(
          int key) {
        
        internalGetMutablePassInfo().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutablePassInfo() {
        return internalGetMutablePassInfo().getMutableMap();
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */
      public Builder putPassInfo(
          int key,
          int value) {
        
        
        internalGetMutablePassInfo().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *&lt;FightMake, passTimes&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; passInfo = 2;</code>
       */

      public Builder putAllPassInfo(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutablePassInfo().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> canSweepId_ = java.util.Collections.emptyList();
      private void ensureCanSweepIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          canSweepId_ = new java.util.ArrayList<java.lang.Integer>(canSweepId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCanSweepIdList() {
        return java.util.Collections.unmodifiableList(canSweepId_);
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public int getCanSweepIdCount() {
        return canSweepId_.size();
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public int getCanSweepId(int index) {
        return canSweepId_.get(index);
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public Builder setCanSweepId(
          int index, int value) {
        ensureCanSweepIdIsMutable();
        canSweepId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public Builder addCanSweepId(int value) {
        ensureCanSweepIdIsMutable();
        canSweepId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public Builder addAllCanSweepId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCanSweepIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, canSweepId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *&lt;fightMakeId
       * </pre>
       *
       * <code>repeated int32 canSweepId = 3;</code>
       */
      public Builder clearCanSweepId() {
        canSweepId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_BossTowerPassCondition)
    }

    // @@protoc_insertion_point(class_scope:DB_BossTowerPassCondition)
    private static final protocol.BossTowerDB.DB_BossTowerPassCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.BossTowerDB.DB_BossTowerPassCondition();
    }

    public static protocol.BossTowerDB.DB_BossTowerPassCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_BossTowerPassCondition>
        PARSER = new com.google.protobuf.AbstractParser<DB_BossTowerPassCondition>() {
      public DB_BossTowerPassCondition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_BossTowerPassCondition(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_BossTowerPassCondition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_BossTowerPassCondition> getParserForType() {
      return PARSER;
    }

    public protocol.BossTowerDB.DB_BossTowerPassCondition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_BossTower_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_BossTower_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_BossTower_PassEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_BossTower_PassEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_BossTowerPassCondition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_BossTowerPassCondition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_BossTowerPassCondition_PassInfoEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_BossTowerPassCondition_PassInfoEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021BossTowerDB.proto\"\374\001\n\014DB_BossTower\022%\n\004" +
      "pass\030\001 \003(\0132\027.DB_BossTower.PassEntry\022\"\n\032t" +
      "odayAlreadyChallengeTimes\030\002 \001(\005\022\020\n\010maxCf" +
      "gId\030\003 \001(\005\022\027\n\017todayVipBuyTime\030\004 \001(\005\022\027\n\017to" +
      "dayVipUseTime\030\005 \001(\005\022\024\n\014todayItemBuy\030\006 \001(" +
      "\005\032G\n\tPassEntry\022\013\n\003key\030\001 \001(\005\022)\n\005value\030\002 \001" +
      "(\0132\032.DB_BossTowerPassCondition:\0028\001\"\256\001\n\031D" +
      "B_BossTowerPassCondition\022\020\n\010configId\030\001 \001" +
      "(\005\022:\n\010passInfo\030\002 \003(\0132(.DB_BossTowerPassC" +
      "ondition.PassInfoEntry\022\022\n\ncanSweepId\030\003 \003",
      "(\005\032/\n\rPassInfoEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005valu" +
      "e\030\002 \001(\005:\0028\001B\033\n\010protocol\252\002\016ETHotfix.Proto" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_DB_BossTower_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DB_BossTower_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_BossTower_descriptor,
        new java.lang.String[] { "Pass", "TodayAlreadyChallengeTimes", "MaxCfgId", "TodayVipBuyTime", "TodayVipUseTime", "TodayItemBuy", });
    internal_static_DB_BossTower_PassEntry_descriptor =
      internal_static_DB_BossTower_descriptor.getNestedTypes().get(0);
    internal_static_DB_BossTower_PassEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_BossTower_PassEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_BossTowerPassCondition_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_DB_BossTowerPassCondition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_BossTowerPassCondition_descriptor,
        new java.lang.String[] { "ConfigId", "PassInfo", "CanSweepId", });
    internal_static_DB_BossTowerPassCondition_PassInfoEntry_descriptor =
      internal_static_DB_BossTowerPassCondition_descriptor.getNestedTypes().get(0);
    internal_static_DB_BossTowerPassCondition_PassInfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_BossTowerPassCondition_PassInfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
