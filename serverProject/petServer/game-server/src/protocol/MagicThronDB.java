// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MagicThronDB.proto

package protocol;

public final class MagicThronDB {
  private MagicThronDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DB_MagicThronOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_MagicThron)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    java.util.List<protocol.MagicThronDB.MagicBattleRecord> 
        getRecordList();
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    protocol.MagicThronDB.MagicBattleRecord getRecord(int index);
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    int getRecordCount();
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    java.util.List<? extends protocol.MagicThronDB.MagicBattleRecordOrBuilder> 
        getRecordOrBuilderList();
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    protocol.MagicThronDB.MagicBattleRecordOrBuilder getRecordOrBuilder(
        int index);

    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */
    int getBossTimesCount();
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */
    boolean containsBossTimes(
        int key);
    /**
     * Use {@link #getBossTimesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBossTimes();
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBossTimesMap();
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    int getBossTimesOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    int getBossTimesOrThrow(
        int key);

    /**
     * <pre>
     *单次最大伤害
     * </pre>
     *
     * <code>int64 maxDamageOnce = 4;</code>
     */
    long getMaxDamageOnce();

    /**
     * <pre>
     *累积伤害
     * </pre>
     *
     * <code>int64 cumuDamage = 5;</code>
     */
    long getCumuDamage();

    /**
     * <pre>
     *上次伤害
     * </pre>
     *
     * <code>int64 lastDamage = 6;</code>
     */
    long getLastDamage();
  }
  /**
   * Protobuf type {@code DB_MagicThron}
   */
  public  static final class DB_MagicThron extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_MagicThron)
      DB_MagicThronOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_MagicThron.newBuilder() to construct.
    private DB_MagicThron(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_MagicThron() {
      record_ = java.util.Collections.emptyList();
      maxDamageOnce_ = 0L;
      cumuDamage_ = 0L;
      lastDamage_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_MagicThron(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                record_ = new java.util.ArrayList<protocol.MagicThronDB.MagicBattleRecord>();
                mutable_bitField0_ |= 0x00000001;
              }
              record_.add(
                  input.readMessage(protocol.MagicThronDB.MagicBattleRecord.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bossTimes_ = com.google.protobuf.MapField.newMapField(
                    BossTimesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              bossTimes__ = input.readMessage(
                  BossTimesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bossTimes_.getMutableMap().put(
                  bossTimes__.getKey(), bossTimes__.getValue());
              break;
            }
            case 32: {

              maxDamageOnce_ = input.readInt64();
              break;
            }
            case 40: {

              cumuDamage_ = input.readInt64();
              break;
            }
            case 48: {

              lastDamage_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          record_ = java.util.Collections.unmodifiableList(record_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.MagicThronDB.internal_static_DB_MagicThron_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetBossTimes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.MagicThronDB.internal_static_DB_MagicThron_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.MagicThronDB.DB_MagicThron.class, protocol.MagicThronDB.DB_MagicThron.Builder.class);
    }

    private int bitField0_;
    public static final int RECORD_FIELD_NUMBER = 1;
    private java.util.List<protocol.MagicThronDB.MagicBattleRecord> record_;
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    public java.util.List<protocol.MagicThronDB.MagicBattleRecord> getRecordList() {
      return record_;
    }
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    public java.util.List<? extends protocol.MagicThronDB.MagicBattleRecordOrBuilder> 
        getRecordOrBuilderList() {
      return record_;
    }
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    public int getRecordCount() {
      return record_.size();
    }
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    public protocol.MagicThronDB.MagicBattleRecord getRecord(int index) {
      return record_.get(index);
    }
    /**
     * <pre>
     *记录
     * </pre>
     *
     * <code>repeated .MagicBattleRecord record = 1;</code>
     */
    public protocol.MagicThronDB.MagicBattleRecordOrBuilder getRecordOrBuilder(
        int index) {
      return record_.get(index);
    }

    public static final int BOSSTIMES_FIELD_NUMBER = 3;
    private static final class BossTimesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.MagicThronDB.internal_static_DB_MagicThron_BossTimesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> bossTimes_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetBossTimes() {
      if (bossTimes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BossTimesDefaultEntryHolder.defaultEntry);
      }
      return bossTimes_;
    }

    public int getBossTimesCount() {
      return internalGetBossTimes().getMap().size();
    }
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    public boolean containsBossTimes(
        int key) {
      
      return internalGetBossTimes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBossTimesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getBossTimes() {
      return getBossTimesMap();
    }
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getBossTimesMap() {
      return internalGetBossTimes().getMap();
    }
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    public int getBossTimesOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBossTimes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *boss挑战
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
     */

    public int getBossTimesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBossTimes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAXDAMAGEONCE_FIELD_NUMBER = 4;
    private long maxDamageOnce_;
    /**
     * <pre>
     *单次最大伤害
     * </pre>
     *
     * <code>int64 maxDamageOnce = 4;</code>
     */
    public long getMaxDamageOnce() {
      return maxDamageOnce_;
    }

    public static final int CUMUDAMAGE_FIELD_NUMBER = 5;
    private long cumuDamage_;
    /**
     * <pre>
     *累积伤害
     * </pre>
     *
     * <code>int64 cumuDamage = 5;</code>
     */
    public long getCumuDamage() {
      return cumuDamage_;
    }

    public static final int LASTDAMAGE_FIELD_NUMBER = 6;
    private long lastDamage_;
    /**
     * <pre>
     *上次伤害
     * </pre>
     *
     * <code>int64 lastDamage = 6;</code>
     */
    public long getLastDamage() {
      return lastDamage_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < record_.size(); i++) {
        output.writeMessage(1, record_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBossTimes(),
          BossTimesDefaultEntryHolder.defaultEntry,
          3);
      if (maxDamageOnce_ != 0L) {
        output.writeInt64(4, maxDamageOnce_);
      }
      if (cumuDamage_ != 0L) {
        output.writeInt64(5, cumuDamage_);
      }
      if (lastDamage_ != 0L) {
        output.writeInt64(6, lastDamage_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < record_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, record_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetBossTimes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        bossTimes__ = BossTimesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, bossTimes__);
      }
      if (maxDamageOnce_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, maxDamageOnce_);
      }
      if (cumuDamage_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, cumuDamage_);
      }
      if (lastDamage_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, lastDamage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.MagicThronDB.DB_MagicThron)) {
        return super.equals(obj);
      }
      protocol.MagicThronDB.DB_MagicThron other = (protocol.MagicThronDB.DB_MagicThron) obj;

      boolean result = true;
      result = result && getRecordList()
          .equals(other.getRecordList());
      result = result && internalGetBossTimes().equals(
          other.internalGetBossTimes());
      result = result && (getMaxDamageOnce()
          == other.getMaxDamageOnce());
      result = result && (getCumuDamage()
          == other.getCumuDamage());
      result = result && (getLastDamage()
          == other.getLastDamage());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRecordCount() > 0) {
        hash = (37 * hash) + RECORD_FIELD_NUMBER;
        hash = (53 * hash) + getRecordList().hashCode();
      }
      if (!internalGetBossTimes().getMap().isEmpty()) {
        hash = (37 * hash) + BOSSTIMES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBossTimes().hashCode();
      }
      hash = (37 * hash) + MAXDAMAGEONCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxDamageOnce());
      hash = (37 * hash) + CUMUDAMAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCumuDamage());
      hash = (37 * hash) + LASTDAMAGE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastDamage());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.DB_MagicThron parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.MagicThronDB.DB_MagicThron prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_MagicThron}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_MagicThron)
        protocol.MagicThronDB.DB_MagicThronOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.MagicThronDB.internal_static_DB_MagicThron_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetBossTimes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableBossTimes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.MagicThronDB.internal_static_DB_MagicThron_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.MagicThronDB.DB_MagicThron.class, protocol.MagicThronDB.DB_MagicThron.Builder.class);
      }

      // Construct using protocol.MagicThronDB.DB_MagicThron.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRecordFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          recordBuilder_.clear();
        }
        internalGetMutableBossTimes().clear();
        maxDamageOnce_ = 0L;

        cumuDamage_ = 0L;

        lastDamage_ = 0L;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.MagicThronDB.internal_static_DB_MagicThron_descriptor;
      }

      public protocol.MagicThronDB.DB_MagicThron getDefaultInstanceForType() {
        return protocol.MagicThronDB.DB_MagicThron.getDefaultInstance();
      }

      public protocol.MagicThronDB.DB_MagicThron build() {
        protocol.MagicThronDB.DB_MagicThron result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.MagicThronDB.DB_MagicThron buildPartial() {
        protocol.MagicThronDB.DB_MagicThron result = new protocol.MagicThronDB.DB_MagicThron(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (recordBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            record_ = java.util.Collections.unmodifiableList(record_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.record_ = record_;
        } else {
          result.record_ = recordBuilder_.build();
        }
        result.bossTimes_ = internalGetBossTimes();
        result.bossTimes_.makeImmutable();
        result.maxDamageOnce_ = maxDamageOnce_;
        result.cumuDamage_ = cumuDamage_;
        result.lastDamage_ = lastDamage_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.MagicThronDB.DB_MagicThron) {
          return mergeFrom((protocol.MagicThronDB.DB_MagicThron)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.MagicThronDB.DB_MagicThron other) {
        if (other == protocol.MagicThronDB.DB_MagicThron.getDefaultInstance()) return this;
        if (recordBuilder_ == null) {
          if (!other.record_.isEmpty()) {
            if (record_.isEmpty()) {
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRecordIsMutable();
              record_.addAll(other.record_);
            }
            onChanged();
          }
        } else {
          if (!other.record_.isEmpty()) {
            if (recordBuilder_.isEmpty()) {
              recordBuilder_.dispose();
              recordBuilder_ = null;
              record_ = other.record_;
              bitField0_ = (bitField0_ & ~0x00000001);
              recordBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRecordFieldBuilder() : null;
            } else {
              recordBuilder_.addAllMessages(other.record_);
            }
          }
        }
        internalGetMutableBossTimes().mergeFrom(
            other.internalGetBossTimes());
        if (other.getMaxDamageOnce() != 0L) {
          setMaxDamageOnce(other.getMaxDamageOnce());
        }
        if (other.getCumuDamage() != 0L) {
          setCumuDamage(other.getCumuDamage());
        }
        if (other.getLastDamage() != 0L) {
          setLastDamage(other.getLastDamage());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.MagicThronDB.DB_MagicThron parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.MagicThronDB.DB_MagicThron) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.MagicThronDB.MagicBattleRecord> record_ =
        java.util.Collections.emptyList();
      private void ensureRecordIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          record_ = new java.util.ArrayList<protocol.MagicThronDB.MagicBattleRecord>(record_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.MagicThronDB.MagicBattleRecord, protocol.MagicThronDB.MagicBattleRecord.Builder, protocol.MagicThronDB.MagicBattleRecordOrBuilder> recordBuilder_;

      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public java.util.List<protocol.MagicThronDB.MagicBattleRecord> getRecordList() {
        if (recordBuilder_ == null) {
          return java.util.Collections.unmodifiableList(record_);
        } else {
          return recordBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public int getRecordCount() {
        if (recordBuilder_ == null) {
          return record_.size();
        } else {
          return recordBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public protocol.MagicThronDB.MagicBattleRecord getRecord(int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);
        } else {
          return recordBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder setRecord(
          int index, protocol.MagicThronDB.MagicBattleRecord value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.set(index, value);
          onChanged();
        } else {
          recordBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder setRecord(
          int index, protocol.MagicThronDB.MagicBattleRecord.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.set(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder addRecord(protocol.MagicThronDB.MagicBattleRecord value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(value);
          onChanged();
        } else {
          recordBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder addRecord(
          int index, protocol.MagicThronDB.MagicBattleRecord value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRecordIsMutable();
          record_.add(index, value);
          onChanged();
        } else {
          recordBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder addRecord(
          protocol.MagicThronDB.MagicBattleRecord.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder addRecord(
          int index, protocol.MagicThronDB.MagicBattleRecord.Builder builderForValue) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.add(index, builderForValue.build());
          onChanged();
        } else {
          recordBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder addAllRecord(
          java.lang.Iterable<? extends protocol.MagicThronDB.MagicBattleRecord> values) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, record_);
          onChanged();
        } else {
          recordBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder clearRecord() {
        if (recordBuilder_ == null) {
          record_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          recordBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public Builder removeRecord(int index) {
        if (recordBuilder_ == null) {
          ensureRecordIsMutable();
          record_.remove(index);
          onChanged();
        } else {
          recordBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public protocol.MagicThronDB.MagicBattleRecord.Builder getRecordBuilder(
          int index) {
        return getRecordFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public protocol.MagicThronDB.MagicBattleRecordOrBuilder getRecordOrBuilder(
          int index) {
        if (recordBuilder_ == null) {
          return record_.get(index);  } else {
          return recordBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public java.util.List<? extends protocol.MagicThronDB.MagicBattleRecordOrBuilder> 
           getRecordOrBuilderList() {
        if (recordBuilder_ != null) {
          return recordBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(record_);
        }
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public protocol.MagicThronDB.MagicBattleRecord.Builder addRecordBuilder() {
        return getRecordFieldBuilder().addBuilder(
            protocol.MagicThronDB.MagicBattleRecord.getDefaultInstance());
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public protocol.MagicThronDB.MagicBattleRecord.Builder addRecordBuilder(
          int index) {
        return getRecordFieldBuilder().addBuilder(
            index, protocol.MagicThronDB.MagicBattleRecord.getDefaultInstance());
      }
      /**
       * <pre>
       *记录
       * </pre>
       *
       * <code>repeated .MagicBattleRecord record = 1;</code>
       */
      public java.util.List<protocol.MagicThronDB.MagicBattleRecord.Builder> 
           getRecordBuilderList() {
        return getRecordFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.MagicThronDB.MagicBattleRecord, protocol.MagicThronDB.MagicBattleRecord.Builder, protocol.MagicThronDB.MagicBattleRecordOrBuilder> 
          getRecordFieldBuilder() {
        if (recordBuilder_ == null) {
          recordBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.MagicThronDB.MagicBattleRecord, protocol.MagicThronDB.MagicBattleRecord.Builder, protocol.MagicThronDB.MagicBattleRecordOrBuilder>(
                  record_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          record_ = null;
        }
        return recordBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> bossTimes_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetBossTimes() {
        if (bossTimes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BossTimesDefaultEntryHolder.defaultEntry);
        }
        return bossTimes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableBossTimes() {
        onChanged();;
        if (bossTimes_ == null) {
          bossTimes_ = com.google.protobuf.MapField.newMapField(
              BossTimesDefaultEntryHolder.defaultEntry);
        }
        if (!bossTimes_.isMutable()) {
          bossTimes_ = bossTimes_.copy();
        }
        return bossTimes_;
      }

      public int getBossTimesCount() {
        return internalGetBossTimes().getMap().size();
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public boolean containsBossTimes(
          int key) {
        
        return internalGetBossTimes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBossTimesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getBossTimes() {
        return getBossTimesMap();
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getBossTimesMap() {
        return internalGetBossTimes().getMap();
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public int getBossTimesOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBossTimes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public int getBossTimesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBossTimes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBossTimes() {
        internalGetMutableBossTimes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public Builder removeBossTimes(
          int key) {
        
        internalGetMutableBossTimes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableBossTimes() {
        return internalGetMutableBossTimes().getMutableMap();
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */
      public Builder putBossTimes(
          int key,
          int value) {
        
        
        internalGetMutableBossTimes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *boss挑战
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; bossTimes = 3;</code>
       */

      public Builder putAllBossTimes(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableBossTimes().getMutableMap()
            .putAll(values);
        return this;
      }

      private long maxDamageOnce_ ;
      /**
       * <pre>
       *单次最大伤害
       * </pre>
       *
       * <code>int64 maxDamageOnce = 4;</code>
       */
      public long getMaxDamageOnce() {
        return maxDamageOnce_;
      }
      /**
       * <pre>
       *单次最大伤害
       * </pre>
       *
       * <code>int64 maxDamageOnce = 4;</code>
       */
      public Builder setMaxDamageOnce(long value) {
        
        maxDamageOnce_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *单次最大伤害
       * </pre>
       *
       * <code>int64 maxDamageOnce = 4;</code>
       */
      public Builder clearMaxDamageOnce() {
        
        maxDamageOnce_ = 0L;
        onChanged();
        return this;
      }

      private long cumuDamage_ ;
      /**
       * <pre>
       *累积伤害
       * </pre>
       *
       * <code>int64 cumuDamage = 5;</code>
       */
      public long getCumuDamage() {
        return cumuDamage_;
      }
      /**
       * <pre>
       *累积伤害
       * </pre>
       *
       * <code>int64 cumuDamage = 5;</code>
       */
      public Builder setCumuDamage(long value) {
        
        cumuDamage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *累积伤害
       * </pre>
       *
       * <code>int64 cumuDamage = 5;</code>
       */
      public Builder clearCumuDamage() {
        
        cumuDamage_ = 0L;
        onChanged();
        return this;
      }

      private long lastDamage_ ;
      /**
       * <pre>
       *上次伤害
       * </pre>
       *
       * <code>int64 lastDamage = 6;</code>
       */
      public long getLastDamage() {
        return lastDamage_;
      }
      /**
       * <pre>
       *上次伤害
       * </pre>
       *
       * <code>int64 lastDamage = 6;</code>
       */
      public Builder setLastDamage(long value) {
        
        lastDamage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *上次伤害
       * </pre>
       *
       * <code>int64 lastDamage = 6;</code>
       */
      public Builder clearLastDamage() {
        
        lastDamage_ = 0L;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_MagicThron)
    }

    // @@protoc_insertion_point(class_scope:DB_MagicThron)
    private static final protocol.MagicThronDB.DB_MagicThron DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.MagicThronDB.DB_MagicThron();
    }

    public static protocol.MagicThronDB.DB_MagicThron getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_MagicThron>
        PARSER = new com.google.protobuf.AbstractParser<DB_MagicThron>() {
      public DB_MagicThron parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_MagicThron(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_MagicThron> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_MagicThron> getParserForType() {
      return PARSER;
    }

    public protocol.MagicThronDB.DB_MagicThron getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MagicBattleRecordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MagicBattleRecord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *boss形象id
     * </pre>
     *
     * <code>int32 bossPetId = 1;</code>
     */
    int getBossPetId();

    /**
     * <code>string battleId = 2;</code>
     */
    java.lang.String getBattleId();
    /**
     * <code>string battleId = 2;</code>
     */
    com.google.protobuf.ByteString
        getBattleIdBytes();

    /**
     * <pre>
     *boss难度
     * </pre>
     *
     * <code>int32 difficult = 3;</code>
     */
    int getDifficult();

    /**
     * <code>int64 time = 4;</code>
     */
    long getTime();

    /**
     * <code>int64 power = 5;</code>
     */
    long getPower();

    /**
     * <pre>
     *区域id
     * </pre>
     *
     * <code>int32 areaId = 6;</code>
     */
    int getAreaId();
  }
  /**
   * Protobuf type {@code MagicBattleRecord}
   */
  public  static final class MagicBattleRecord extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MagicBattleRecord)
      MagicBattleRecordOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MagicBattleRecord.newBuilder() to construct.
    private MagicBattleRecord(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MagicBattleRecord() {
      bossPetId_ = 0;
      battleId_ = "";
      difficult_ = 0;
      time_ = 0L;
      power_ = 0L;
      areaId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MagicBattleRecord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              bossPetId_ = input.readInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              battleId_ = s;
              break;
            }
            case 24: {

              difficult_ = input.readInt32();
              break;
            }
            case 32: {

              time_ = input.readInt64();
              break;
            }
            case 40: {

              power_ = input.readInt64();
              break;
            }
            case 48: {

              areaId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.MagicThronDB.internal_static_MagicBattleRecord_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.MagicThronDB.internal_static_MagicBattleRecord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.MagicThronDB.MagicBattleRecord.class, protocol.MagicThronDB.MagicBattleRecord.Builder.class);
    }

    public static final int BOSSPETID_FIELD_NUMBER = 1;
    private int bossPetId_;
    /**
     * <pre>
     *boss形象id
     * </pre>
     *
     * <code>int32 bossPetId = 1;</code>
     */
    public int getBossPetId() {
      return bossPetId_;
    }

    public static final int BATTLEID_FIELD_NUMBER = 2;
    private volatile java.lang.Object battleId_;
    /**
     * <code>string battleId = 2;</code>
     */
    public java.lang.String getBattleId() {
      java.lang.Object ref = battleId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        battleId_ = s;
        return s;
      }
    }
    /**
     * <code>string battleId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBattleIdBytes() {
      java.lang.Object ref = battleId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        battleId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIFFICULT_FIELD_NUMBER = 3;
    private int difficult_;
    /**
     * <pre>
     *boss难度
     * </pre>
     *
     * <code>int32 difficult = 3;</code>
     */
    public int getDifficult() {
      return difficult_;
    }

    public static final int TIME_FIELD_NUMBER = 4;
    private long time_;
    /**
     * <code>int64 time = 4;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int POWER_FIELD_NUMBER = 5;
    private long power_;
    /**
     * <code>int64 power = 5;</code>
     */
    public long getPower() {
      return power_;
    }

    public static final int AREAID_FIELD_NUMBER = 6;
    private int areaId_;
    /**
     * <pre>
     *区域id
     * </pre>
     *
     * <code>int32 areaId = 6;</code>
     */
    public int getAreaId() {
      return areaId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bossPetId_ != 0) {
        output.writeInt32(1, bossPetId_);
      }
      if (!getBattleIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, battleId_);
      }
      if (difficult_ != 0) {
        output.writeInt32(3, difficult_);
      }
      if (time_ != 0L) {
        output.writeInt64(4, time_);
      }
      if (power_ != 0L) {
        output.writeInt64(5, power_);
      }
      if (areaId_ != 0) {
        output.writeInt32(6, areaId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bossPetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, bossPetId_);
      }
      if (!getBattleIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, battleId_);
      }
      if (difficult_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, difficult_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, time_);
      }
      if (power_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, power_);
      }
      if (areaId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, areaId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.MagicThronDB.MagicBattleRecord)) {
        return super.equals(obj);
      }
      protocol.MagicThronDB.MagicBattleRecord other = (protocol.MagicThronDB.MagicBattleRecord) obj;

      boolean result = true;
      result = result && (getBossPetId()
          == other.getBossPetId());
      result = result && getBattleId()
          .equals(other.getBattleId());
      result = result && (getDifficult()
          == other.getDifficult());
      result = result && (getTime()
          == other.getTime());
      result = result && (getPower()
          == other.getPower());
      result = result && (getAreaId()
          == other.getAreaId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BOSSPETID_FIELD_NUMBER;
      hash = (53 * hash) + getBossPetId();
      hash = (37 * hash) + BATTLEID_FIELD_NUMBER;
      hash = (53 * hash) + getBattleId().hashCode();
      hash = (37 * hash) + DIFFICULT_FIELD_NUMBER;
      hash = (53 * hash) + getDifficult();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
      hash = (37 * hash) + AREAID_FIELD_NUMBER;
      hash = (53 * hash) + getAreaId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.MagicThronDB.MagicBattleRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.MagicThronDB.MagicBattleRecord prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MagicBattleRecord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MagicBattleRecord)
        protocol.MagicThronDB.MagicBattleRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.MagicThronDB.internal_static_MagicBattleRecord_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.MagicThronDB.internal_static_MagicBattleRecord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.MagicThronDB.MagicBattleRecord.class, protocol.MagicThronDB.MagicBattleRecord.Builder.class);
      }

      // Construct using protocol.MagicThronDB.MagicBattleRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        bossPetId_ = 0;

        battleId_ = "";

        difficult_ = 0;

        time_ = 0L;

        power_ = 0L;

        areaId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.MagicThronDB.internal_static_MagicBattleRecord_descriptor;
      }

      public protocol.MagicThronDB.MagicBattleRecord getDefaultInstanceForType() {
        return protocol.MagicThronDB.MagicBattleRecord.getDefaultInstance();
      }

      public protocol.MagicThronDB.MagicBattleRecord build() {
        protocol.MagicThronDB.MagicBattleRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.MagicThronDB.MagicBattleRecord buildPartial() {
        protocol.MagicThronDB.MagicBattleRecord result = new protocol.MagicThronDB.MagicBattleRecord(this);
        result.bossPetId_ = bossPetId_;
        result.battleId_ = battleId_;
        result.difficult_ = difficult_;
        result.time_ = time_;
        result.power_ = power_;
        result.areaId_ = areaId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.MagicThronDB.MagicBattleRecord) {
          return mergeFrom((protocol.MagicThronDB.MagicBattleRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.MagicThronDB.MagicBattleRecord other) {
        if (other == protocol.MagicThronDB.MagicBattleRecord.getDefaultInstance()) return this;
        if (other.getBossPetId() != 0) {
          setBossPetId(other.getBossPetId());
        }
        if (!other.getBattleId().isEmpty()) {
          battleId_ = other.battleId_;
          onChanged();
        }
        if (other.getDifficult() != 0) {
          setDifficult(other.getDifficult());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getPower() != 0L) {
          setPower(other.getPower());
        }
        if (other.getAreaId() != 0) {
          setAreaId(other.getAreaId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.MagicThronDB.MagicBattleRecord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.MagicThronDB.MagicBattleRecord) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int bossPetId_ ;
      /**
       * <pre>
       *boss形象id
       * </pre>
       *
       * <code>int32 bossPetId = 1;</code>
       */
      public int getBossPetId() {
        return bossPetId_;
      }
      /**
       * <pre>
       *boss形象id
       * </pre>
       *
       * <code>int32 bossPetId = 1;</code>
       */
      public Builder setBossPetId(int value) {
        
        bossPetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *boss形象id
       * </pre>
       *
       * <code>int32 bossPetId = 1;</code>
       */
      public Builder clearBossPetId() {
        
        bossPetId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object battleId_ = "";
      /**
       * <code>string battleId = 2;</code>
       */
      public java.lang.String getBattleId() {
        java.lang.Object ref = battleId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          battleId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string battleId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBattleIdBytes() {
        java.lang.Object ref = battleId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          battleId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string battleId = 2;</code>
       */
      public Builder setBattleId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        battleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string battleId = 2;</code>
       */
      public Builder clearBattleId() {
        
        battleId_ = getDefaultInstance().getBattleId();
        onChanged();
        return this;
      }
      /**
       * <code>string battleId = 2;</code>
       */
      public Builder setBattleIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        battleId_ = value;
        onChanged();
        return this;
      }

      private int difficult_ ;
      /**
       * <pre>
       *boss难度
       * </pre>
       *
       * <code>int32 difficult = 3;</code>
       */
      public int getDifficult() {
        return difficult_;
      }
      /**
       * <pre>
       *boss难度
       * </pre>
       *
       * <code>int32 difficult = 3;</code>
       */
      public Builder setDifficult(int value) {
        
        difficult_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *boss难度
       * </pre>
       *
       * <code>int32 difficult = 3;</code>
       */
      public Builder clearDifficult() {
        
        difficult_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 4;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 4;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 4;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private long power_ ;
      /**
       * <code>int64 power = 5;</code>
       */
      public long getPower() {
        return power_;
      }
      /**
       * <code>int64 power = 5;</code>
       */
      public Builder setPower(long value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 power = 5;</code>
       */
      public Builder clearPower() {
        
        power_ = 0L;
        onChanged();
        return this;
      }

      private int areaId_ ;
      /**
       * <pre>
       *区域id
       * </pre>
       *
       * <code>int32 areaId = 6;</code>
       */
      public int getAreaId() {
        return areaId_;
      }
      /**
       * <pre>
       *区域id
       * </pre>
       *
       * <code>int32 areaId = 6;</code>
       */
      public Builder setAreaId(int value) {
        
        areaId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *区域id
       * </pre>
       *
       * <code>int32 areaId = 6;</code>
       */
      public Builder clearAreaId() {
        
        areaId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MagicBattleRecord)
    }

    // @@protoc_insertion_point(class_scope:MagicBattleRecord)
    private static final protocol.MagicThronDB.MagicBattleRecord DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.MagicThronDB.MagicBattleRecord();
    }

    public static protocol.MagicThronDB.MagicBattleRecord getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MagicBattleRecord>
        PARSER = new com.google.protobuf.AbstractParser<MagicBattleRecord>() {
      public MagicBattleRecord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MagicBattleRecord(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MagicBattleRecord> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MagicBattleRecord> getParserForType() {
      return PARSER;
    }

    public protocol.MagicThronDB.MagicBattleRecord getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_MagicThron_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_MagicThron_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_MagicThron_BossTimesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_MagicThron_BossTimesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MagicBattleRecord_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MagicBattleRecord_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022MagicThronDB.proto\032\020MagicThron.proto\032\014" +
      "Battle.proto\032\014Common.proto\"\326\001\n\rDB_MagicT" +
      "hron\022\"\n\006record\030\001 \003(\0132\022.MagicBattleRecord" +
      "\0220\n\tbossTimes\030\003 \003(\0132\035.DB_MagicThron.Boss" +
      "TimesEntry\022\025\n\rmaxDamageOnce\030\004 \001(\003\022\022\n\ncum" +
      "uDamage\030\005 \001(\003\022\022\n\nlastDamage\030\006 \001(\003\0320\n\016Bos" +
      "sTimesEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:" +
      "\0028\001\"x\n\021MagicBattleRecord\022\021\n\tbossPetId\030\001 " +
      "\001(\005\022\020\n\010battleId\030\002 \001(\t\022\021\n\tdifficult\030\003 \001(\005" +
      "\022\014\n\004time\030\004 \001(\003\022\r\n\005power\030\005 \001(\003\022\016\n\006areaId\030",
      "\006 \001(\005B\033\n\010protocol\252\002\016ETHotfix.Protob\006prot" +
      "o3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.MagicThron.getDescriptor(),
          protocol.Battle.getDescriptor(),
          protocol.Common.getDescriptor(),
        }, assigner);
    internal_static_DB_MagicThron_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DB_MagicThron_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_MagicThron_descriptor,
        new java.lang.String[] { "Record", "BossTimes", "MaxDamageOnce", "CumuDamage", "LastDamage", });
    internal_static_DB_MagicThron_BossTimesEntry_descriptor =
      internal_static_DB_MagicThron_descriptor.getNestedTypes().get(0);
    internal_static_DB_MagicThron_BossTimesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_MagicThron_BossTimesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_MagicBattleRecord_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_MagicBattleRecord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MagicBattleRecord_descriptor,
        new java.lang.String[] { "BossPetId", "BattleId", "Difficult", "Time", "Power", "AreaId", });
    protocol.MagicThron.getDescriptor();
    protocol.Battle.getDescriptor();
    protocol.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
