// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrainingDB.proto

package protocol;

public final class TrainingDB {
  private TrainingDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TrainDBMapOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainDBMap)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 训练场ID
     * </pre>
     *
     * <code>int32 mapId = 1;</code>
     */
    int getMapId();

    /**
     * <code>int64 openTime = 2;</code>
     */
    long getOpenTime();

    /**
     * <code>int64 closeTime = 3;</code>
     */
    long getCloseTime();

    /**
     * <code>int32 currPos = 4;</code>
     */
    int getCurrPos();

    /**
     * <code>int32 isBlessing = 5;</code>
     */
    int getIsBlessing();

    /**
     * <code>int32 starNum = 6;</code>
     */
    int getStarNum();

    /**
     * <code>int32 jifen = 7;</code>
     */
    int getJifen();

    /**
     * <code>int64 jifenRefTime = 8;</code>
     */
    long getJifenRefTime();

    /**
     * <code>int32 endRankMC = 9;</code>
     */
    int getEndRankMC();

    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    java.util.List<protocol.Common.Reward> 
        getRewardList();
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    protocol.Common.Reward getReward(int index);
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    int getRewardCount();
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    java.util.List<? extends protocol.Common.RewardOrBuilder> 
        getRewardOrBuilderList();
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    protocol.Common.RewardOrBuilder getRewardOrBuilder(
        int index);

    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    java.util.List<protocol.Training.TrainKV> 
        getGoNumList();
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    protocol.Training.TrainKV getGoNum(int index);
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    int getGoNumCount();
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getGoNumOrBuilderList();
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    protocol.Training.TrainKVOrBuilder getGoNumOrBuilder(
        int index);

    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    java.util.List<protocol.Training.TrainKV> 
        getShopBuyList();
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    protocol.Training.TrainKV getShopBuy(int index);
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    int getShopBuyCount();
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getShopBuyOrBuilderList();
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    protocol.Training.TrainKVOrBuilder getShopBuyOrBuilder(
        int index);

    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    java.util.List<protocol.Training.TrainKV> 
        getUsebuffList();
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    protocol.Training.TrainKV getUsebuff(int index);
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    int getUsebuffCount();
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getUsebuffOrBuilderList();
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    protocol.Training.TrainKVOrBuilder getUsebuffOrBuilder(
        int index);

    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    java.util.List<protocol.TrainingDB.TrainHelpPetData> 
        getMlidsList();
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    protocol.TrainingDB.TrainHelpPetData getMlids(int index);
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    int getMlidsCount();
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    java.util.List<? extends protocol.TrainingDB.TrainHelpPetDataOrBuilder> 
        getMlidsOrBuilderList();
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    protocol.TrainingDB.TrainHelpPetDataOrBuilder getMlidsOrBuilder(
        int index);

    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    java.util.List<java.lang.Integer> getBuffIdsList();
    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    int getBuffIdsCount();
    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    int getBuffIds(int index);

    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */
    int getStarMapCount();
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */
    boolean containsStarMap(
        int key);
    /**
     * Use {@link #getStarMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getStarMap();
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getStarMapMap();
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    int getStarMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    int getStarMapOrThrow(
        int key);

    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */
    int getItemMapCount();
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */
    boolean containsItemMap(
        java.lang.String key);
    /**
     * Use {@link #getItemMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, protocol.Training.TrainItem>
    getItemMap();
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */
    java.util.Map<java.lang.String, protocol.Training.TrainItem>
    getItemMapMap();
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    protocol.Training.TrainItem getItemMapOrDefault(
        java.lang.String key,
        protocol.Training.TrainItem defaultValue);
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    protocol.Training.TrainItem getItemMapOrThrow(
        java.lang.String key);

    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */
    int getPrepareUseCount();
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */
    boolean containsPrepareUse(
        int key);
    /**
     * Use {@link #getPrepareUseMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPrepareUse();
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPrepareUseMap();
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    int getPrepareUseOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    int getPrepareUseOrThrow(
        int key);

    /**
     * <pre>
     *玩家选择的起点
     * </pre>
     *
     * <code>int32 startId = 19;</code>
     */
    int getStartId();

    /**
     * <pre>
     *当前已打败的boss
     * </pre>
     *
     * <code>int32 curBoss = 20;</code>
     */
    int getCurBoss();

    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */
    int getShopCount();
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */
    boolean containsShop(
        int key);
    /**
     * Use {@link #getShopMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
    getShop();
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
    getShopMap();
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    protocol.TrainingDB.TrainShopGroup getShopOrDefault(
        int key,
        protocol.TrainingDB.TrainShopGroup defaultValue);
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    protocol.TrainingDB.TrainShopGroup getShopOrThrow(
        int key);

    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    boolean hasBuffBag();
    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    protocol.Training.TrainBuffBag getBuffBag();
    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    protocol.Training.TrainBuffBagOrBuilder getBuffBagOrBuilder();

    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    boolean hasItemBag();
    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    protocol.Training.TrainItemBag getItemBag();
    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    protocol.Training.TrainItemBagOrBuilder getItemBagOrBuilder();

    /**
     * <pre>
     *buff背包对应的点
     * </pre>
     *
     * <code>int32 preparPoint = 24;</code>
     */
    int getPreparPoint();

    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    java.util.List<java.lang.Integer> getCurpathList();
    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    int getCurpathCount();
    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    int getCurpath(int index);

    /**
     * <pre>
     *祝福卡抽奖结束时间
     * </pre>
     *
     * <code>int64 luckbuffendtime = 26;</code>
     */
    long getLuckbuffendtime();

    /**
     * <pre>
     *祝福卡抽奖次数
     * </pre>
     *
     * <code>int32 luckbufftime = 27;</code>
     */
    int getLuckbufftime();

    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    java.util.List<java.lang.Integer> getLuckbuffidList();
    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    int getLuckbuffidCount();
    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    int getLuckbuffid(int index);

    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */
    int getLuckDataCount();
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */
    boolean containsLuckData(
        int key);
    /**
     * Use {@link #getLuckDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    getLuckData();
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    getLuckDataMap();
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    protocol.TrainingDB.TrainLuckData getLuckDataOrDefault(
        int key,
        protocol.TrainingDB.TrainLuckData defaultValue);
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    protocol.TrainingDB.TrainLuckData getLuckDataOrThrow(
        int key);

    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */
    int getCardMapCount();
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */
    boolean containsCardMap(
        int key);
    /**
     * Use {@link #getCardMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard>
    getCardMap();
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */
    java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard>
    getCardMapMap();
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    protocol.Training.TrainLuckCard getCardMapOrDefault(
        int key,
        protocol.Training.TrainLuckCard defaultValue);
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    protocol.Training.TrainLuckCard getCardMapOrThrow(
        int key);

    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */
    int getCardWeightChangeCount();
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */
    boolean containsCardWeightChange(
        int key);
    /**
     * Use {@link #getCardWeightChangeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardWeightChange();
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardWeightChangeMap();
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    int getCardWeightChangeOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    int getCardWeightChangeOrThrow(
        int key);

    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */
    int getBuffFlagCount();
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */
    boolean containsBuffFlag(
        int key);
    /**
     * Use {@link #getBuffFlagMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    getBuffFlag();
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    getBuffFlagMap();
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    protocol.TrainingDB.TrainLuckData getBuffFlagOrDefault(
        int key,
        protocol.TrainingDB.TrainLuckData defaultValue);
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    protocol.TrainingDB.TrainLuckData getBuffFlagOrThrow(
        int key);

    /**
     * <pre>
     *积分百分比增加
     * </pre>
     *
     * <code>int32 jifenPer = 33;</code>
     */
    int getJifenPer();

    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    boolean hasEventData();
    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    protocol.TrainingDB.TraingEventData getEventData();
    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    protocol.TrainingDB.TraingEventDataOrBuilder getEventDataOrBuilder();

    /**
     * <pre>
     *当前限时祝福卡ID标记
     * </pre>
     *
     * <code>int32 limitCardId = 35;</code>
     */
    int getLimitCardId();

    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */
    int getChangePointCount();
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */
    boolean containsChangePoint(
        int key);
    /**
     * Use {@link #getChangePointMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getChangePoint();
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getChangePointMap();
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    int getChangePointOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    int getChangePointOrThrow(
        int key);

    /**
     * <code>int64 joinPower = 37;</code>
     */
    long getJoinPower();

    /**
     * <code>int64 endPower = 38;</code>
     */
    long getEndPower();

    /**
     * <code>int32 reportCardLevel = 39;</code>
     */
    int getReportCardLevel();

    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    java.util.List<protocol.Training.TrainLimitCard> 
        getLimitcardList();
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    protocol.Training.TrainLimitCard getLimitcard(int index);
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    int getLimitcardCount();
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    java.util.List<? extends protocol.Training.TrainLimitCardOrBuilder> 
        getLimitcardOrBuilderList();
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    protocol.Training.TrainLimitCardOrBuilder getLimitcardOrBuilder(
        int index);

    /**
     * <code>int64 endtime = 42;</code>
     */
    long getEndtime();

    /**
     * <code>int32 npcEventId = 43;</code>
     */
    int getNpcEventId();

    /**
     * <code>int32 npcEventPoint = 44;</code>
     */
    int getNpcEventPoint();

    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */
    int getBloodMonsterCount();
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */
    boolean containsBloodMonster(
        int key);
    /**
     * Use {@link #getBloodMonsterMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
    getBloodMonster();
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */
    java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
    getBloodMonsterMap();
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrDefault(
        int key,
        protocol.TrainingDB.TrainBloodMonster defaultValue);
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrThrow(
        int key);

    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */
    int getMlTimesCount();
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */
    boolean containsMlTimes(
        java.lang.String key);
    /**
     * Use {@link #getMlTimesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getMlTimes();
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getMlTimesMap();
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    int getMlTimesOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    int getMlTimesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    java.util.List<protocol.TrainingDB.TrainCardChoice> 
        getTraincardList();
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    protocol.TrainingDB.TrainCardChoice getTraincard(int index);
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    int getTraincardCount();
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    java.util.List<? extends protocol.TrainingDB.TrainCardChoiceOrBuilder> 
        getTraincardOrBuilderList();
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    protocol.TrainingDB.TrainCardChoiceOrBuilder getTraincardOrBuilder(
        int index);

    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */
    int getBeyondPlayerDataCount();
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */
    boolean containsBeyondPlayerData(
        int key);
    /**
     * Use {@link #getBeyondPlayerDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBeyondPlayerData();
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getBeyondPlayerDataMap();
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    int getBeyondPlayerDataOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    int getBeyondPlayerDataOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code TrainDBMap}
   */
  public  static final class TrainDBMap extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainDBMap)
      TrainDBMapOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainDBMap.newBuilder() to construct.
    private TrainDBMap(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainDBMap() {
      mapId_ = 0;
      openTime_ = 0L;
      closeTime_ = 0L;
      currPos_ = 0;
      isBlessing_ = 0;
      starNum_ = 0;
      jifen_ = 0;
      jifenRefTime_ = 0L;
      endRankMC_ = 0;
      reward_ = java.util.Collections.emptyList();
      goNum_ = java.util.Collections.emptyList();
      shopBuy_ = java.util.Collections.emptyList();
      usebuff_ = java.util.Collections.emptyList();
      mlids_ = java.util.Collections.emptyList();
      buffIds_ = java.util.Collections.emptyList();
      startId_ = 0;
      curBoss_ = 0;
      preparPoint_ = 0;
      curpath_ = java.util.Collections.emptyList();
      luckbuffendtime_ = 0L;
      luckbufftime_ = 0;
      luckbuffid_ = java.util.Collections.emptyList();
      jifenPer_ = 0;
      limitCardId_ = 0;
      joinPower_ = 0L;
      endPower_ = 0L;
      reportCardLevel_ = 0;
      limitcard_ = java.util.Collections.emptyList();
      endtime_ = 0L;
      npcEventId_ = 0;
      npcEventPoint_ = 0;
      traincard_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainDBMap(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              mapId_ = input.readInt32();
              break;
            }
            case 16: {

              openTime_ = input.readInt64();
              break;
            }
            case 24: {

              closeTime_ = input.readInt64();
              break;
            }
            case 32: {

              currPos_ = input.readInt32();
              break;
            }
            case 40: {

              isBlessing_ = input.readInt32();
              break;
            }
            case 48: {

              starNum_ = input.readInt32();
              break;
            }
            case 56: {

              jifen_ = input.readInt32();
              break;
            }
            case 64: {

              jifenRefTime_ = input.readInt64();
              break;
            }
            case 72: {

              endRankMC_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                reward_ = new java.util.ArrayList<protocol.Common.Reward>();
                mutable_bitField0_ |= 0x00000200;
              }
              reward_.add(
                  input.readMessage(protocol.Common.Reward.parser(), extensionRegistry));
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                goNum_ = new java.util.ArrayList<protocol.Training.TrainKV>();
                mutable_bitField0_ |= 0x00000400;
              }
              goNum_.add(
                  input.readMessage(protocol.Training.TrainKV.parser(), extensionRegistry));
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                shopBuy_ = new java.util.ArrayList<protocol.Training.TrainKV>();
                mutable_bitField0_ |= 0x00000800;
              }
              shopBuy_.add(
                  input.readMessage(protocol.Training.TrainKV.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                usebuff_ = new java.util.ArrayList<protocol.Training.TrainKV>();
                mutable_bitField0_ |= 0x00001000;
              }
              usebuff_.add(
                  input.readMessage(protocol.Training.TrainKV.parser(), extensionRegistry));
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                mlids_ = new java.util.ArrayList<protocol.TrainingDB.TrainHelpPetData>();
                mutable_bitField0_ |= 0x00002000;
              }
              mlids_.add(
                  input.readMessage(protocol.TrainingDB.TrainHelpPetData.parser(), extensionRegistry));
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                buffIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              buffIds_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                buffIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                buffIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                starMap_ = com.google.protobuf.MapField.newMapField(
                    StarMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              starMap__ = input.readMessage(
                  StarMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              starMap_.getMutableMap().put(
                  starMap__.getKey(), starMap__.getValue());
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                itemMap_ = com.google.protobuf.MapField.newMapField(
                    ItemMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00010000;
              }
              com.google.protobuf.MapEntry<java.lang.String, protocol.Training.TrainItem>
              itemMap__ = input.readMessage(
                  ItemMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              itemMap_.getMutableMap().put(
                  itemMap__.getKey(), itemMap__.getValue());
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                prepareUse_ = com.google.protobuf.MapField.newMapField(
                    PrepareUseDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00020000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              prepareUse__ = input.readMessage(
                  PrepareUseDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              prepareUse_.getMutableMap().put(
                  prepareUse__.getKey(), prepareUse__.getValue());
              break;
            }
            case 152: {

              startId_ = input.readInt32();
              break;
            }
            case 160: {

              curBoss_ = input.readInt32();
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                shop_ = com.google.protobuf.MapField.newMapField(
                    ShopDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00100000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
              shop__ = input.readMessage(
                  ShopDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              shop_.getMutableMap().put(
                  shop__.getKey(), shop__.getValue());
              break;
            }
            case 178: {
              protocol.Training.TrainBuffBag.Builder subBuilder = null;
              if (buffBag_ != null) {
                subBuilder = buffBag_.toBuilder();
              }
              buffBag_ = input.readMessage(protocol.Training.TrainBuffBag.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(buffBag_);
                buffBag_ = subBuilder.buildPartial();
              }

              break;
            }
            case 186: {
              protocol.Training.TrainItemBag.Builder subBuilder = null;
              if (itemBag_ != null) {
                subBuilder = itemBag_.toBuilder();
              }
              itemBag_ = input.readMessage(protocol.Training.TrainItemBag.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(itemBag_);
                itemBag_ = subBuilder.buildPartial();
              }

              break;
            }
            case 192: {

              preparPoint_ = input.readInt32();
              break;
            }
            case 200: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                curpath_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              curpath_.add(input.readInt32());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                curpath_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                curpath_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 208: {

              luckbuffendtime_ = input.readInt64();
              break;
            }
            case 216: {

              luckbufftime_ = input.readInt32();
              break;
            }
            case 224: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                luckbuffid_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x08000000;
              }
              luckbuffid_.add(input.readInt32());
              break;
            }
            case 226: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000) && input.getBytesUntilLimit() > 0) {
                luckbuffid_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x08000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                luckbuffid_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 234: {
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                luckData_ = com.google.protobuf.MapField.newMapField(
                    LuckDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x10000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
              luckData__ = input.readMessage(
                  LuckDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              luckData_.getMutableMap().put(
                  luckData__.getKey(), luckData__.getValue());
              break;
            }
            case 242: {
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                cardMap_ = com.google.protobuf.MapField.newMapField(
                    CardMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x20000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.Training.TrainLuckCard>
              cardMap__ = input.readMessage(
                  CardMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              cardMap_.getMutableMap().put(
                  cardMap__.getKey(), cardMap__.getValue());
              break;
            }
            case 250: {
              if (!((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
                cardWeightChange_ = com.google.protobuf.MapField.newMapField(
                    CardWeightChangeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x40000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              cardWeightChange__ = input.readMessage(
                  CardWeightChangeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              cardWeightChange_.getMutableMap().put(
                  cardWeightChange__.getKey(), cardWeightChange__.getValue());
              break;
            }
            case 258: {
              if (!((mutable_bitField0_ & 0x80000000) == 0x80000000)) {
                buffFlag_ = com.google.protobuf.MapField.newMapField(
                    BuffFlagDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x80000000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
              buffFlag__ = input.readMessage(
                  BuffFlagDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              buffFlag_.getMutableMap().put(
                  buffFlag__.getKey(), buffFlag__.getValue());
              break;
            }
            case 264: {

              jifenPer_ = input.readInt32();
              break;
            }
            case 274: {
              protocol.TrainingDB.TraingEventData.Builder subBuilder = null;
              if (eventData_ != null) {
                subBuilder = eventData_.toBuilder();
              }
              eventData_ = input.readMessage(protocol.TrainingDB.TraingEventData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(eventData_);
                eventData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 280: {

              limitCardId_ = input.readInt32();
              break;
            }
            case 290: {
              if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                changePoint_ = com.google.protobuf.MapField.newMapField(
                    ChangePointDefaultEntryHolder.defaultEntry);
                mutable_bitField1_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              changePoint__ = input.readMessage(
                  ChangePointDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              changePoint_.getMutableMap().put(
                  changePoint__.getKey(), changePoint__.getValue());
              break;
            }
            case 296: {

              joinPower_ = input.readInt64();
              break;
            }
            case 304: {

              endPower_ = input.readInt64();
              break;
            }
            case 312: {

              reportCardLevel_ = input.readInt32();
              break;
            }
            case 330: {
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                limitcard_ = new java.util.ArrayList<protocol.Training.TrainLimitCard>();
                mutable_bitField1_ |= 0x00000080;
              }
              limitcard_.add(
                  input.readMessage(protocol.Training.TrainLimitCard.parser(), extensionRegistry));
              break;
            }
            case 336: {

              endtime_ = input.readInt64();
              break;
            }
            case 344: {

              npcEventId_ = input.readInt32();
              break;
            }
            case 352: {

              npcEventPoint_ = input.readInt32();
              break;
            }
            case 362: {
              if (!((mutable_bitField1_ & 0x00000800) == 0x00000800)) {
                bloodMonster_ = com.google.protobuf.MapField.newMapField(
                    BloodMonsterDefaultEntryHolder.defaultEntry);
                mutable_bitField1_ |= 0x00000800;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
              bloodMonster__ = input.readMessage(
                  BloodMonsterDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              bloodMonster_.getMutableMap().put(
                  bloodMonster__.getKey(), bloodMonster__.getValue());
              break;
            }
            case 370: {
              if (!((mutable_bitField1_ & 0x00001000) == 0x00001000)) {
                mlTimes_ = com.google.protobuf.MapField.newMapField(
                    MlTimesDefaultEntryHolder.defaultEntry);
                mutable_bitField1_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
              mlTimes__ = input.readMessage(
                  MlTimesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              mlTimes_.getMutableMap().put(
                  mlTimes__.getKey(), mlTimes__.getValue());
              break;
            }
            case 378: {
              if (!((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
                traincard_ = new java.util.ArrayList<protocol.TrainingDB.TrainCardChoice>();
                mutable_bitField1_ |= 0x00002000;
              }
              traincard_.add(
                  input.readMessage(protocol.TrainingDB.TrainCardChoice.parser(), extensionRegistry));
              break;
            }
            case 386: {
              if (!((mutable_bitField1_ & 0x00004000) == 0x00004000)) {
                beyondPlayerData_ = com.google.protobuf.MapField.newMapField(
                    BeyondPlayerDataDefaultEntryHolder.defaultEntry);
                mutable_bitField1_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              beyondPlayerData__ = input.readMessage(
                  BeyondPlayerDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              beyondPlayerData_.getMutableMap().put(
                  beyondPlayerData__.getKey(), beyondPlayerData__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          reward_ = java.util.Collections.unmodifiableList(reward_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          goNum_ = java.util.Collections.unmodifiableList(goNum_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          shopBuy_ = java.util.Collections.unmodifiableList(shopBuy_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          usebuff_ = java.util.Collections.unmodifiableList(usebuff_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          mlids_ = java.util.Collections.unmodifiableList(mlids_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          buffIds_ = java.util.Collections.unmodifiableList(buffIds_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          curpath_ = java.util.Collections.unmodifiableList(curpath_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          luckbuffid_ = java.util.Collections.unmodifiableList(luckbuffid_);
        }
        if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
          limitcard_ = java.util.Collections.unmodifiableList(limitcard_);
        }
        if (((mutable_bitField1_ & 0x00002000) == 0x00002000)) {
          traincard_ = java.util.Collections.unmodifiableList(traincard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainDBMap_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 16:
          return internalGetStarMap();
        case 17:
          return internalGetItemMap();
        case 18:
          return internalGetPrepareUse();
        case 21:
          return internalGetShop();
        case 29:
          return internalGetLuckData();
        case 30:
          return internalGetCardMap();
        case 31:
          return internalGetCardWeightChange();
        case 32:
          return internalGetBuffFlag();
        case 36:
          return internalGetChangePoint();
        case 45:
          return internalGetBloodMonster();
        case 46:
          return internalGetMlTimes();
        case 48:
          return internalGetBeyondPlayerData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainDBMap_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainDBMap.class, protocol.TrainingDB.TrainDBMap.Builder.class);
    }

    private int bitField0_;
    public static final int MAPID_FIELD_NUMBER = 1;
    private int mapId_;
    /**
     * <pre>
     * 训练场ID
     * </pre>
     *
     * <code>int32 mapId = 1;</code>
     */
    public int getMapId() {
      return mapId_;
    }

    public static final int OPENTIME_FIELD_NUMBER = 2;
    private long openTime_;
    /**
     * <code>int64 openTime = 2;</code>
     */
    public long getOpenTime() {
      return openTime_;
    }

    public static final int CLOSETIME_FIELD_NUMBER = 3;
    private long closeTime_;
    /**
     * <code>int64 closeTime = 3;</code>
     */
    public long getCloseTime() {
      return closeTime_;
    }

    public static final int CURRPOS_FIELD_NUMBER = 4;
    private int currPos_;
    /**
     * <code>int32 currPos = 4;</code>
     */
    public int getCurrPos() {
      return currPos_;
    }

    public static final int ISBLESSING_FIELD_NUMBER = 5;
    private int isBlessing_;
    /**
     * <code>int32 isBlessing = 5;</code>
     */
    public int getIsBlessing() {
      return isBlessing_;
    }

    public static final int STARNUM_FIELD_NUMBER = 6;
    private int starNum_;
    /**
     * <code>int32 starNum = 6;</code>
     */
    public int getStarNum() {
      return starNum_;
    }

    public static final int JIFEN_FIELD_NUMBER = 7;
    private int jifen_;
    /**
     * <code>int32 jifen = 7;</code>
     */
    public int getJifen() {
      return jifen_;
    }

    public static final int JIFENREFTIME_FIELD_NUMBER = 8;
    private long jifenRefTime_;
    /**
     * <code>int64 jifenRefTime = 8;</code>
     */
    public long getJifenRefTime() {
      return jifenRefTime_;
    }

    public static final int ENDRANKMC_FIELD_NUMBER = 9;
    private int endRankMC_;
    /**
     * <code>int32 endRankMC = 9;</code>
     */
    public int getEndRankMC() {
      return endRankMC_;
    }

    public static final int REWARD_FIELD_NUMBER = 10;
    private java.util.List<protocol.Common.Reward> reward_;
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    public java.util.List<protocol.Common.Reward> getRewardList() {
      return reward_;
    }
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    public java.util.List<? extends protocol.Common.RewardOrBuilder> 
        getRewardOrBuilderList() {
      return reward_;
    }
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    public int getRewardCount() {
      return reward_.size();
    }
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    public protocol.Common.Reward getReward(int index) {
      return reward_.get(index);
    }
    /**
     * <pre>
     * 累计道具
     * </pre>
     *
     * <code>repeated .Reward reward = 10;</code>
     */
    public protocol.Common.RewardOrBuilder getRewardOrBuilder(
        int index) {
      return reward_.get(index);
    }

    public static final int GONUM_FIELD_NUMBER = 11;
    private java.util.List<protocol.Training.TrainKV> goNum_;
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    public java.util.List<protocol.Training.TrainKV> getGoNumList() {
      return goNum_;
    }
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getGoNumOrBuilderList() {
      return goNum_;
    }
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    public int getGoNumCount() {
      return goNum_.size();
    }
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    public protocol.Training.TrainKV getGoNum(int index) {
      return goNum_.get(index);
    }
    /**
     * <pre>
     *每个点通过次数
     * </pre>
     *
     * <code>repeated .TrainKV goNum = 11;</code>
     */
    public protocol.Training.TrainKVOrBuilder getGoNumOrBuilder(
        int index) {
      return goNum_.get(index);
    }

    public static final int SHOPBUY_FIELD_NUMBER = 12;
    private java.util.List<protocol.Training.TrainKV> shopBuy_;
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    public java.util.List<protocol.Training.TrainKV> getShopBuyList() {
      return shopBuy_;
    }
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getShopBuyOrBuilderList() {
      return shopBuy_;
    }
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    public int getShopBuyCount() {
      return shopBuy_.size();
    }
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    public protocol.Training.TrainKV getShopBuy(int index) {
      return shopBuy_.get(index);
    }
    /**
     * <pre>
     *商店购买数据
     * </pre>
     *
     * <code>repeated .TrainKV shopBuy = 12;</code>
     */
    public protocol.Training.TrainKVOrBuilder getShopBuyOrBuilder(
        int index) {
      return shopBuy_.get(index);
    }

    public static final int USEBUFF_FIELD_NUMBER = 13;
    private java.util.List<protocol.Training.TrainKV> usebuff_;
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    public java.util.List<protocol.Training.TrainKV> getUsebuffList() {
      return usebuff_;
    }
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
        getUsebuffOrBuilderList() {
      return usebuff_;
    }
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    public int getUsebuffCount() {
      return usebuff_.size();
    }
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    public protocol.Training.TrainKV getUsebuff(int index) {
      return usebuff_.get(index);
    }
    /**
     * <pre>
     *获得的buff
     * </pre>
     *
     * <code>repeated .TrainKV usebuff = 13;</code>
     */
    public protocol.Training.TrainKVOrBuilder getUsebuffOrBuilder(
        int index) {
      return usebuff_.get(index);
    }

    public static final int MLIDS_FIELD_NUMBER = 14;
    private java.util.List<protocol.TrainingDB.TrainHelpPetData> mlids_;
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    public java.util.List<protocol.TrainingDB.TrainHelpPetData> getMlidsList() {
      return mlids_;
    }
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    public java.util.List<? extends protocol.TrainingDB.TrainHelpPetDataOrBuilder> 
        getMlidsOrBuilderList() {
      return mlids_;
    }
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    public int getMlidsCount() {
      return mlids_.size();
    }
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    public protocol.TrainingDB.TrainHelpPetData getMlids(int index) {
      return mlids_.get(index);
    }
    /**
     * <pre>
     *获得的魔灵
     * </pre>
     *
     * <code>repeated .TrainHelpPetData mlids = 14;</code>
     */
    public protocol.TrainingDB.TrainHelpPetDataOrBuilder getMlidsOrBuilder(
        int index) {
      return mlids_.get(index);
    }

    public static final int BUFFIDS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> buffIds_;
    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    public java.util.List<java.lang.Integer>
        getBuffIdsList() {
      return buffIds_;
    }
    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    public int getBuffIdsCount() {
      return buffIds_.size();
    }
    /**
     * <pre>
     * 当前点可选择BUFF数据
     * </pre>
     *
     * <code>repeated int32 buffIds = 15;</code>
     */
    public int getBuffIds(int index) {
      return buffIds_.get(index);
    }
    private int buffIdsMemoizedSerializedSize = -1;

    public static final int STARMAP_FIELD_NUMBER = 16;
    private static final class StarMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_StarMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> starMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetStarMap() {
      if (starMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StarMapDefaultEntryHolder.defaultEntry);
      }
      return starMap_;
    }

    public int getStarMapCount() {
      return internalGetStarMap().getMap().size();
    }
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    public boolean containsStarMap(
        int key) {
      
      return internalGetStarMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStarMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getStarMap() {
      return getStarMapMap();
    }
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getStarMapMap() {
      return internalGetStarMap().getMap();
    }
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    public int getStarMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetStarMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *节点星级 
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; starMap = 16;</code>
     */

    public int getStarMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetStarMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ITEMMAP_FIELD_NUMBER = 17;
    private static final class ItemMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, protocol.Training.TrainItem> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, protocol.Training.TrainItem>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_ItemMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Training.TrainItem.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, protocol.Training.TrainItem> itemMap_;
    private com.google.protobuf.MapField<java.lang.String, protocol.Training.TrainItem>
    internalGetItemMap() {
      if (itemMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ItemMapDefaultEntryHolder.defaultEntry);
      }
      return itemMap_;
    }

    public int getItemMapCount() {
      return internalGetItemMap().getMap().size();
    }
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    public boolean containsItemMap(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetItemMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, protocol.Training.TrainItem> getItemMap() {
      return getItemMapMap();
    }
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    public java.util.Map<java.lang.String, protocol.Training.TrainItem> getItemMapMap() {
      return internalGetItemMap().getMap();
    }
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    public protocol.Training.TrainItem getItemMapOrDefault(
        java.lang.String key,
        protocol.Training.TrainItem defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Training.TrainItem> map =
          internalGetItemMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *消耗道具map
     * </pre>
     *
     * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
     */

    public protocol.Training.TrainItem getItemMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, protocol.Training.TrainItem> map =
          internalGetItemMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PREPAREUSE_FIELD_NUMBER = 18;
    private static final class PrepareUseDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_PrepareUseEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> prepareUse_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetPrepareUse() {
      if (prepareUse_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PrepareUseDefaultEntryHolder.defaultEntry);
      }
      return prepareUse_;
    }

    public int getPrepareUseCount() {
      return internalGetPrepareUse().getMap().size();
    }
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    public boolean containsPrepareUse(
        int key) {
      
      return internalGetPrepareUse().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPrepareUseMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getPrepareUse() {
      return getPrepareUseMap();
    }
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getPrepareUseMap() {
      return internalGetPrepareUse().getMap();
    }
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    public int getPrepareUseOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPrepareUse().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *下场战斗准备使用的道具
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
     */

    public int getPrepareUseOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPrepareUse().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STARTID_FIELD_NUMBER = 19;
    private int startId_;
    /**
     * <pre>
     *玩家选择的起点
     * </pre>
     *
     * <code>int32 startId = 19;</code>
     */
    public int getStartId() {
      return startId_;
    }

    public static final int CURBOSS_FIELD_NUMBER = 20;
    private int curBoss_;
    /**
     * <pre>
     *当前已打败的boss
     * </pre>
     *
     * <code>int32 curBoss = 20;</code>
     */
    public int getCurBoss() {
      return curBoss_;
    }

    public static final int SHOP_FIELD_NUMBER = 21;
    private static final class ShopDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.TrainingDB.TrainShopGroup> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_ShopEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.TrainingDB.TrainShopGroup.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.TrainingDB.TrainShopGroup> shop_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
    internalGetShop() {
      if (shop_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ShopDefaultEntryHolder.defaultEntry);
      }
      return shop_;
    }

    public int getShopCount() {
      return internalGetShop().getMap().size();
    }
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    public boolean containsShop(
        int key) {
      
      return internalGetShop().getMap().containsKey(key);
    }
    /**
     * Use {@link #getShopMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> getShop() {
      return getShopMap();
    }
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> getShopMap() {
      return internalGetShop().getMap();
    }
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    public protocol.TrainingDB.TrainShopGroup getShopOrDefault(
        int key,
        protocol.TrainingDB.TrainShopGroup defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> map =
          internalGetShop().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *商店数据
     * </pre>
     *
     * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
     */

    public protocol.TrainingDB.TrainShopGroup getShopOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> map =
          internalGetShop().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BUFFBAG_FIELD_NUMBER = 22;
    private protocol.Training.TrainBuffBag buffBag_;
    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    public boolean hasBuffBag() {
      return buffBag_ != null;
    }
    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    public protocol.Training.TrainBuffBag getBuffBag() {
      return buffBag_ == null ? protocol.Training.TrainBuffBag.getDefaultInstance() : buffBag_;
    }
    /**
     * <pre>
     *buff背包
     * </pre>
     *
     * <code>.TrainBuffBag buffBag = 22;</code>
     */
    public protocol.Training.TrainBuffBagOrBuilder getBuffBagOrBuilder() {
      return getBuffBag();
    }

    public static final int ITEMBAG_FIELD_NUMBER = 23;
    private protocol.Training.TrainItemBag itemBag_;
    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    public boolean hasItemBag() {
      return itemBag_ != null;
    }
    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    public protocol.Training.TrainItemBag getItemBag() {
      return itemBag_ == null ? protocol.Training.TrainItemBag.getDefaultInstance() : itemBag_;
    }
    /**
     * <pre>
     *道具背包
     * </pre>
     *
     * <code>.TrainItemBag itemBag = 23;</code>
     */
    public protocol.Training.TrainItemBagOrBuilder getItemBagOrBuilder() {
      return getItemBag();
    }

    public static final int PREPARPOINT_FIELD_NUMBER = 24;
    private int preparPoint_;
    /**
     * <pre>
     *buff背包对应的点
     * </pre>
     *
     * <code>int32 preparPoint = 24;</code>
     */
    public int getPreparPoint() {
      return preparPoint_;
    }

    public static final int CURPATH_FIELD_NUMBER = 25;
    private java.util.List<java.lang.Integer> curpath_;
    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    public java.util.List<java.lang.Integer>
        getCurpathList() {
      return curpath_;
    }
    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    public int getCurpathCount() {
      return curpath_.size();
    }
    /**
     * <code>repeated int32 curpath = 25;</code>
     */
    public int getCurpath(int index) {
      return curpath_.get(index);
    }
    private int curpathMemoizedSerializedSize = -1;

    public static final int LUCKBUFFENDTIME_FIELD_NUMBER = 26;
    private long luckbuffendtime_;
    /**
     * <pre>
     *祝福卡抽奖结束时间
     * </pre>
     *
     * <code>int64 luckbuffendtime = 26;</code>
     */
    public long getLuckbuffendtime() {
      return luckbuffendtime_;
    }

    public static final int LUCKBUFFTIME_FIELD_NUMBER = 27;
    private int luckbufftime_;
    /**
     * <pre>
     *祝福卡抽奖次数
     * </pre>
     *
     * <code>int32 luckbufftime = 27;</code>
     */
    public int getLuckbufftime() {
      return luckbufftime_;
    }

    public static final int LUCKBUFFID_FIELD_NUMBER = 28;
    private java.util.List<java.lang.Integer> luckbuffid_;
    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    public java.util.List<java.lang.Integer>
        getLuckbuffidList() {
      return luckbuffid_;
    }
    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    public int getLuckbuffidCount() {
      return luckbuffid_.size();
    }
    /**
     * <pre>
     *抽取到的祝福卡
     * </pre>
     *
     * <code>repeated int32 luckbuffid = 28;</code>
     */
    public int getLuckbuffid(int index) {
      return luckbuffid_.get(index);
    }
    private int luckbuffidMemoizedSerializedSize = -1;

    public static final int LUCKDATA_FIELD_NUMBER = 29;
    private static final class LuckDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.TrainingDB.TrainLuckData> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.TrainingDB.TrainLuckData>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_LuckDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.TrainingDB.TrainLuckData.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.TrainingDB.TrainLuckData> luckData_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    internalGetLuckData() {
      if (luckData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LuckDataDefaultEntryHolder.defaultEntry);
      }
      return luckData_;
    }

    public int getLuckDataCount() {
      return internalGetLuckData().getMap().size();
    }
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    public boolean containsLuckData(
        int key) {
      
      return internalGetLuckData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLuckDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getLuckData() {
      return getLuckDataMap();
    }
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getLuckDataMap() {
      return internalGetLuckData().getMap();
    }
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    public protocol.TrainingDB.TrainLuckData getLuckDataOrDefault(
        int key,
        protocol.TrainingDB.TrainLuckData defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
          internalGetLuckData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *抽到的祝福卡
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
     */

    public protocol.TrainingDB.TrainLuckData getLuckDataOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
          internalGetLuckData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CARDMAP_FIELD_NUMBER = 30;
    private static final class CardMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.Training.TrainLuckCard> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.Training.TrainLuckCard>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_CardMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Training.TrainLuckCard.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.Training.TrainLuckCard> cardMap_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainLuckCard>
    internalGetCardMap() {
      if (cardMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CardMapDefaultEntryHolder.defaultEntry);
      }
      return cardMap_;
    }

    public int getCardMapCount() {
      return internalGetCardMap().getMap().size();
    }
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    public boolean containsCardMap(
        int key) {
      
      return internalGetCardMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCardMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> getCardMap() {
      return getCardMapMap();
    }
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> getCardMapMap() {
      return internalGetCardMap().getMap();
    }
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    public protocol.Training.TrainLuckCard getCardMapOrDefault(
        int key,
        protocol.Training.TrainLuckCard defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> map =
          internalGetCardMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *祝福卡商店
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
     */

    public protocol.Training.TrainLuckCard getCardMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> map =
          internalGetCardMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CARDWEIGHTCHANGE_FIELD_NUMBER = 31;
    private static final class CardWeightChangeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_CardWeightChangeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> cardWeightChange_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCardWeightChange() {
      if (cardWeightChange_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CardWeightChangeDefaultEntryHolder.defaultEntry);
      }
      return cardWeightChange_;
    }

    public int getCardWeightChangeCount() {
      return internalGetCardWeightChange().getMap().size();
    }
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    public boolean containsCardWeightChange(
        int key) {
      
      return internalGetCardWeightChange().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCardWeightChangeMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardWeightChange() {
      return getCardWeightChangeMap();
    }
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardWeightChangeMap() {
      return internalGetCardWeightChange().getMap();
    }
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    public int getCardWeightChangeOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardWeightChange().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *祝福卡权重变化
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
     */

    public int getCardWeightChangeOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardWeightChange().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BUFFFLAG_FIELD_NUMBER = 32;
    private static final class BuffFlagDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.TrainingDB.TrainLuckData> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.TrainingDB.TrainLuckData>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_BuffFlagEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.TrainingDB.TrainLuckData.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.TrainingDB.TrainLuckData> buffFlag_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
    internalGetBuffFlag() {
      if (buffFlag_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BuffFlagDefaultEntryHolder.defaultEntry);
      }
      return buffFlag_;
    }

    public int getBuffFlagCount() {
      return internalGetBuffFlag().getMap().size();
    }
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    public boolean containsBuffFlag(
        int key) {
      
      return internalGetBuffFlag().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBuffFlagMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getBuffFlag() {
      return getBuffFlagMap();
    }
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getBuffFlagMap() {
      return internalGetBuffFlag().getMap();
    }
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    public protocol.TrainingDB.TrainLuckData getBuffFlagOrDefault(
        int key,
        protocol.TrainingDB.TrainLuckData defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
          internalGetBuffFlag().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *最高级卡生效
     * </pre>
     *
     * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
     */

    public protocol.TrainingDB.TrainLuckData getBuffFlagOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
          internalGetBuffFlag().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int JIFENPER_FIELD_NUMBER = 33;
    private int jifenPer_;
    /**
     * <pre>
     *积分百分比增加
     * </pre>
     *
     * <code>int32 jifenPer = 33;</code>
     */
    public int getJifenPer() {
      return jifenPer_;
    }

    public static final int EVENTDATA_FIELD_NUMBER = 34;
    private protocol.TrainingDB.TraingEventData eventData_;
    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    public boolean hasEventData() {
      return eventData_ != null;
    }
    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    public protocol.TrainingDB.TraingEventData getEventData() {
      return eventData_ == null ? protocol.TrainingDB.TraingEventData.getDefaultInstance() : eventData_;
    }
    /**
     * <code>.TraingEventData eventData = 34;</code>
     */
    public protocol.TrainingDB.TraingEventDataOrBuilder getEventDataOrBuilder() {
      return getEventData();
    }

    public static final int LIMITCARDID_FIELD_NUMBER = 35;
    private int limitCardId_;
    /**
     * <pre>
     *当前限时祝福卡ID标记
     * </pre>
     *
     * <code>int32 limitCardId = 35;</code>
     */
    public int getLimitCardId() {
      return limitCardId_;
    }

    public static final int CHANGEPOINT_FIELD_NUMBER = 36;
    private static final class ChangePointDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_ChangePointEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> changePoint_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetChangePoint() {
      if (changePoint_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ChangePointDefaultEntryHolder.defaultEntry);
      }
      return changePoint_;
    }

    public int getChangePointCount() {
      return internalGetChangePoint().getMap().size();
    }
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    public boolean containsChangePoint(
        int key) {
      
      return internalGetChangePoint().getMap().containsKey(key);
    }
    /**
     * Use {@link #getChangePointMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getChangePoint() {
      return getChangePointMap();
    }
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getChangePointMap() {
      return internalGetChangePoint().getMap();
    }
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    public int getChangePointOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetChangePoint().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *被替换的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
     */

    public int getChangePointOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetChangePoint().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int JOINPOWER_FIELD_NUMBER = 37;
    private long joinPower_;
    /**
     * <code>int64 joinPower = 37;</code>
     */
    public long getJoinPower() {
      return joinPower_;
    }

    public static final int ENDPOWER_FIELD_NUMBER = 38;
    private long endPower_;
    /**
     * <code>int64 endPower = 38;</code>
     */
    public long getEndPower() {
      return endPower_;
    }

    public static final int REPORTCARDLEVEL_FIELD_NUMBER = 39;
    private int reportCardLevel_;
    /**
     * <code>int32 reportCardLevel = 39;</code>
     */
    public int getReportCardLevel() {
      return reportCardLevel_;
    }

    public static final int LIMITCARD_FIELD_NUMBER = 41;
    private java.util.List<protocol.Training.TrainLimitCard> limitcard_;
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    public java.util.List<protocol.Training.TrainLimitCard> getLimitcardList() {
      return limitcard_;
    }
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    public java.util.List<? extends protocol.Training.TrainLimitCardOrBuilder> 
        getLimitcardOrBuilderList() {
      return limitcard_;
    }
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    public int getLimitcardCount() {
      return limitcard_.size();
    }
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    public protocol.Training.TrainLimitCard getLimitcard(int index) {
      return limitcard_.get(index);
    }
    /**
     * <code>repeated .TrainLimitCard limitcard = 41;</code>
     */
    public protocol.Training.TrainLimitCardOrBuilder getLimitcardOrBuilder(
        int index) {
      return limitcard_.get(index);
    }

    public static final int ENDTIME_FIELD_NUMBER = 42;
    private long endtime_;
    /**
     * <code>int64 endtime = 42;</code>
     */
    public long getEndtime() {
      return endtime_;
    }

    public static final int NPCEVENTID_FIELD_NUMBER = 43;
    private int npcEventId_;
    /**
     * <code>int32 npcEventId = 43;</code>
     */
    public int getNpcEventId() {
      return npcEventId_;
    }

    public static final int NPCEVENTPOINT_FIELD_NUMBER = 44;
    private int npcEventPoint_;
    /**
     * <code>int32 npcEventPoint = 44;</code>
     */
    public int getNpcEventPoint() {
      return npcEventPoint_;
    }

    public static final int BLOODMONSTER_FIELD_NUMBER = 45;
    private static final class BloodMonsterDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_BloodMonsterEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.TrainingDB.TrainBloodMonster.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> bloodMonster_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
    internalGetBloodMonster() {
      if (bloodMonster_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BloodMonsterDefaultEntryHolder.defaultEntry);
      }
      return bloodMonster_;
    }

    public int getBloodMonsterCount() {
      return internalGetBloodMonster().getMap().size();
    }
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    public boolean containsBloodMonster(
        int key) {
      
      return internalGetBloodMonster().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBloodMonsterMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> getBloodMonster() {
      return getBloodMonsterMap();
    }
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> getBloodMonsterMap() {
      return internalGetBloodMonster().getMap();
    }
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    public protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrDefault(
        int key,
        protocol.TrainingDB.TrainBloodMonster defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> map =
          internalGetBloodMonster().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
     */

    public protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> map =
          internalGetBloodMonster().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MLTIMES_FIELD_NUMBER = 46;
    private static final class MlTimesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_MlTimesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> mlTimes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetMlTimes() {
      if (mlTimes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MlTimesDefaultEntryHolder.defaultEntry);
      }
      return mlTimes_;
    }

    public int getMlTimesCount() {
      return internalGetMlTimes().getMap().size();
    }
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    public boolean containsMlTimes(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMlTimes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMlTimesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getMlTimes() {
      return getMlTimesMap();
    }
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    public java.util.Map<java.lang.String, java.lang.Integer> getMlTimesMap() {
      return internalGetMlTimes().getMap();
    }
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    public int getMlTimesOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetMlTimes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *助战魔灵使用次数
     * </pre>
     *
     * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
     */

    public int getMlTimesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetMlTimes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TRAINCARD_FIELD_NUMBER = 47;
    private java.util.List<protocol.TrainingDB.TrainCardChoice> traincard_;
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    public java.util.List<protocol.TrainingDB.TrainCardChoice> getTraincardList() {
      return traincard_;
    }
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    public java.util.List<? extends protocol.TrainingDB.TrainCardChoiceOrBuilder> 
        getTraincardOrBuilderList() {
      return traincard_;
    }
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    public int getTraincardCount() {
      return traincard_.size();
    }
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    public protocol.TrainingDB.TrainCardChoice getTraincard(int index) {
      return traincard_.get(index);
    }
    /**
     * <pre>
     *道具触发的祝福卡数据
     * </pre>
     *
     * <code>repeated .TrainCardChoice traincard = 47;</code>
     */
    public protocol.TrainingDB.TrainCardChoiceOrBuilder getTraincardOrBuilder(
        int index) {
      return traincard_.get(index);
    }

    public static final int BEYONDPLAYERDATA_FIELD_NUMBER = 48;
    private static final class BeyondPlayerDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBMap_BeyondPlayerDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> beyondPlayerData_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetBeyondPlayerData() {
      if (beyondPlayerData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BeyondPlayerDataDefaultEntryHolder.defaultEntry);
      }
      return beyondPlayerData_;
    }

    public int getBeyondPlayerDataCount() {
      return internalGetBeyondPlayerData().getMap().size();
    }
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    public boolean containsBeyondPlayerData(
        int key) {
      
      return internalGetBeyondPlayerData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBeyondPlayerDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getBeyondPlayerData() {
      return getBeyondPlayerDataMap();
    }
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getBeyondPlayerDataMap() {
      return internalGetBeyondPlayerData().getMap();
    }
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    public int getBeyondPlayerDataOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBeyondPlayerData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *成绩单超越玩家数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
     */

    public int getBeyondPlayerDataOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetBeyondPlayerData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (mapId_ != 0) {
        output.writeInt32(1, mapId_);
      }
      if (openTime_ != 0L) {
        output.writeInt64(2, openTime_);
      }
      if (closeTime_ != 0L) {
        output.writeInt64(3, closeTime_);
      }
      if (currPos_ != 0) {
        output.writeInt32(4, currPos_);
      }
      if (isBlessing_ != 0) {
        output.writeInt32(5, isBlessing_);
      }
      if (starNum_ != 0) {
        output.writeInt32(6, starNum_);
      }
      if (jifen_ != 0) {
        output.writeInt32(7, jifen_);
      }
      if (jifenRefTime_ != 0L) {
        output.writeInt64(8, jifenRefTime_);
      }
      if (endRankMC_ != 0) {
        output.writeInt32(9, endRankMC_);
      }
      for (int i = 0; i < reward_.size(); i++) {
        output.writeMessage(10, reward_.get(i));
      }
      for (int i = 0; i < goNum_.size(); i++) {
        output.writeMessage(11, goNum_.get(i));
      }
      for (int i = 0; i < shopBuy_.size(); i++) {
        output.writeMessage(12, shopBuy_.get(i));
      }
      for (int i = 0; i < usebuff_.size(); i++) {
        output.writeMessage(13, usebuff_.get(i));
      }
      for (int i = 0; i < mlids_.size(); i++) {
        output.writeMessage(14, mlids_.get(i));
      }
      if (getBuffIdsList().size() > 0) {
        output.writeUInt32NoTag(122);
        output.writeUInt32NoTag(buffIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < buffIds_.size(); i++) {
        output.writeInt32NoTag(buffIds_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetStarMap(),
          StarMapDefaultEntryHolder.defaultEntry,
          16);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetItemMap(),
          ItemMapDefaultEntryHolder.defaultEntry,
          17);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPrepareUse(),
          PrepareUseDefaultEntryHolder.defaultEntry,
          18);
      if (startId_ != 0) {
        output.writeInt32(19, startId_);
      }
      if (curBoss_ != 0) {
        output.writeInt32(20, curBoss_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetShop(),
          ShopDefaultEntryHolder.defaultEntry,
          21);
      if (buffBag_ != null) {
        output.writeMessage(22, getBuffBag());
      }
      if (itemBag_ != null) {
        output.writeMessage(23, getItemBag());
      }
      if (preparPoint_ != 0) {
        output.writeInt32(24, preparPoint_);
      }
      if (getCurpathList().size() > 0) {
        output.writeUInt32NoTag(202);
        output.writeUInt32NoTag(curpathMemoizedSerializedSize);
      }
      for (int i = 0; i < curpath_.size(); i++) {
        output.writeInt32NoTag(curpath_.get(i));
      }
      if (luckbuffendtime_ != 0L) {
        output.writeInt64(26, luckbuffendtime_);
      }
      if (luckbufftime_ != 0) {
        output.writeInt32(27, luckbufftime_);
      }
      if (getLuckbuffidList().size() > 0) {
        output.writeUInt32NoTag(226);
        output.writeUInt32NoTag(luckbuffidMemoizedSerializedSize);
      }
      for (int i = 0; i < luckbuffid_.size(); i++) {
        output.writeInt32NoTag(luckbuffid_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLuckData(),
          LuckDataDefaultEntryHolder.defaultEntry,
          29);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCardMap(),
          CardMapDefaultEntryHolder.defaultEntry,
          30);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCardWeightChange(),
          CardWeightChangeDefaultEntryHolder.defaultEntry,
          31);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBuffFlag(),
          BuffFlagDefaultEntryHolder.defaultEntry,
          32);
      if (jifenPer_ != 0) {
        output.writeInt32(33, jifenPer_);
      }
      if (eventData_ != null) {
        output.writeMessage(34, getEventData());
      }
      if (limitCardId_ != 0) {
        output.writeInt32(35, limitCardId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetChangePoint(),
          ChangePointDefaultEntryHolder.defaultEntry,
          36);
      if (joinPower_ != 0L) {
        output.writeInt64(37, joinPower_);
      }
      if (endPower_ != 0L) {
        output.writeInt64(38, endPower_);
      }
      if (reportCardLevel_ != 0) {
        output.writeInt32(39, reportCardLevel_);
      }
      for (int i = 0; i < limitcard_.size(); i++) {
        output.writeMessage(41, limitcard_.get(i));
      }
      if (endtime_ != 0L) {
        output.writeInt64(42, endtime_);
      }
      if (npcEventId_ != 0) {
        output.writeInt32(43, npcEventId_);
      }
      if (npcEventPoint_ != 0) {
        output.writeInt32(44, npcEventPoint_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBloodMonster(),
          BloodMonsterDefaultEntryHolder.defaultEntry,
          45);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMlTimes(),
          MlTimesDefaultEntryHolder.defaultEntry,
          46);
      for (int i = 0; i < traincard_.size(); i++) {
        output.writeMessage(47, traincard_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBeyondPlayerData(),
          BeyondPlayerDataDefaultEntryHolder.defaultEntry,
          48);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (mapId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mapId_);
      }
      if (openTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, openTime_);
      }
      if (closeTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, closeTime_);
      }
      if (currPos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, currPos_);
      }
      if (isBlessing_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isBlessing_);
      }
      if (starNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, starNum_);
      }
      if (jifen_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jifen_);
      }
      if (jifenRefTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, jifenRefTime_);
      }
      if (endRankMC_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, endRankMC_);
      }
      for (int i = 0; i < reward_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, reward_.get(i));
      }
      for (int i = 0; i < goNum_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, goNum_.get(i));
      }
      for (int i = 0; i < shopBuy_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, shopBuy_.get(i));
      }
      for (int i = 0; i < usebuff_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, usebuff_.get(i));
      }
      for (int i = 0; i < mlids_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, mlids_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < buffIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(buffIds_.get(i));
        }
        size += dataSize;
        if (!getBuffIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        buffIdsMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetStarMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        starMap__ = StarMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, starMap__);
      }
      for (java.util.Map.Entry<java.lang.String, protocol.Training.TrainItem> entry
           : internalGetItemMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, protocol.Training.TrainItem>
        itemMap__ = ItemMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(17, itemMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetPrepareUse().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        prepareUse__ = PrepareUseDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, prepareUse__);
      }
      if (startId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, startId_);
      }
      if (curBoss_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, curBoss_);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> entry
           : internalGetShop().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
        shop__ = ShopDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(21, shop__);
      }
      if (buffBag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, getBuffBag());
      }
      if (itemBag_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, getItemBag());
      }
      if (preparPoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, preparPoint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < curpath_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(curpath_.get(i));
        }
        size += dataSize;
        if (!getCurpathList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        curpathMemoizedSerializedSize = dataSize;
      }
      if (luckbuffendtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, luckbuffendtime_);
      }
      if (luckbufftime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, luckbufftime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < luckbuffid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(luckbuffid_.get(i));
        }
        size += dataSize;
        if (!getLuckbuffidList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        luckbuffidMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.TrainingDB.TrainLuckData> entry
           : internalGetLuckData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
        luckData__ = LuckDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(29, luckData__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.Training.TrainLuckCard> entry
           : internalGetCardMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.Training.TrainLuckCard>
        cardMap__ = CardMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(30, cardMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetCardWeightChange().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        cardWeightChange__ = CardWeightChangeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(31, cardWeightChange__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.TrainingDB.TrainLuckData> entry
           : internalGetBuffFlag().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
        buffFlag__ = BuffFlagDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(32, buffFlag__);
      }
      if (jifenPer_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, jifenPer_);
      }
      if (eventData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, getEventData());
      }
      if (limitCardId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, limitCardId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetChangePoint().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        changePoint__ = ChangePointDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(36, changePoint__);
      }
      if (joinPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(37, joinPower_);
      }
      if (endPower_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(38, endPower_);
      }
      if (reportCardLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(39, reportCardLevel_);
      }
      for (int i = 0; i < limitcard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(41, limitcard_.get(i));
      }
      if (endtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(42, endtime_);
      }
      if (npcEventId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(43, npcEventId_);
      }
      if (npcEventPoint_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(44, npcEventPoint_);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> entry
           : internalGetBloodMonster().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
        bloodMonster__ = BloodMonsterDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(45, bloodMonster__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetMlTimes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        mlTimes__ = MlTimesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(46, mlTimes__);
      }
      for (int i = 0; i < traincard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(47, traincard_.get(i));
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetBeyondPlayerData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        beyondPlayerData__ = BeyondPlayerDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(48, beyondPlayerData__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainDBMap)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainDBMap other = (protocol.TrainingDB.TrainDBMap) obj;

      boolean result = true;
      result = result && (getMapId()
          == other.getMapId());
      result = result && (getOpenTime()
          == other.getOpenTime());
      result = result && (getCloseTime()
          == other.getCloseTime());
      result = result && (getCurrPos()
          == other.getCurrPos());
      result = result && (getIsBlessing()
          == other.getIsBlessing());
      result = result && (getStarNum()
          == other.getStarNum());
      result = result && (getJifen()
          == other.getJifen());
      result = result && (getJifenRefTime()
          == other.getJifenRefTime());
      result = result && (getEndRankMC()
          == other.getEndRankMC());
      result = result && getRewardList()
          .equals(other.getRewardList());
      result = result && getGoNumList()
          .equals(other.getGoNumList());
      result = result && getShopBuyList()
          .equals(other.getShopBuyList());
      result = result && getUsebuffList()
          .equals(other.getUsebuffList());
      result = result && getMlidsList()
          .equals(other.getMlidsList());
      result = result && getBuffIdsList()
          .equals(other.getBuffIdsList());
      result = result && internalGetStarMap().equals(
          other.internalGetStarMap());
      result = result && internalGetItemMap().equals(
          other.internalGetItemMap());
      result = result && internalGetPrepareUse().equals(
          other.internalGetPrepareUse());
      result = result && (getStartId()
          == other.getStartId());
      result = result && (getCurBoss()
          == other.getCurBoss());
      result = result && internalGetShop().equals(
          other.internalGetShop());
      result = result && (hasBuffBag() == other.hasBuffBag());
      if (hasBuffBag()) {
        result = result && getBuffBag()
            .equals(other.getBuffBag());
      }
      result = result && (hasItemBag() == other.hasItemBag());
      if (hasItemBag()) {
        result = result && getItemBag()
            .equals(other.getItemBag());
      }
      result = result && (getPreparPoint()
          == other.getPreparPoint());
      result = result && getCurpathList()
          .equals(other.getCurpathList());
      result = result && (getLuckbuffendtime()
          == other.getLuckbuffendtime());
      result = result && (getLuckbufftime()
          == other.getLuckbufftime());
      result = result && getLuckbuffidList()
          .equals(other.getLuckbuffidList());
      result = result && internalGetLuckData().equals(
          other.internalGetLuckData());
      result = result && internalGetCardMap().equals(
          other.internalGetCardMap());
      result = result && internalGetCardWeightChange().equals(
          other.internalGetCardWeightChange());
      result = result && internalGetBuffFlag().equals(
          other.internalGetBuffFlag());
      result = result && (getJifenPer()
          == other.getJifenPer());
      result = result && (hasEventData() == other.hasEventData());
      if (hasEventData()) {
        result = result && getEventData()
            .equals(other.getEventData());
      }
      result = result && (getLimitCardId()
          == other.getLimitCardId());
      result = result && internalGetChangePoint().equals(
          other.internalGetChangePoint());
      result = result && (getJoinPower()
          == other.getJoinPower());
      result = result && (getEndPower()
          == other.getEndPower());
      result = result && (getReportCardLevel()
          == other.getReportCardLevel());
      result = result && getLimitcardList()
          .equals(other.getLimitcardList());
      result = result && (getEndtime()
          == other.getEndtime());
      result = result && (getNpcEventId()
          == other.getNpcEventId());
      result = result && (getNpcEventPoint()
          == other.getNpcEventPoint());
      result = result && internalGetBloodMonster().equals(
          other.internalGetBloodMonster());
      result = result && internalGetMlTimes().equals(
          other.internalGetMlTimes());
      result = result && getTraincardList()
          .equals(other.getTraincardList());
      result = result && internalGetBeyondPlayerData().equals(
          other.internalGetBeyondPlayerData());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MAPID_FIELD_NUMBER;
      hash = (53 * hash) + getMapId();
      hash = (37 * hash) + OPENTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOpenTime());
      hash = (37 * hash) + CLOSETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCloseTime());
      hash = (37 * hash) + CURRPOS_FIELD_NUMBER;
      hash = (53 * hash) + getCurrPos();
      hash = (37 * hash) + ISBLESSING_FIELD_NUMBER;
      hash = (53 * hash) + getIsBlessing();
      hash = (37 * hash) + STARNUM_FIELD_NUMBER;
      hash = (53 * hash) + getStarNum();
      hash = (37 * hash) + JIFEN_FIELD_NUMBER;
      hash = (53 * hash) + getJifen();
      hash = (37 * hash) + JIFENREFTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getJifenRefTime());
      hash = (37 * hash) + ENDRANKMC_FIELD_NUMBER;
      hash = (53 * hash) + getEndRankMC();
      if (getRewardCount() > 0) {
        hash = (37 * hash) + REWARD_FIELD_NUMBER;
        hash = (53 * hash) + getRewardList().hashCode();
      }
      if (getGoNumCount() > 0) {
        hash = (37 * hash) + GONUM_FIELD_NUMBER;
        hash = (53 * hash) + getGoNumList().hashCode();
      }
      if (getShopBuyCount() > 0) {
        hash = (37 * hash) + SHOPBUY_FIELD_NUMBER;
        hash = (53 * hash) + getShopBuyList().hashCode();
      }
      if (getUsebuffCount() > 0) {
        hash = (37 * hash) + USEBUFF_FIELD_NUMBER;
        hash = (53 * hash) + getUsebuffList().hashCode();
      }
      if (getMlidsCount() > 0) {
        hash = (37 * hash) + MLIDS_FIELD_NUMBER;
        hash = (53 * hash) + getMlidsList().hashCode();
      }
      if (getBuffIdsCount() > 0) {
        hash = (37 * hash) + BUFFIDS_FIELD_NUMBER;
        hash = (53 * hash) + getBuffIdsList().hashCode();
      }
      if (!internalGetStarMap().getMap().isEmpty()) {
        hash = (37 * hash) + STARMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStarMap().hashCode();
      }
      if (!internalGetItemMap().getMap().isEmpty()) {
        hash = (37 * hash) + ITEMMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItemMap().hashCode();
      }
      if (!internalGetPrepareUse().getMap().isEmpty()) {
        hash = (37 * hash) + PREPAREUSE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPrepareUse().hashCode();
      }
      hash = (37 * hash) + STARTID_FIELD_NUMBER;
      hash = (53 * hash) + getStartId();
      hash = (37 * hash) + CURBOSS_FIELD_NUMBER;
      hash = (53 * hash) + getCurBoss();
      if (!internalGetShop().getMap().isEmpty()) {
        hash = (37 * hash) + SHOP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetShop().hashCode();
      }
      if (hasBuffBag()) {
        hash = (37 * hash) + BUFFBAG_FIELD_NUMBER;
        hash = (53 * hash) + getBuffBag().hashCode();
      }
      if (hasItemBag()) {
        hash = (37 * hash) + ITEMBAG_FIELD_NUMBER;
        hash = (53 * hash) + getItemBag().hashCode();
      }
      hash = (37 * hash) + PREPARPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getPreparPoint();
      if (getCurpathCount() > 0) {
        hash = (37 * hash) + CURPATH_FIELD_NUMBER;
        hash = (53 * hash) + getCurpathList().hashCode();
      }
      hash = (37 * hash) + LUCKBUFFENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLuckbuffendtime());
      hash = (37 * hash) + LUCKBUFFTIME_FIELD_NUMBER;
      hash = (53 * hash) + getLuckbufftime();
      if (getLuckbuffidCount() > 0) {
        hash = (37 * hash) + LUCKBUFFID_FIELD_NUMBER;
        hash = (53 * hash) + getLuckbuffidList().hashCode();
      }
      if (!internalGetLuckData().getMap().isEmpty()) {
        hash = (37 * hash) + LUCKDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLuckData().hashCode();
      }
      if (!internalGetCardMap().getMap().isEmpty()) {
        hash = (37 * hash) + CARDMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCardMap().hashCode();
      }
      if (!internalGetCardWeightChange().getMap().isEmpty()) {
        hash = (37 * hash) + CARDWEIGHTCHANGE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCardWeightChange().hashCode();
      }
      if (!internalGetBuffFlag().getMap().isEmpty()) {
        hash = (37 * hash) + BUFFFLAG_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBuffFlag().hashCode();
      }
      hash = (37 * hash) + JIFENPER_FIELD_NUMBER;
      hash = (53 * hash) + getJifenPer();
      if (hasEventData()) {
        hash = (37 * hash) + EVENTDATA_FIELD_NUMBER;
        hash = (53 * hash) + getEventData().hashCode();
      }
      hash = (37 * hash) + LIMITCARDID_FIELD_NUMBER;
      hash = (53 * hash) + getLimitCardId();
      if (!internalGetChangePoint().getMap().isEmpty()) {
        hash = (37 * hash) + CHANGEPOINT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetChangePoint().hashCode();
      }
      hash = (37 * hash) + JOINPOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getJoinPower());
      hash = (37 * hash) + ENDPOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndPower());
      hash = (37 * hash) + REPORTCARDLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getReportCardLevel();
      if (getLimitcardCount() > 0) {
        hash = (37 * hash) + LIMITCARD_FIELD_NUMBER;
        hash = (53 * hash) + getLimitcardList().hashCode();
      }
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndtime());
      hash = (37 * hash) + NPCEVENTID_FIELD_NUMBER;
      hash = (53 * hash) + getNpcEventId();
      hash = (37 * hash) + NPCEVENTPOINT_FIELD_NUMBER;
      hash = (53 * hash) + getNpcEventPoint();
      if (!internalGetBloodMonster().getMap().isEmpty()) {
        hash = (37 * hash) + BLOODMONSTER_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBloodMonster().hashCode();
      }
      if (!internalGetMlTimes().getMap().isEmpty()) {
        hash = (37 * hash) + MLTIMES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMlTimes().hashCode();
      }
      if (getTraincardCount() > 0) {
        hash = (37 * hash) + TRAINCARD_FIELD_NUMBER;
        hash = (53 * hash) + getTraincardList().hashCode();
      }
      if (!internalGetBeyondPlayerData().getMap().isEmpty()) {
        hash = (37 * hash) + BEYONDPLAYERDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBeyondPlayerData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainDBMap parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBMap parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBMap parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBMap parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainDBMap prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainDBMap}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainDBMap)
        protocol.TrainingDB.TrainDBMapOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainDBMap_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetStarMap();
          case 17:
            return internalGetItemMap();
          case 18:
            return internalGetPrepareUse();
          case 21:
            return internalGetShop();
          case 29:
            return internalGetLuckData();
          case 30:
            return internalGetCardMap();
          case 31:
            return internalGetCardWeightChange();
          case 32:
            return internalGetBuffFlag();
          case 36:
            return internalGetChangePoint();
          case 45:
            return internalGetBloodMonster();
          case 46:
            return internalGetMlTimes();
          case 48:
            return internalGetBeyondPlayerData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetMutableStarMap();
          case 17:
            return internalGetMutableItemMap();
          case 18:
            return internalGetMutablePrepareUse();
          case 21:
            return internalGetMutableShop();
          case 29:
            return internalGetMutableLuckData();
          case 30:
            return internalGetMutableCardMap();
          case 31:
            return internalGetMutableCardWeightChange();
          case 32:
            return internalGetMutableBuffFlag();
          case 36:
            return internalGetMutableChangePoint();
          case 45:
            return internalGetMutableBloodMonster();
          case 46:
            return internalGetMutableMlTimes();
          case 48:
            return internalGetMutableBeyondPlayerData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainDBMap_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainDBMap.class, protocol.TrainingDB.TrainDBMap.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainDBMap.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRewardFieldBuilder();
          getGoNumFieldBuilder();
          getShopBuyFieldBuilder();
          getUsebuffFieldBuilder();
          getMlidsFieldBuilder();
          getLimitcardFieldBuilder();
          getTraincardFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        mapId_ = 0;

        openTime_ = 0L;

        closeTime_ = 0L;

        currPos_ = 0;

        isBlessing_ = 0;

        starNum_ = 0;

        jifen_ = 0;

        jifenRefTime_ = 0L;

        endRankMC_ = 0;

        if (rewardBuilder_ == null) {
          reward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          rewardBuilder_.clear();
        }
        if (goNumBuilder_ == null) {
          goNum_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          goNumBuilder_.clear();
        }
        if (shopBuyBuilder_ == null) {
          shopBuy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          shopBuyBuilder_.clear();
        }
        if (usebuffBuilder_ == null) {
          usebuff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          usebuffBuilder_.clear();
        }
        if (mlidsBuilder_ == null) {
          mlids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          mlidsBuilder_.clear();
        }
        buffIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        internalGetMutableStarMap().clear();
        internalGetMutableItemMap().clear();
        internalGetMutablePrepareUse().clear();
        startId_ = 0;

        curBoss_ = 0;

        internalGetMutableShop().clear();
        if (buffBagBuilder_ == null) {
          buffBag_ = null;
        } else {
          buffBag_ = null;
          buffBagBuilder_ = null;
        }
        if (itemBagBuilder_ == null) {
          itemBag_ = null;
        } else {
          itemBag_ = null;
          itemBagBuilder_ = null;
        }
        preparPoint_ = 0;

        curpath_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        luckbuffendtime_ = 0L;

        luckbufftime_ = 0;

        luckbuffid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        internalGetMutableLuckData().clear();
        internalGetMutableCardMap().clear();
        internalGetMutableCardWeightChange().clear();
        internalGetMutableBuffFlag().clear();
        jifenPer_ = 0;

        if (eventDataBuilder_ == null) {
          eventData_ = null;
        } else {
          eventData_ = null;
          eventDataBuilder_ = null;
        }
        limitCardId_ = 0;

        internalGetMutableChangePoint().clear();
        joinPower_ = 0L;

        endPower_ = 0L;

        reportCardLevel_ = 0;

        if (limitcardBuilder_ == null) {
          limitcard_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
        } else {
          limitcardBuilder_.clear();
        }
        endtime_ = 0L;

        npcEventId_ = 0;

        npcEventPoint_ = 0;

        internalGetMutableBloodMonster().clear();
        internalGetMutableMlTimes().clear();
        if (traincardBuilder_ == null) {
          traincard_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
        } else {
          traincardBuilder_.clear();
        }
        internalGetMutableBeyondPlayerData().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainDBMap_descriptor;
      }

      public protocol.TrainingDB.TrainDBMap getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainDBMap.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainDBMap build() {
        protocol.TrainingDB.TrainDBMap result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainDBMap buildPartial() {
        protocol.TrainingDB.TrainDBMap result = new protocol.TrainingDB.TrainDBMap(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        result.mapId_ = mapId_;
        result.openTime_ = openTime_;
        result.closeTime_ = closeTime_;
        result.currPos_ = currPos_;
        result.isBlessing_ = isBlessing_;
        result.starNum_ = starNum_;
        result.jifen_ = jifen_;
        result.jifenRefTime_ = jifenRefTime_;
        result.endRankMC_ = endRankMC_;
        if (rewardBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            reward_ = java.util.Collections.unmodifiableList(reward_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.reward_ = reward_;
        } else {
          result.reward_ = rewardBuilder_.build();
        }
        if (goNumBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            goNum_ = java.util.Collections.unmodifiableList(goNum_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.goNum_ = goNum_;
        } else {
          result.goNum_ = goNumBuilder_.build();
        }
        if (shopBuyBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            shopBuy_ = java.util.Collections.unmodifiableList(shopBuy_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.shopBuy_ = shopBuy_;
        } else {
          result.shopBuy_ = shopBuyBuilder_.build();
        }
        if (usebuffBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            usebuff_ = java.util.Collections.unmodifiableList(usebuff_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.usebuff_ = usebuff_;
        } else {
          result.usebuff_ = usebuffBuilder_.build();
        }
        if (mlidsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            mlids_ = java.util.Collections.unmodifiableList(mlids_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.mlids_ = mlids_;
        } else {
          result.mlids_ = mlidsBuilder_.build();
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          buffIds_ = java.util.Collections.unmodifiableList(buffIds_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.buffIds_ = buffIds_;
        result.starMap_ = internalGetStarMap();
        result.starMap_.makeImmutable();
        result.itemMap_ = internalGetItemMap();
        result.itemMap_.makeImmutable();
        result.prepareUse_ = internalGetPrepareUse();
        result.prepareUse_.makeImmutable();
        result.startId_ = startId_;
        result.curBoss_ = curBoss_;
        result.shop_ = internalGetShop();
        result.shop_.makeImmutable();
        if (buffBagBuilder_ == null) {
          result.buffBag_ = buffBag_;
        } else {
          result.buffBag_ = buffBagBuilder_.build();
        }
        if (itemBagBuilder_ == null) {
          result.itemBag_ = itemBag_;
        } else {
          result.itemBag_ = itemBagBuilder_.build();
        }
        result.preparPoint_ = preparPoint_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          curpath_ = java.util.Collections.unmodifiableList(curpath_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.curpath_ = curpath_;
        result.luckbuffendtime_ = luckbuffendtime_;
        result.luckbufftime_ = luckbufftime_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          luckbuffid_ = java.util.Collections.unmodifiableList(luckbuffid_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.luckbuffid_ = luckbuffid_;
        result.luckData_ = internalGetLuckData();
        result.luckData_.makeImmutable();
        result.cardMap_ = internalGetCardMap();
        result.cardMap_.makeImmutable();
        result.cardWeightChange_ = internalGetCardWeightChange();
        result.cardWeightChange_.makeImmutable();
        result.buffFlag_ = internalGetBuffFlag();
        result.buffFlag_.makeImmutable();
        result.jifenPer_ = jifenPer_;
        if (eventDataBuilder_ == null) {
          result.eventData_ = eventData_;
        } else {
          result.eventData_ = eventDataBuilder_.build();
        }
        result.limitCardId_ = limitCardId_;
        result.changePoint_ = internalGetChangePoint();
        result.changePoint_.makeImmutable();
        result.joinPower_ = joinPower_;
        result.endPower_ = endPower_;
        result.reportCardLevel_ = reportCardLevel_;
        if (limitcardBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080)) {
            limitcard_ = java.util.Collections.unmodifiableList(limitcard_);
            bitField1_ = (bitField1_ & ~0x00000080);
          }
          result.limitcard_ = limitcard_;
        } else {
          result.limitcard_ = limitcardBuilder_.build();
        }
        result.endtime_ = endtime_;
        result.npcEventId_ = npcEventId_;
        result.npcEventPoint_ = npcEventPoint_;
        result.bloodMonster_ = internalGetBloodMonster();
        result.bloodMonster_.makeImmutable();
        result.mlTimes_ = internalGetMlTimes();
        result.mlTimes_.makeImmutable();
        if (traincardBuilder_ == null) {
          if (((bitField1_ & 0x00002000) == 0x00002000)) {
            traincard_ = java.util.Collections.unmodifiableList(traincard_);
            bitField1_ = (bitField1_ & ~0x00002000);
          }
          result.traincard_ = traincard_;
        } else {
          result.traincard_ = traincardBuilder_.build();
        }
        result.beyondPlayerData_ = internalGetBeyondPlayerData();
        result.beyondPlayerData_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainDBMap) {
          return mergeFrom((protocol.TrainingDB.TrainDBMap)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainDBMap other) {
        if (other == protocol.TrainingDB.TrainDBMap.getDefaultInstance()) return this;
        if (other.getMapId() != 0) {
          setMapId(other.getMapId());
        }
        if (other.getOpenTime() != 0L) {
          setOpenTime(other.getOpenTime());
        }
        if (other.getCloseTime() != 0L) {
          setCloseTime(other.getCloseTime());
        }
        if (other.getCurrPos() != 0) {
          setCurrPos(other.getCurrPos());
        }
        if (other.getIsBlessing() != 0) {
          setIsBlessing(other.getIsBlessing());
        }
        if (other.getStarNum() != 0) {
          setStarNum(other.getStarNum());
        }
        if (other.getJifen() != 0) {
          setJifen(other.getJifen());
        }
        if (other.getJifenRefTime() != 0L) {
          setJifenRefTime(other.getJifenRefTime());
        }
        if (other.getEndRankMC() != 0) {
          setEndRankMC(other.getEndRankMC());
        }
        if (rewardBuilder_ == null) {
          if (!other.reward_.isEmpty()) {
            if (reward_.isEmpty()) {
              reward_ = other.reward_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureRewardIsMutable();
              reward_.addAll(other.reward_);
            }
            onChanged();
          }
        } else {
          if (!other.reward_.isEmpty()) {
            if (rewardBuilder_.isEmpty()) {
              rewardBuilder_.dispose();
              rewardBuilder_ = null;
              reward_ = other.reward_;
              bitField0_ = (bitField0_ & ~0x00000200);
              rewardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRewardFieldBuilder() : null;
            } else {
              rewardBuilder_.addAllMessages(other.reward_);
            }
          }
        }
        if (goNumBuilder_ == null) {
          if (!other.goNum_.isEmpty()) {
            if (goNum_.isEmpty()) {
              goNum_ = other.goNum_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureGoNumIsMutable();
              goNum_.addAll(other.goNum_);
            }
            onChanged();
          }
        } else {
          if (!other.goNum_.isEmpty()) {
            if (goNumBuilder_.isEmpty()) {
              goNumBuilder_.dispose();
              goNumBuilder_ = null;
              goNum_ = other.goNum_;
              bitField0_ = (bitField0_ & ~0x00000400);
              goNumBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGoNumFieldBuilder() : null;
            } else {
              goNumBuilder_.addAllMessages(other.goNum_);
            }
          }
        }
        if (shopBuyBuilder_ == null) {
          if (!other.shopBuy_.isEmpty()) {
            if (shopBuy_.isEmpty()) {
              shopBuy_ = other.shopBuy_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureShopBuyIsMutable();
              shopBuy_.addAll(other.shopBuy_);
            }
            onChanged();
          }
        } else {
          if (!other.shopBuy_.isEmpty()) {
            if (shopBuyBuilder_.isEmpty()) {
              shopBuyBuilder_.dispose();
              shopBuyBuilder_ = null;
              shopBuy_ = other.shopBuy_;
              bitField0_ = (bitField0_ & ~0x00000800);
              shopBuyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShopBuyFieldBuilder() : null;
            } else {
              shopBuyBuilder_.addAllMessages(other.shopBuy_);
            }
          }
        }
        if (usebuffBuilder_ == null) {
          if (!other.usebuff_.isEmpty()) {
            if (usebuff_.isEmpty()) {
              usebuff_ = other.usebuff_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureUsebuffIsMutable();
              usebuff_.addAll(other.usebuff_);
            }
            onChanged();
          }
        } else {
          if (!other.usebuff_.isEmpty()) {
            if (usebuffBuilder_.isEmpty()) {
              usebuffBuilder_.dispose();
              usebuffBuilder_ = null;
              usebuff_ = other.usebuff_;
              bitField0_ = (bitField0_ & ~0x00001000);
              usebuffBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUsebuffFieldBuilder() : null;
            } else {
              usebuffBuilder_.addAllMessages(other.usebuff_);
            }
          }
        }
        if (mlidsBuilder_ == null) {
          if (!other.mlids_.isEmpty()) {
            if (mlids_.isEmpty()) {
              mlids_ = other.mlids_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureMlidsIsMutable();
              mlids_.addAll(other.mlids_);
            }
            onChanged();
          }
        } else {
          if (!other.mlids_.isEmpty()) {
            if (mlidsBuilder_.isEmpty()) {
              mlidsBuilder_.dispose();
              mlidsBuilder_ = null;
              mlids_ = other.mlids_;
              bitField0_ = (bitField0_ & ~0x00002000);
              mlidsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMlidsFieldBuilder() : null;
            } else {
              mlidsBuilder_.addAllMessages(other.mlids_);
            }
          }
        }
        if (!other.buffIds_.isEmpty()) {
          if (buffIds_.isEmpty()) {
            buffIds_ = other.buffIds_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureBuffIdsIsMutable();
            buffIds_.addAll(other.buffIds_);
          }
          onChanged();
        }
        internalGetMutableStarMap().mergeFrom(
            other.internalGetStarMap());
        internalGetMutableItemMap().mergeFrom(
            other.internalGetItemMap());
        internalGetMutablePrepareUse().mergeFrom(
            other.internalGetPrepareUse());
        if (other.getStartId() != 0) {
          setStartId(other.getStartId());
        }
        if (other.getCurBoss() != 0) {
          setCurBoss(other.getCurBoss());
        }
        internalGetMutableShop().mergeFrom(
            other.internalGetShop());
        if (other.hasBuffBag()) {
          mergeBuffBag(other.getBuffBag());
        }
        if (other.hasItemBag()) {
          mergeItemBag(other.getItemBag());
        }
        if (other.getPreparPoint() != 0) {
          setPreparPoint(other.getPreparPoint());
        }
        if (!other.curpath_.isEmpty()) {
          if (curpath_.isEmpty()) {
            curpath_ = other.curpath_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureCurpathIsMutable();
            curpath_.addAll(other.curpath_);
          }
          onChanged();
        }
        if (other.getLuckbuffendtime() != 0L) {
          setLuckbuffendtime(other.getLuckbuffendtime());
        }
        if (other.getLuckbufftime() != 0) {
          setLuckbufftime(other.getLuckbufftime());
        }
        if (!other.luckbuffid_.isEmpty()) {
          if (luckbuffid_.isEmpty()) {
            luckbuffid_ = other.luckbuffid_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureLuckbuffidIsMutable();
            luckbuffid_.addAll(other.luckbuffid_);
          }
          onChanged();
        }
        internalGetMutableLuckData().mergeFrom(
            other.internalGetLuckData());
        internalGetMutableCardMap().mergeFrom(
            other.internalGetCardMap());
        internalGetMutableCardWeightChange().mergeFrom(
            other.internalGetCardWeightChange());
        internalGetMutableBuffFlag().mergeFrom(
            other.internalGetBuffFlag());
        if (other.getJifenPer() != 0) {
          setJifenPer(other.getJifenPer());
        }
        if (other.hasEventData()) {
          mergeEventData(other.getEventData());
        }
        if (other.getLimitCardId() != 0) {
          setLimitCardId(other.getLimitCardId());
        }
        internalGetMutableChangePoint().mergeFrom(
            other.internalGetChangePoint());
        if (other.getJoinPower() != 0L) {
          setJoinPower(other.getJoinPower());
        }
        if (other.getEndPower() != 0L) {
          setEndPower(other.getEndPower());
        }
        if (other.getReportCardLevel() != 0) {
          setReportCardLevel(other.getReportCardLevel());
        }
        if (limitcardBuilder_ == null) {
          if (!other.limitcard_.isEmpty()) {
            if (limitcard_.isEmpty()) {
              limitcard_ = other.limitcard_;
              bitField1_ = (bitField1_ & ~0x00000080);
            } else {
              ensureLimitcardIsMutable();
              limitcard_.addAll(other.limitcard_);
            }
            onChanged();
          }
        } else {
          if (!other.limitcard_.isEmpty()) {
            if (limitcardBuilder_.isEmpty()) {
              limitcardBuilder_.dispose();
              limitcardBuilder_ = null;
              limitcard_ = other.limitcard_;
              bitField1_ = (bitField1_ & ~0x00000080);
              limitcardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLimitcardFieldBuilder() : null;
            } else {
              limitcardBuilder_.addAllMessages(other.limitcard_);
            }
          }
        }
        if (other.getEndtime() != 0L) {
          setEndtime(other.getEndtime());
        }
        if (other.getNpcEventId() != 0) {
          setNpcEventId(other.getNpcEventId());
        }
        if (other.getNpcEventPoint() != 0) {
          setNpcEventPoint(other.getNpcEventPoint());
        }
        internalGetMutableBloodMonster().mergeFrom(
            other.internalGetBloodMonster());
        internalGetMutableMlTimes().mergeFrom(
            other.internalGetMlTimes());
        if (traincardBuilder_ == null) {
          if (!other.traincard_.isEmpty()) {
            if (traincard_.isEmpty()) {
              traincard_ = other.traincard_;
              bitField1_ = (bitField1_ & ~0x00002000);
            } else {
              ensureTraincardIsMutable();
              traincard_.addAll(other.traincard_);
            }
            onChanged();
          }
        } else {
          if (!other.traincard_.isEmpty()) {
            if (traincardBuilder_.isEmpty()) {
              traincardBuilder_.dispose();
              traincardBuilder_ = null;
              traincard_ = other.traincard_;
              bitField1_ = (bitField1_ & ~0x00002000);
              traincardBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTraincardFieldBuilder() : null;
            } else {
              traincardBuilder_.addAllMessages(other.traincard_);
            }
          }
        }
        internalGetMutableBeyondPlayerData().mergeFrom(
            other.internalGetBeyondPlayerData());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainDBMap parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainDBMap) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int mapId_ ;
      /**
       * <pre>
       * 训练场ID
       * </pre>
       *
       * <code>int32 mapId = 1;</code>
       */
      public int getMapId() {
        return mapId_;
      }
      /**
       * <pre>
       * 训练场ID
       * </pre>
       *
       * <code>int32 mapId = 1;</code>
       */
      public Builder setMapId(int value) {
        
        mapId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 训练场ID
       * </pre>
       *
       * <code>int32 mapId = 1;</code>
       */
      public Builder clearMapId() {
        
        mapId_ = 0;
        onChanged();
        return this;
      }

      private long openTime_ ;
      /**
       * <code>int64 openTime = 2;</code>
       */
      public long getOpenTime() {
        return openTime_;
      }
      /**
       * <code>int64 openTime = 2;</code>
       */
      public Builder setOpenTime(long value) {
        
        openTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 openTime = 2;</code>
       */
      public Builder clearOpenTime() {
        
        openTime_ = 0L;
        onChanged();
        return this;
      }

      private long closeTime_ ;
      /**
       * <code>int64 closeTime = 3;</code>
       */
      public long getCloseTime() {
        return closeTime_;
      }
      /**
       * <code>int64 closeTime = 3;</code>
       */
      public Builder setCloseTime(long value) {
        
        closeTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 closeTime = 3;</code>
       */
      public Builder clearCloseTime() {
        
        closeTime_ = 0L;
        onChanged();
        return this;
      }

      private int currPos_ ;
      /**
       * <code>int32 currPos = 4;</code>
       */
      public int getCurrPos() {
        return currPos_;
      }
      /**
       * <code>int32 currPos = 4;</code>
       */
      public Builder setCurrPos(int value) {
        
        currPos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 currPos = 4;</code>
       */
      public Builder clearCurrPos() {
        
        currPos_ = 0;
        onChanged();
        return this;
      }

      private int isBlessing_ ;
      /**
       * <code>int32 isBlessing = 5;</code>
       */
      public int getIsBlessing() {
        return isBlessing_;
      }
      /**
       * <code>int32 isBlessing = 5;</code>
       */
      public Builder setIsBlessing(int value) {
        
        isBlessing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isBlessing = 5;</code>
       */
      public Builder clearIsBlessing() {
        
        isBlessing_ = 0;
        onChanged();
        return this;
      }

      private int starNum_ ;
      /**
       * <code>int32 starNum = 6;</code>
       */
      public int getStarNum() {
        return starNum_;
      }
      /**
       * <code>int32 starNum = 6;</code>
       */
      public Builder setStarNum(int value) {
        
        starNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 starNum = 6;</code>
       */
      public Builder clearStarNum() {
        
        starNum_ = 0;
        onChanged();
        return this;
      }

      private int jifen_ ;
      /**
       * <code>int32 jifen = 7;</code>
       */
      public int getJifen() {
        return jifen_;
      }
      /**
       * <code>int32 jifen = 7;</code>
       */
      public Builder setJifen(int value) {
        
        jifen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 jifen = 7;</code>
       */
      public Builder clearJifen() {
        
        jifen_ = 0;
        onChanged();
        return this;
      }

      private long jifenRefTime_ ;
      /**
       * <code>int64 jifenRefTime = 8;</code>
       */
      public long getJifenRefTime() {
        return jifenRefTime_;
      }
      /**
       * <code>int64 jifenRefTime = 8;</code>
       */
      public Builder setJifenRefTime(long value) {
        
        jifenRefTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 jifenRefTime = 8;</code>
       */
      public Builder clearJifenRefTime() {
        
        jifenRefTime_ = 0L;
        onChanged();
        return this;
      }

      private int endRankMC_ ;
      /**
       * <code>int32 endRankMC = 9;</code>
       */
      public int getEndRankMC() {
        return endRankMC_;
      }
      /**
       * <code>int32 endRankMC = 9;</code>
       */
      public Builder setEndRankMC(int value) {
        
        endRankMC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 endRankMC = 9;</code>
       */
      public Builder clearEndRankMC() {
        
        endRankMC_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol.Common.Reward> reward_ =
        java.util.Collections.emptyList();
      private void ensureRewardIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          reward_ = new java.util.ArrayList<protocol.Common.Reward>(reward_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Common.Reward, protocol.Common.Reward.Builder, protocol.Common.RewardOrBuilder> rewardBuilder_;

      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public java.util.List<protocol.Common.Reward> getRewardList() {
        if (rewardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reward_);
        } else {
          return rewardBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public int getRewardCount() {
        if (rewardBuilder_ == null) {
          return reward_.size();
        } else {
          return rewardBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public protocol.Common.Reward getReward(int index) {
        if (rewardBuilder_ == null) {
          return reward_.get(index);
        } else {
          return rewardBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder setReward(
          int index, protocol.Common.Reward value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.set(index, value);
          onChanged();
        } else {
          rewardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder setReward(
          int index, protocol.Common.Reward.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder addReward(protocol.Common.Reward value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.add(value);
          onChanged();
        } else {
          rewardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder addReward(
          int index, protocol.Common.Reward value) {
        if (rewardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardIsMutable();
          reward_.add(index, value);
          onChanged();
        } else {
          rewardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder addReward(
          protocol.Common.Reward.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.add(builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder addReward(
          int index, protocol.Common.Reward.Builder builderForValue) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder addAllReward(
          java.lang.Iterable<? extends protocol.Common.Reward> values) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reward_);
          onChanged();
        } else {
          rewardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder clearReward() {
        if (rewardBuilder_ == null) {
          reward_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          rewardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public Builder removeReward(int index) {
        if (rewardBuilder_ == null) {
          ensureRewardIsMutable();
          reward_.remove(index);
          onChanged();
        } else {
          rewardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public protocol.Common.Reward.Builder getRewardBuilder(
          int index) {
        return getRewardFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public protocol.Common.RewardOrBuilder getRewardOrBuilder(
          int index) {
        if (rewardBuilder_ == null) {
          return reward_.get(index);  } else {
          return rewardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public java.util.List<? extends protocol.Common.RewardOrBuilder> 
           getRewardOrBuilderList() {
        if (rewardBuilder_ != null) {
          return rewardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reward_);
        }
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public protocol.Common.Reward.Builder addRewardBuilder() {
        return getRewardFieldBuilder().addBuilder(
            protocol.Common.Reward.getDefaultInstance());
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public protocol.Common.Reward.Builder addRewardBuilder(
          int index) {
        return getRewardFieldBuilder().addBuilder(
            index, protocol.Common.Reward.getDefaultInstance());
      }
      /**
       * <pre>
       * 累计道具
       * </pre>
       *
       * <code>repeated .Reward reward = 10;</code>
       */
      public java.util.List<protocol.Common.Reward.Builder> 
           getRewardBuilderList() {
        return getRewardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Common.Reward, protocol.Common.Reward.Builder, protocol.Common.RewardOrBuilder> 
          getRewardFieldBuilder() {
        if (rewardBuilder_ == null) {
          rewardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Common.Reward, protocol.Common.Reward.Builder, protocol.Common.RewardOrBuilder>(
                  reward_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          reward_ = null;
        }
        return rewardBuilder_;
      }

      private java.util.List<protocol.Training.TrainKV> goNum_ =
        java.util.Collections.emptyList();
      private void ensureGoNumIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          goNum_ = new java.util.ArrayList<protocol.Training.TrainKV>(goNum_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> goNumBuilder_;

      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public java.util.List<protocol.Training.TrainKV> getGoNumList() {
        if (goNumBuilder_ == null) {
          return java.util.Collections.unmodifiableList(goNum_);
        } else {
          return goNumBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public int getGoNumCount() {
        if (goNumBuilder_ == null) {
          return goNum_.size();
        } else {
          return goNumBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public protocol.Training.TrainKV getGoNum(int index) {
        if (goNumBuilder_ == null) {
          return goNum_.get(index);
        } else {
          return goNumBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder setGoNum(
          int index, protocol.Training.TrainKV value) {
        if (goNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGoNumIsMutable();
          goNum_.set(index, value);
          onChanged();
        } else {
          goNumBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder setGoNum(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (goNumBuilder_ == null) {
          ensureGoNumIsMutable();
          goNum_.set(index, builderForValue.build());
          onChanged();
        } else {
          goNumBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder addGoNum(protocol.Training.TrainKV value) {
        if (goNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGoNumIsMutable();
          goNum_.add(value);
          onChanged();
        } else {
          goNumBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder addGoNum(
          int index, protocol.Training.TrainKV value) {
        if (goNumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGoNumIsMutable();
          goNum_.add(index, value);
          onChanged();
        } else {
          goNumBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder addGoNum(
          protocol.Training.TrainKV.Builder builderForValue) {
        if (goNumBuilder_ == null) {
          ensureGoNumIsMutable();
          goNum_.add(builderForValue.build());
          onChanged();
        } else {
          goNumBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder addGoNum(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (goNumBuilder_ == null) {
          ensureGoNumIsMutable();
          goNum_.add(index, builderForValue.build());
          onChanged();
        } else {
          goNumBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder addAllGoNum(
          java.lang.Iterable<? extends protocol.Training.TrainKV> values) {
        if (goNumBuilder_ == null) {
          ensureGoNumIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, goNum_);
          onChanged();
        } else {
          goNumBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder clearGoNum() {
        if (goNumBuilder_ == null) {
          goNum_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          goNumBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public Builder removeGoNum(int index) {
        if (goNumBuilder_ == null) {
          ensureGoNumIsMutable();
          goNum_.remove(index);
          onChanged();
        } else {
          goNumBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public protocol.Training.TrainKV.Builder getGoNumBuilder(
          int index) {
        return getGoNumFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public protocol.Training.TrainKVOrBuilder getGoNumOrBuilder(
          int index) {
        if (goNumBuilder_ == null) {
          return goNum_.get(index);  } else {
          return goNumBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
           getGoNumOrBuilderList() {
        if (goNumBuilder_ != null) {
          return goNumBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(goNum_);
        }
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public protocol.Training.TrainKV.Builder addGoNumBuilder() {
        return getGoNumFieldBuilder().addBuilder(
            protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public protocol.Training.TrainKV.Builder addGoNumBuilder(
          int index) {
        return getGoNumFieldBuilder().addBuilder(
            index, protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *每个点通过次数
       * </pre>
       *
       * <code>repeated .TrainKV goNum = 11;</code>
       */
      public java.util.List<protocol.Training.TrainKV.Builder> 
           getGoNumBuilderList() {
        return getGoNumFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> 
          getGoNumFieldBuilder() {
        if (goNumBuilder_ == null) {
          goNumBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder>(
                  goNum_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          goNum_ = null;
        }
        return goNumBuilder_;
      }

      private java.util.List<protocol.Training.TrainKV> shopBuy_ =
        java.util.Collections.emptyList();
      private void ensureShopBuyIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          shopBuy_ = new java.util.ArrayList<protocol.Training.TrainKV>(shopBuy_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> shopBuyBuilder_;

      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public java.util.List<protocol.Training.TrainKV> getShopBuyList() {
        if (shopBuyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shopBuy_);
        } else {
          return shopBuyBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public int getShopBuyCount() {
        if (shopBuyBuilder_ == null) {
          return shopBuy_.size();
        } else {
          return shopBuyBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public protocol.Training.TrainKV getShopBuy(int index) {
        if (shopBuyBuilder_ == null) {
          return shopBuy_.get(index);
        } else {
          return shopBuyBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder setShopBuy(
          int index, protocol.Training.TrainKV value) {
        if (shopBuyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopBuyIsMutable();
          shopBuy_.set(index, value);
          onChanged();
        } else {
          shopBuyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder setShopBuy(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (shopBuyBuilder_ == null) {
          ensureShopBuyIsMutable();
          shopBuy_.set(index, builderForValue.build());
          onChanged();
        } else {
          shopBuyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder addShopBuy(protocol.Training.TrainKV value) {
        if (shopBuyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopBuyIsMutable();
          shopBuy_.add(value);
          onChanged();
        } else {
          shopBuyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder addShopBuy(
          int index, protocol.Training.TrainKV value) {
        if (shopBuyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShopBuyIsMutable();
          shopBuy_.add(index, value);
          onChanged();
        } else {
          shopBuyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder addShopBuy(
          protocol.Training.TrainKV.Builder builderForValue) {
        if (shopBuyBuilder_ == null) {
          ensureShopBuyIsMutable();
          shopBuy_.add(builderForValue.build());
          onChanged();
        } else {
          shopBuyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder addShopBuy(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (shopBuyBuilder_ == null) {
          ensureShopBuyIsMutable();
          shopBuy_.add(index, builderForValue.build());
          onChanged();
        } else {
          shopBuyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder addAllShopBuy(
          java.lang.Iterable<? extends protocol.Training.TrainKV> values) {
        if (shopBuyBuilder_ == null) {
          ensureShopBuyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shopBuy_);
          onChanged();
        } else {
          shopBuyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder clearShopBuy() {
        if (shopBuyBuilder_ == null) {
          shopBuy_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          shopBuyBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public Builder removeShopBuy(int index) {
        if (shopBuyBuilder_ == null) {
          ensureShopBuyIsMutable();
          shopBuy_.remove(index);
          onChanged();
        } else {
          shopBuyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public protocol.Training.TrainKV.Builder getShopBuyBuilder(
          int index) {
        return getShopBuyFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public protocol.Training.TrainKVOrBuilder getShopBuyOrBuilder(
          int index) {
        if (shopBuyBuilder_ == null) {
          return shopBuy_.get(index);  } else {
          return shopBuyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
           getShopBuyOrBuilderList() {
        if (shopBuyBuilder_ != null) {
          return shopBuyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shopBuy_);
        }
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public protocol.Training.TrainKV.Builder addShopBuyBuilder() {
        return getShopBuyFieldBuilder().addBuilder(
            protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public protocol.Training.TrainKV.Builder addShopBuyBuilder(
          int index) {
        return getShopBuyFieldBuilder().addBuilder(
            index, protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *商店购买数据
       * </pre>
       *
       * <code>repeated .TrainKV shopBuy = 12;</code>
       */
      public java.util.List<protocol.Training.TrainKV.Builder> 
           getShopBuyBuilderList() {
        return getShopBuyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> 
          getShopBuyFieldBuilder() {
        if (shopBuyBuilder_ == null) {
          shopBuyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder>(
                  shopBuy_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          shopBuy_ = null;
        }
        return shopBuyBuilder_;
      }

      private java.util.List<protocol.Training.TrainKV> usebuff_ =
        java.util.Collections.emptyList();
      private void ensureUsebuffIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          usebuff_ = new java.util.ArrayList<protocol.Training.TrainKV>(usebuff_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> usebuffBuilder_;

      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public java.util.List<protocol.Training.TrainKV> getUsebuffList() {
        if (usebuffBuilder_ == null) {
          return java.util.Collections.unmodifiableList(usebuff_);
        } else {
          return usebuffBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public int getUsebuffCount() {
        if (usebuffBuilder_ == null) {
          return usebuff_.size();
        } else {
          return usebuffBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public protocol.Training.TrainKV getUsebuff(int index) {
        if (usebuffBuilder_ == null) {
          return usebuff_.get(index);
        } else {
          return usebuffBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder setUsebuff(
          int index, protocol.Training.TrainKV value) {
        if (usebuffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsebuffIsMutable();
          usebuff_.set(index, value);
          onChanged();
        } else {
          usebuffBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder setUsebuff(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (usebuffBuilder_ == null) {
          ensureUsebuffIsMutable();
          usebuff_.set(index, builderForValue.build());
          onChanged();
        } else {
          usebuffBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder addUsebuff(protocol.Training.TrainKV value) {
        if (usebuffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsebuffIsMutable();
          usebuff_.add(value);
          onChanged();
        } else {
          usebuffBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder addUsebuff(
          int index, protocol.Training.TrainKV value) {
        if (usebuffBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUsebuffIsMutable();
          usebuff_.add(index, value);
          onChanged();
        } else {
          usebuffBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder addUsebuff(
          protocol.Training.TrainKV.Builder builderForValue) {
        if (usebuffBuilder_ == null) {
          ensureUsebuffIsMutable();
          usebuff_.add(builderForValue.build());
          onChanged();
        } else {
          usebuffBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder addUsebuff(
          int index, protocol.Training.TrainKV.Builder builderForValue) {
        if (usebuffBuilder_ == null) {
          ensureUsebuffIsMutable();
          usebuff_.add(index, builderForValue.build());
          onChanged();
        } else {
          usebuffBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder addAllUsebuff(
          java.lang.Iterable<? extends protocol.Training.TrainKV> values) {
        if (usebuffBuilder_ == null) {
          ensureUsebuffIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, usebuff_);
          onChanged();
        } else {
          usebuffBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder clearUsebuff() {
        if (usebuffBuilder_ == null) {
          usebuff_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          usebuffBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public Builder removeUsebuff(int index) {
        if (usebuffBuilder_ == null) {
          ensureUsebuffIsMutable();
          usebuff_.remove(index);
          onChanged();
        } else {
          usebuffBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public protocol.Training.TrainKV.Builder getUsebuffBuilder(
          int index) {
        return getUsebuffFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public protocol.Training.TrainKVOrBuilder getUsebuffOrBuilder(
          int index) {
        if (usebuffBuilder_ == null) {
          return usebuff_.get(index);  } else {
          return usebuffBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public java.util.List<? extends protocol.Training.TrainKVOrBuilder> 
           getUsebuffOrBuilderList() {
        if (usebuffBuilder_ != null) {
          return usebuffBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(usebuff_);
        }
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public protocol.Training.TrainKV.Builder addUsebuffBuilder() {
        return getUsebuffFieldBuilder().addBuilder(
            protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public protocol.Training.TrainKV.Builder addUsebuffBuilder(
          int index) {
        return getUsebuffFieldBuilder().addBuilder(
            index, protocol.Training.TrainKV.getDefaultInstance());
      }
      /**
       * <pre>
       *获得的buff
       * </pre>
       *
       * <code>repeated .TrainKV usebuff = 13;</code>
       */
      public java.util.List<protocol.Training.TrainKV.Builder> 
           getUsebuffBuilderList() {
        return getUsebuffFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder> 
          getUsebuffFieldBuilder() {
        if (usebuffBuilder_ == null) {
          usebuffBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Training.TrainKV, protocol.Training.TrainKV.Builder, protocol.Training.TrainKVOrBuilder>(
                  usebuff_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          usebuff_ = null;
        }
        return usebuffBuilder_;
      }

      private java.util.List<protocol.TrainingDB.TrainHelpPetData> mlids_ =
        java.util.Collections.emptyList();
      private void ensureMlidsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          mlids_ = new java.util.ArrayList<protocol.TrainingDB.TrainHelpPetData>(mlids_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainHelpPetData, protocol.TrainingDB.TrainHelpPetData.Builder, protocol.TrainingDB.TrainHelpPetDataOrBuilder> mlidsBuilder_;

      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainHelpPetData> getMlidsList() {
        if (mlidsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mlids_);
        } else {
          return mlidsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public int getMlidsCount() {
        if (mlidsBuilder_ == null) {
          return mlids_.size();
        } else {
          return mlidsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public protocol.TrainingDB.TrainHelpPetData getMlids(int index) {
        if (mlidsBuilder_ == null) {
          return mlids_.get(index);
        } else {
          return mlidsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder setMlids(
          int index, protocol.TrainingDB.TrainHelpPetData value) {
        if (mlidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMlidsIsMutable();
          mlids_.set(index, value);
          onChanged();
        } else {
          mlidsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder setMlids(
          int index, protocol.TrainingDB.TrainHelpPetData.Builder builderForValue) {
        if (mlidsBuilder_ == null) {
          ensureMlidsIsMutable();
          mlids_.set(index, builderForValue.build());
          onChanged();
        } else {
          mlidsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder addMlids(protocol.TrainingDB.TrainHelpPetData value) {
        if (mlidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMlidsIsMutable();
          mlids_.add(value);
          onChanged();
        } else {
          mlidsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder addMlids(
          int index, protocol.TrainingDB.TrainHelpPetData value) {
        if (mlidsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMlidsIsMutable();
          mlids_.add(index, value);
          onChanged();
        } else {
          mlidsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder addMlids(
          protocol.TrainingDB.TrainHelpPetData.Builder builderForValue) {
        if (mlidsBuilder_ == null) {
          ensureMlidsIsMutable();
          mlids_.add(builderForValue.build());
          onChanged();
        } else {
          mlidsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder addMlids(
          int index, protocol.TrainingDB.TrainHelpPetData.Builder builderForValue) {
        if (mlidsBuilder_ == null) {
          ensureMlidsIsMutable();
          mlids_.add(index, builderForValue.build());
          onChanged();
        } else {
          mlidsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder addAllMlids(
          java.lang.Iterable<? extends protocol.TrainingDB.TrainHelpPetData> values) {
        if (mlidsBuilder_ == null) {
          ensureMlidsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mlids_);
          onChanged();
        } else {
          mlidsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder clearMlids() {
        if (mlidsBuilder_ == null) {
          mlids_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          mlidsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public Builder removeMlids(int index) {
        if (mlidsBuilder_ == null) {
          ensureMlidsIsMutable();
          mlids_.remove(index);
          onChanged();
        } else {
          mlidsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public protocol.TrainingDB.TrainHelpPetData.Builder getMlidsBuilder(
          int index) {
        return getMlidsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public protocol.TrainingDB.TrainHelpPetDataOrBuilder getMlidsOrBuilder(
          int index) {
        if (mlidsBuilder_ == null) {
          return mlids_.get(index);  } else {
          return mlidsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public java.util.List<? extends protocol.TrainingDB.TrainHelpPetDataOrBuilder> 
           getMlidsOrBuilderList() {
        if (mlidsBuilder_ != null) {
          return mlidsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mlids_);
        }
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public protocol.TrainingDB.TrainHelpPetData.Builder addMlidsBuilder() {
        return getMlidsFieldBuilder().addBuilder(
            protocol.TrainingDB.TrainHelpPetData.getDefaultInstance());
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public protocol.TrainingDB.TrainHelpPetData.Builder addMlidsBuilder(
          int index) {
        return getMlidsFieldBuilder().addBuilder(
            index, protocol.TrainingDB.TrainHelpPetData.getDefaultInstance());
      }
      /**
       * <pre>
       *获得的魔灵
       * </pre>
       *
       * <code>repeated .TrainHelpPetData mlids = 14;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainHelpPetData.Builder> 
           getMlidsBuilderList() {
        return getMlidsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainHelpPetData, protocol.TrainingDB.TrainHelpPetData.Builder, protocol.TrainingDB.TrainHelpPetDataOrBuilder> 
          getMlidsFieldBuilder() {
        if (mlidsBuilder_ == null) {
          mlidsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.TrainingDB.TrainHelpPetData, protocol.TrainingDB.TrainHelpPetData.Builder, protocol.TrainingDB.TrainHelpPetDataOrBuilder>(
                  mlids_,
                  ((bitField0_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          mlids_ = null;
        }
        return mlidsBuilder_;
      }

      private java.util.List<java.lang.Integer> buffIds_ = java.util.Collections.emptyList();
      private void ensureBuffIdsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          buffIds_ = new java.util.ArrayList<java.lang.Integer>(buffIds_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public java.util.List<java.lang.Integer>
          getBuffIdsList() {
        return java.util.Collections.unmodifiableList(buffIds_);
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public int getBuffIdsCount() {
        return buffIds_.size();
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public int getBuffIds(int index) {
        return buffIds_.get(index);
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public Builder setBuffIds(
          int index, int value) {
        ensureBuffIdsIsMutable();
        buffIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public Builder addBuffIds(int value) {
        ensureBuffIdsIsMutable();
        buffIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public Builder addAllBuffIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBuffIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, buffIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 当前点可选择BUFF数据
       * </pre>
       *
       * <code>repeated int32 buffIds = 15;</code>
       */
      public Builder clearBuffIds() {
        buffIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> starMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetStarMap() {
        if (starMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StarMapDefaultEntryHolder.defaultEntry);
        }
        return starMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableStarMap() {
        onChanged();;
        if (starMap_ == null) {
          starMap_ = com.google.protobuf.MapField.newMapField(
              StarMapDefaultEntryHolder.defaultEntry);
        }
        if (!starMap_.isMutable()) {
          starMap_ = starMap_.copy();
        }
        return starMap_;
      }

      public int getStarMapCount() {
        return internalGetStarMap().getMap().size();
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public boolean containsStarMap(
          int key) {
        
        return internalGetStarMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStarMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getStarMap() {
        return getStarMapMap();
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getStarMapMap() {
        return internalGetStarMap().getMap();
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public int getStarMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetStarMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public int getStarMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetStarMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStarMap() {
        internalGetMutableStarMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public Builder removeStarMap(
          int key) {
        
        internalGetMutableStarMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableStarMap() {
        return internalGetMutableStarMap().getMutableMap();
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */
      public Builder putStarMap(
          int key,
          int value) {
        
        
        internalGetMutableStarMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *节点星级 
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; starMap = 16;</code>
       */

      public Builder putAllStarMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableStarMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, protocol.Training.TrainItem> itemMap_;
      private com.google.protobuf.MapField<java.lang.String, protocol.Training.TrainItem>
      internalGetItemMap() {
        if (itemMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ItemMapDefaultEntryHolder.defaultEntry);
        }
        return itemMap_;
      }
      private com.google.protobuf.MapField<java.lang.String, protocol.Training.TrainItem>
      internalGetMutableItemMap() {
        onChanged();;
        if (itemMap_ == null) {
          itemMap_ = com.google.protobuf.MapField.newMapField(
              ItemMapDefaultEntryHolder.defaultEntry);
        }
        if (!itemMap_.isMutable()) {
          itemMap_ = itemMap_.copy();
        }
        return itemMap_;
      }

      public int getItemMapCount() {
        return internalGetItemMap().getMap().size();
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public boolean containsItemMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetItemMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Training.TrainItem> getItemMap() {
        return getItemMapMap();
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public java.util.Map<java.lang.String, protocol.Training.TrainItem> getItemMapMap() {
        return internalGetItemMap().getMap();
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public protocol.Training.TrainItem getItemMapOrDefault(
          java.lang.String key,
          protocol.Training.TrainItem defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Training.TrainItem> map =
            internalGetItemMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public protocol.Training.TrainItem getItemMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, protocol.Training.TrainItem> map =
            internalGetItemMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItemMap() {
        internalGetMutableItemMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public Builder removeItemMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableItemMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, protocol.Training.TrainItem>
      getMutableItemMap() {
        return internalGetMutableItemMap().getMutableMap();
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */
      public Builder putItemMap(
          java.lang.String key,
          protocol.Training.TrainItem value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableItemMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *消耗道具map
       * </pre>
       *
       * <code>map&lt;string, .TrainItem&gt; itemMap = 17;</code>
       */

      public Builder putAllItemMap(
          java.util.Map<java.lang.String, protocol.Training.TrainItem> values) {
        internalGetMutableItemMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> prepareUse_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetPrepareUse() {
        if (prepareUse_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PrepareUseDefaultEntryHolder.defaultEntry);
        }
        return prepareUse_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutablePrepareUse() {
        onChanged();;
        if (prepareUse_ == null) {
          prepareUse_ = com.google.protobuf.MapField.newMapField(
              PrepareUseDefaultEntryHolder.defaultEntry);
        }
        if (!prepareUse_.isMutable()) {
          prepareUse_ = prepareUse_.copy();
        }
        return prepareUse_;
      }

      public int getPrepareUseCount() {
        return internalGetPrepareUse().getMap().size();
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public boolean containsPrepareUse(
          int key) {
        
        return internalGetPrepareUse().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPrepareUseMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getPrepareUse() {
        return getPrepareUseMap();
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getPrepareUseMap() {
        return internalGetPrepareUse().getMap();
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public int getPrepareUseOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPrepareUse().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public int getPrepareUseOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPrepareUse().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPrepareUse() {
        internalGetMutablePrepareUse().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public Builder removePrepareUse(
          int key) {
        
        internalGetMutablePrepareUse().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutablePrepareUse() {
        return internalGetMutablePrepareUse().getMutableMap();
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */
      public Builder putPrepareUse(
          int key,
          int value) {
        
        
        internalGetMutablePrepareUse().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *下场战斗准备使用的道具
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; prepareUse = 18;</code>
       */

      public Builder putAllPrepareUse(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutablePrepareUse().getMutableMap()
            .putAll(values);
        return this;
      }

      private int startId_ ;
      /**
       * <pre>
       *玩家选择的起点
       * </pre>
       *
       * <code>int32 startId = 19;</code>
       */
      public int getStartId() {
        return startId_;
      }
      /**
       * <pre>
       *玩家选择的起点
       * </pre>
       *
       * <code>int32 startId = 19;</code>
       */
      public Builder setStartId(int value) {
        
        startId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家选择的起点
       * </pre>
       *
       * <code>int32 startId = 19;</code>
       */
      public Builder clearStartId() {
        
        startId_ = 0;
        onChanged();
        return this;
      }

      private int curBoss_ ;
      /**
       * <pre>
       *当前已打败的boss
       * </pre>
       *
       * <code>int32 curBoss = 20;</code>
       */
      public int getCurBoss() {
        return curBoss_;
      }
      /**
       * <pre>
       *当前已打败的boss
       * </pre>
       *
       * <code>int32 curBoss = 20;</code>
       */
      public Builder setCurBoss(int value) {
        
        curBoss_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前已打败的boss
       * </pre>
       *
       * <code>int32 curBoss = 20;</code>
       */
      public Builder clearCurBoss() {
        
        curBoss_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.TrainingDB.TrainShopGroup> shop_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
      internalGetShop() {
        if (shop_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ShopDefaultEntryHolder.defaultEntry);
        }
        return shop_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
      internalGetMutableShop() {
        onChanged();;
        if (shop_ == null) {
          shop_ = com.google.protobuf.MapField.newMapField(
              ShopDefaultEntryHolder.defaultEntry);
        }
        if (!shop_.isMutable()) {
          shop_ = shop_.copy();
        }
        return shop_;
      }

      public int getShopCount() {
        return internalGetShop().getMap().size();
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public boolean containsShop(
          int key) {
        
        return internalGetShop().getMap().containsKey(key);
      }
      /**
       * Use {@link #getShopMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> getShop() {
        return getShopMap();
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> getShopMap() {
        return internalGetShop().getMap();
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public protocol.TrainingDB.TrainShopGroup getShopOrDefault(
          int key,
          protocol.TrainingDB.TrainShopGroup defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> map =
            internalGetShop().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public protocol.TrainingDB.TrainShopGroup getShopOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> map =
            internalGetShop().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearShop() {
        internalGetMutableShop().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public Builder removeShop(
          int key) {
        
        internalGetMutableShop().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup>
      getMutableShop() {
        return internalGetMutableShop().getMutableMap();
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */
      public Builder putShop(
          int key,
          protocol.TrainingDB.TrainShopGroup value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableShop().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *商店数据
       * </pre>
       *
       * <code>map&lt;int32, .TrainShopGroup&gt; shop = 21;</code>
       */

      public Builder putAllShop(
          java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainShopGroup> values) {
        internalGetMutableShop().getMutableMap()
            .putAll(values);
        return this;
      }

      private protocol.Training.TrainBuffBag buffBag_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Training.TrainBuffBag, protocol.Training.TrainBuffBag.Builder, protocol.Training.TrainBuffBagOrBuilder> buffBagBuilder_;
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public boolean hasBuffBag() {
        return buffBagBuilder_ != null || buffBag_ != null;
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public protocol.Training.TrainBuffBag getBuffBag() {
        if (buffBagBuilder_ == null) {
          return buffBag_ == null ? protocol.Training.TrainBuffBag.getDefaultInstance() : buffBag_;
        } else {
          return buffBagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public Builder setBuffBag(protocol.Training.TrainBuffBag value) {
        if (buffBagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          buffBag_ = value;
          onChanged();
        } else {
          buffBagBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public Builder setBuffBag(
          protocol.Training.TrainBuffBag.Builder builderForValue) {
        if (buffBagBuilder_ == null) {
          buffBag_ = builderForValue.build();
          onChanged();
        } else {
          buffBagBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public Builder mergeBuffBag(protocol.Training.TrainBuffBag value) {
        if (buffBagBuilder_ == null) {
          if (buffBag_ != null) {
            buffBag_ =
              protocol.Training.TrainBuffBag.newBuilder(buffBag_).mergeFrom(value).buildPartial();
          } else {
            buffBag_ = value;
          }
          onChanged();
        } else {
          buffBagBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public Builder clearBuffBag() {
        if (buffBagBuilder_ == null) {
          buffBag_ = null;
          onChanged();
        } else {
          buffBag_ = null;
          buffBagBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public protocol.Training.TrainBuffBag.Builder getBuffBagBuilder() {
        
        onChanged();
        return getBuffBagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      public protocol.Training.TrainBuffBagOrBuilder getBuffBagOrBuilder() {
        if (buffBagBuilder_ != null) {
          return buffBagBuilder_.getMessageOrBuilder();
        } else {
          return buffBag_ == null ?
              protocol.Training.TrainBuffBag.getDefaultInstance() : buffBag_;
        }
      }
      /**
       * <pre>
       *buff背包
       * </pre>
       *
       * <code>.TrainBuffBag buffBag = 22;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Training.TrainBuffBag, protocol.Training.TrainBuffBag.Builder, protocol.Training.TrainBuffBagOrBuilder> 
          getBuffBagFieldBuilder() {
        if (buffBagBuilder_ == null) {
          buffBagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Training.TrainBuffBag, protocol.Training.TrainBuffBag.Builder, protocol.Training.TrainBuffBagOrBuilder>(
                  getBuffBag(),
                  getParentForChildren(),
                  isClean());
          buffBag_ = null;
        }
        return buffBagBuilder_;
      }

      private protocol.Training.TrainItemBag itemBag_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Training.TrainItemBag, protocol.Training.TrainItemBag.Builder, protocol.Training.TrainItemBagOrBuilder> itemBagBuilder_;
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public boolean hasItemBag() {
        return itemBagBuilder_ != null || itemBag_ != null;
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public protocol.Training.TrainItemBag getItemBag() {
        if (itemBagBuilder_ == null) {
          return itemBag_ == null ? protocol.Training.TrainItemBag.getDefaultInstance() : itemBag_;
        } else {
          return itemBagBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public Builder setItemBag(protocol.Training.TrainItemBag value) {
        if (itemBagBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          itemBag_ = value;
          onChanged();
        } else {
          itemBagBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public Builder setItemBag(
          protocol.Training.TrainItemBag.Builder builderForValue) {
        if (itemBagBuilder_ == null) {
          itemBag_ = builderForValue.build();
          onChanged();
        } else {
          itemBagBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public Builder mergeItemBag(protocol.Training.TrainItemBag value) {
        if (itemBagBuilder_ == null) {
          if (itemBag_ != null) {
            itemBag_ =
              protocol.Training.TrainItemBag.newBuilder(itemBag_).mergeFrom(value).buildPartial();
          } else {
            itemBag_ = value;
          }
          onChanged();
        } else {
          itemBagBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public Builder clearItemBag() {
        if (itemBagBuilder_ == null) {
          itemBag_ = null;
          onChanged();
        } else {
          itemBag_ = null;
          itemBagBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public protocol.Training.TrainItemBag.Builder getItemBagBuilder() {
        
        onChanged();
        return getItemBagFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      public protocol.Training.TrainItemBagOrBuilder getItemBagOrBuilder() {
        if (itemBagBuilder_ != null) {
          return itemBagBuilder_.getMessageOrBuilder();
        } else {
          return itemBag_ == null ?
              protocol.Training.TrainItemBag.getDefaultInstance() : itemBag_;
        }
      }
      /**
       * <pre>
       *道具背包
       * </pre>
       *
       * <code>.TrainItemBag itemBag = 23;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Training.TrainItemBag, protocol.Training.TrainItemBag.Builder, protocol.Training.TrainItemBagOrBuilder> 
          getItemBagFieldBuilder() {
        if (itemBagBuilder_ == null) {
          itemBagBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Training.TrainItemBag, protocol.Training.TrainItemBag.Builder, protocol.Training.TrainItemBagOrBuilder>(
                  getItemBag(),
                  getParentForChildren(),
                  isClean());
          itemBag_ = null;
        }
        return itemBagBuilder_;
      }

      private int preparPoint_ ;
      /**
       * <pre>
       *buff背包对应的点
       * </pre>
       *
       * <code>int32 preparPoint = 24;</code>
       */
      public int getPreparPoint() {
        return preparPoint_;
      }
      /**
       * <pre>
       *buff背包对应的点
       * </pre>
       *
       * <code>int32 preparPoint = 24;</code>
       */
      public Builder setPreparPoint(int value) {
        
        preparPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *buff背包对应的点
       * </pre>
       *
       * <code>int32 preparPoint = 24;</code>
       */
      public Builder clearPreparPoint() {
        
        preparPoint_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> curpath_ = java.util.Collections.emptyList();
      private void ensureCurpathIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          curpath_ = new java.util.ArrayList<java.lang.Integer>(curpath_);
          bitField0_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public java.util.List<java.lang.Integer>
          getCurpathList() {
        return java.util.Collections.unmodifiableList(curpath_);
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public int getCurpathCount() {
        return curpath_.size();
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public int getCurpath(int index) {
        return curpath_.get(index);
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public Builder setCurpath(
          int index, int value) {
        ensureCurpathIsMutable();
        curpath_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public Builder addCurpath(int value) {
        ensureCurpathIsMutable();
        curpath_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public Builder addAllCurpath(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCurpathIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, curpath_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 curpath = 25;</code>
       */
      public Builder clearCurpath() {
        curpath_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }

      private long luckbuffendtime_ ;
      /**
       * <pre>
       *祝福卡抽奖结束时间
       * </pre>
       *
       * <code>int64 luckbuffendtime = 26;</code>
       */
      public long getLuckbuffendtime() {
        return luckbuffendtime_;
      }
      /**
       * <pre>
       *祝福卡抽奖结束时间
       * </pre>
       *
       * <code>int64 luckbuffendtime = 26;</code>
       */
      public Builder setLuckbuffendtime(long value) {
        
        luckbuffendtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *祝福卡抽奖结束时间
       * </pre>
       *
       * <code>int64 luckbuffendtime = 26;</code>
       */
      public Builder clearLuckbuffendtime() {
        
        luckbuffendtime_ = 0L;
        onChanged();
        return this;
      }

      private int luckbufftime_ ;
      /**
       * <pre>
       *祝福卡抽奖次数
       * </pre>
       *
       * <code>int32 luckbufftime = 27;</code>
       */
      public int getLuckbufftime() {
        return luckbufftime_;
      }
      /**
       * <pre>
       *祝福卡抽奖次数
       * </pre>
       *
       * <code>int32 luckbufftime = 27;</code>
       */
      public Builder setLuckbufftime(int value) {
        
        luckbufftime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *祝福卡抽奖次数
       * </pre>
       *
       * <code>int32 luckbufftime = 27;</code>
       */
      public Builder clearLuckbufftime() {
        
        luckbufftime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> luckbuffid_ = java.util.Collections.emptyList();
      private void ensureLuckbuffidIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          luckbuffid_ = new java.util.ArrayList<java.lang.Integer>(luckbuffid_);
          bitField0_ |= 0x08000000;
         }
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public java.util.List<java.lang.Integer>
          getLuckbuffidList() {
        return java.util.Collections.unmodifiableList(luckbuffid_);
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public int getLuckbuffidCount() {
        return luckbuffid_.size();
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public int getLuckbuffid(int index) {
        return luckbuffid_.get(index);
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public Builder setLuckbuffid(
          int index, int value) {
        ensureLuckbuffidIsMutable();
        luckbuffid_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public Builder addLuckbuffid(int value) {
        ensureLuckbuffidIsMutable();
        luckbuffid_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public Builder addAllLuckbuffid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLuckbuffidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, luckbuffid_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *抽取到的祝福卡
       * </pre>
       *
       * <code>repeated int32 luckbuffid = 28;</code>
       */
      public Builder clearLuckbuffid() {
        luckbuffid_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.TrainingDB.TrainLuckData> luckData_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      internalGetLuckData() {
        if (luckData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LuckDataDefaultEntryHolder.defaultEntry);
        }
        return luckData_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      internalGetMutableLuckData() {
        onChanged();;
        if (luckData_ == null) {
          luckData_ = com.google.protobuf.MapField.newMapField(
              LuckDataDefaultEntryHolder.defaultEntry);
        }
        if (!luckData_.isMutable()) {
          luckData_ = luckData_.copy();
        }
        return luckData_;
      }

      public int getLuckDataCount() {
        return internalGetLuckData().getMap().size();
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public boolean containsLuckData(
          int key) {
        
        return internalGetLuckData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLuckDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getLuckData() {
        return getLuckDataMap();
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getLuckDataMap() {
        return internalGetLuckData().getMap();
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public protocol.TrainingDB.TrainLuckData getLuckDataOrDefault(
          int key,
          protocol.TrainingDB.TrainLuckData defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
            internalGetLuckData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public protocol.TrainingDB.TrainLuckData getLuckDataOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
            internalGetLuckData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLuckData() {
        internalGetMutableLuckData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public Builder removeLuckData(
          int key) {
        
        internalGetMutableLuckData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      getMutableLuckData() {
        return internalGetMutableLuckData().getMutableMap();
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */
      public Builder putLuckData(
          int key,
          protocol.TrainingDB.TrainLuckData value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLuckData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *抽到的祝福卡
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; luckData = 29;</code>
       */

      public Builder putAllLuckData(
          java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> values) {
        internalGetMutableLuckData().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.Training.TrainLuckCard> cardMap_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainLuckCard>
      internalGetCardMap() {
        if (cardMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CardMapDefaultEntryHolder.defaultEntry);
        }
        return cardMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainLuckCard>
      internalGetMutableCardMap() {
        onChanged();;
        if (cardMap_ == null) {
          cardMap_ = com.google.protobuf.MapField.newMapField(
              CardMapDefaultEntryHolder.defaultEntry);
        }
        if (!cardMap_.isMutable()) {
          cardMap_ = cardMap_.copy();
        }
        return cardMap_;
      }

      public int getCardMapCount() {
        return internalGetCardMap().getMap().size();
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public boolean containsCardMap(
          int key) {
        
        return internalGetCardMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCardMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> getCardMap() {
        return getCardMapMap();
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> getCardMapMap() {
        return internalGetCardMap().getMap();
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public protocol.Training.TrainLuckCard getCardMapOrDefault(
          int key,
          protocol.Training.TrainLuckCard defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> map =
            internalGetCardMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public protocol.Training.TrainLuckCard getCardMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> map =
            internalGetCardMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCardMap() {
        internalGetMutableCardMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public Builder removeCardMap(
          int key) {
        
        internalGetMutableCardMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard>
      getMutableCardMap() {
        return internalGetMutableCardMap().getMutableMap();
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */
      public Builder putCardMap(
          int key,
          protocol.Training.TrainLuckCard value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableCardMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *祝福卡商店
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckCard&gt; cardMap = 30;</code>
       */

      public Builder putAllCardMap(
          java.util.Map<java.lang.Integer, protocol.Training.TrainLuckCard> values) {
        internalGetMutableCardMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> cardWeightChange_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetCardWeightChange() {
        if (cardWeightChange_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CardWeightChangeDefaultEntryHolder.defaultEntry);
        }
        return cardWeightChange_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableCardWeightChange() {
        onChanged();;
        if (cardWeightChange_ == null) {
          cardWeightChange_ = com.google.protobuf.MapField.newMapField(
              CardWeightChangeDefaultEntryHolder.defaultEntry);
        }
        if (!cardWeightChange_.isMutable()) {
          cardWeightChange_ = cardWeightChange_.copy();
        }
        return cardWeightChange_;
      }

      public int getCardWeightChangeCount() {
        return internalGetCardWeightChange().getMap().size();
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public boolean containsCardWeightChange(
          int key) {
        
        return internalGetCardWeightChange().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCardWeightChangeMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardWeightChange() {
        return getCardWeightChangeMap();
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardWeightChangeMap() {
        return internalGetCardWeightChange().getMap();
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public int getCardWeightChangeOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardWeightChange().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public int getCardWeightChangeOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardWeightChange().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCardWeightChange() {
        internalGetMutableCardWeightChange().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public Builder removeCardWeightChange(
          int key) {
        
        internalGetMutableCardWeightChange().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableCardWeightChange() {
        return internalGetMutableCardWeightChange().getMutableMap();
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */
      public Builder putCardWeightChange(
          int key,
          int value) {
        
        
        internalGetMutableCardWeightChange().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *祝福卡权重变化
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardWeightChange = 31;</code>
       */

      public Builder putAllCardWeightChange(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableCardWeightChange().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.TrainingDB.TrainLuckData> buffFlag_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      internalGetBuffFlag() {
        if (buffFlag_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BuffFlagDefaultEntryHolder.defaultEntry);
        }
        return buffFlag_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      internalGetMutableBuffFlag() {
        onChanged();;
        if (buffFlag_ == null) {
          buffFlag_ = com.google.protobuf.MapField.newMapField(
              BuffFlagDefaultEntryHolder.defaultEntry);
        }
        if (!buffFlag_.isMutable()) {
          buffFlag_ = buffFlag_.copy();
        }
        return buffFlag_;
      }

      public int getBuffFlagCount() {
        return internalGetBuffFlag().getMap().size();
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public boolean containsBuffFlag(
          int key) {
        
        return internalGetBuffFlag().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBuffFlagMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getBuffFlag() {
        return getBuffFlagMap();
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> getBuffFlagMap() {
        return internalGetBuffFlag().getMap();
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public protocol.TrainingDB.TrainLuckData getBuffFlagOrDefault(
          int key,
          protocol.TrainingDB.TrainLuckData defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
            internalGetBuffFlag().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public protocol.TrainingDB.TrainLuckData getBuffFlagOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> map =
            internalGetBuffFlag().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBuffFlag() {
        internalGetMutableBuffFlag().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public Builder removeBuffFlag(
          int key) {
        
        internalGetMutableBuffFlag().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData>
      getMutableBuffFlag() {
        return internalGetMutableBuffFlag().getMutableMap();
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */
      public Builder putBuffFlag(
          int key,
          protocol.TrainingDB.TrainLuckData value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBuffFlag().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *最高级卡生效
       * </pre>
       *
       * <code>map&lt;int32, .TrainLuckData&gt; buffFlag = 32;</code>
       */

      public Builder putAllBuffFlag(
          java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainLuckData> values) {
        internalGetMutableBuffFlag().getMutableMap()
            .putAll(values);
        return this;
      }

      private int jifenPer_ ;
      /**
       * <pre>
       *积分百分比增加
       * </pre>
       *
       * <code>int32 jifenPer = 33;</code>
       */
      public int getJifenPer() {
        return jifenPer_;
      }
      /**
       * <pre>
       *积分百分比增加
       * </pre>
       *
       * <code>int32 jifenPer = 33;</code>
       */
      public Builder setJifenPer(int value) {
        
        jifenPer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *积分百分比增加
       * </pre>
       *
       * <code>int32 jifenPer = 33;</code>
       */
      public Builder clearJifenPer() {
        
        jifenPer_ = 0;
        onChanged();
        return this;
      }

      private protocol.TrainingDB.TraingEventData eventData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.TrainingDB.TraingEventData, protocol.TrainingDB.TraingEventData.Builder, protocol.TrainingDB.TraingEventDataOrBuilder> eventDataBuilder_;
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public boolean hasEventData() {
        return eventDataBuilder_ != null || eventData_ != null;
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public protocol.TrainingDB.TraingEventData getEventData() {
        if (eventDataBuilder_ == null) {
          return eventData_ == null ? protocol.TrainingDB.TraingEventData.getDefaultInstance() : eventData_;
        } else {
          return eventDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public Builder setEventData(protocol.TrainingDB.TraingEventData value) {
        if (eventDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eventData_ = value;
          onChanged();
        } else {
          eventDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public Builder setEventData(
          protocol.TrainingDB.TraingEventData.Builder builderForValue) {
        if (eventDataBuilder_ == null) {
          eventData_ = builderForValue.build();
          onChanged();
        } else {
          eventDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public Builder mergeEventData(protocol.TrainingDB.TraingEventData value) {
        if (eventDataBuilder_ == null) {
          if (eventData_ != null) {
            eventData_ =
              protocol.TrainingDB.TraingEventData.newBuilder(eventData_).mergeFrom(value).buildPartial();
          } else {
            eventData_ = value;
          }
          onChanged();
        } else {
          eventDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public Builder clearEventData() {
        if (eventDataBuilder_ == null) {
          eventData_ = null;
          onChanged();
        } else {
          eventData_ = null;
          eventDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public protocol.TrainingDB.TraingEventData.Builder getEventDataBuilder() {
        
        onChanged();
        return getEventDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      public protocol.TrainingDB.TraingEventDataOrBuilder getEventDataOrBuilder() {
        if (eventDataBuilder_ != null) {
          return eventDataBuilder_.getMessageOrBuilder();
        } else {
          return eventData_ == null ?
              protocol.TrainingDB.TraingEventData.getDefaultInstance() : eventData_;
        }
      }
      /**
       * <code>.TraingEventData eventData = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.TrainingDB.TraingEventData, protocol.TrainingDB.TraingEventData.Builder, protocol.TrainingDB.TraingEventDataOrBuilder> 
          getEventDataFieldBuilder() {
        if (eventDataBuilder_ == null) {
          eventDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.TrainingDB.TraingEventData, protocol.TrainingDB.TraingEventData.Builder, protocol.TrainingDB.TraingEventDataOrBuilder>(
                  getEventData(),
                  getParentForChildren(),
                  isClean());
          eventData_ = null;
        }
        return eventDataBuilder_;
      }

      private int limitCardId_ ;
      /**
       * <pre>
       *当前限时祝福卡ID标记
       * </pre>
       *
       * <code>int32 limitCardId = 35;</code>
       */
      public int getLimitCardId() {
        return limitCardId_;
      }
      /**
       * <pre>
       *当前限时祝福卡ID标记
       * </pre>
       *
       * <code>int32 limitCardId = 35;</code>
       */
      public Builder setLimitCardId(int value) {
        
        limitCardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前限时祝福卡ID标记
       * </pre>
       *
       * <code>int32 limitCardId = 35;</code>
       */
      public Builder clearLimitCardId() {
        
        limitCardId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> changePoint_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetChangePoint() {
        if (changePoint_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ChangePointDefaultEntryHolder.defaultEntry);
        }
        return changePoint_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableChangePoint() {
        onChanged();;
        if (changePoint_ == null) {
          changePoint_ = com.google.protobuf.MapField.newMapField(
              ChangePointDefaultEntryHolder.defaultEntry);
        }
        if (!changePoint_.isMutable()) {
          changePoint_ = changePoint_.copy();
        }
        return changePoint_;
      }

      public int getChangePointCount() {
        return internalGetChangePoint().getMap().size();
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public boolean containsChangePoint(
          int key) {
        
        return internalGetChangePoint().getMap().containsKey(key);
      }
      /**
       * Use {@link #getChangePointMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getChangePoint() {
        return getChangePointMap();
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getChangePointMap() {
        return internalGetChangePoint().getMap();
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public int getChangePointOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetChangePoint().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public int getChangePointOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetChangePoint().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearChangePoint() {
        internalGetMutableChangePoint().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public Builder removeChangePoint(
          int key) {
        
        internalGetMutableChangePoint().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableChangePoint() {
        return internalGetMutableChangePoint().getMutableMap();
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */
      public Builder putChangePoint(
          int key,
          int value) {
        
        
        internalGetMutableChangePoint().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *被替换的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; changePoint = 36;</code>
       */

      public Builder putAllChangePoint(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableChangePoint().getMutableMap()
            .putAll(values);
        return this;
      }

      private long joinPower_ ;
      /**
       * <code>int64 joinPower = 37;</code>
       */
      public long getJoinPower() {
        return joinPower_;
      }
      /**
       * <code>int64 joinPower = 37;</code>
       */
      public Builder setJoinPower(long value) {
        
        joinPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 joinPower = 37;</code>
       */
      public Builder clearJoinPower() {
        
        joinPower_ = 0L;
        onChanged();
        return this;
      }

      private long endPower_ ;
      /**
       * <code>int64 endPower = 38;</code>
       */
      public long getEndPower() {
        return endPower_;
      }
      /**
       * <code>int64 endPower = 38;</code>
       */
      public Builder setEndPower(long value) {
        
        endPower_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 endPower = 38;</code>
       */
      public Builder clearEndPower() {
        
        endPower_ = 0L;
        onChanged();
        return this;
      }

      private int reportCardLevel_ ;
      /**
       * <code>int32 reportCardLevel = 39;</code>
       */
      public int getReportCardLevel() {
        return reportCardLevel_;
      }
      /**
       * <code>int32 reportCardLevel = 39;</code>
       */
      public Builder setReportCardLevel(int value) {
        
        reportCardLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reportCardLevel = 39;</code>
       */
      public Builder clearReportCardLevel() {
        
        reportCardLevel_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol.Training.TrainLimitCard> limitcard_ =
        java.util.Collections.emptyList();
      private void ensureLimitcardIsMutable() {
        if (!((bitField1_ & 0x00000080) == 0x00000080)) {
          limitcard_ = new java.util.ArrayList<protocol.Training.TrainLimitCard>(limitcard_);
          bitField1_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainLimitCard, protocol.Training.TrainLimitCard.Builder, protocol.Training.TrainLimitCardOrBuilder> limitcardBuilder_;

      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public java.util.List<protocol.Training.TrainLimitCard> getLimitcardList() {
        if (limitcardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(limitcard_);
        } else {
          return limitcardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public int getLimitcardCount() {
        if (limitcardBuilder_ == null) {
          return limitcard_.size();
        } else {
          return limitcardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public protocol.Training.TrainLimitCard getLimitcard(int index) {
        if (limitcardBuilder_ == null) {
          return limitcard_.get(index);
        } else {
          return limitcardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder setLimitcard(
          int index, protocol.Training.TrainLimitCard value) {
        if (limitcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitcardIsMutable();
          limitcard_.set(index, value);
          onChanged();
        } else {
          limitcardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder setLimitcard(
          int index, protocol.Training.TrainLimitCard.Builder builderForValue) {
        if (limitcardBuilder_ == null) {
          ensureLimitcardIsMutable();
          limitcard_.set(index, builderForValue.build());
          onChanged();
        } else {
          limitcardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder addLimitcard(protocol.Training.TrainLimitCard value) {
        if (limitcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitcardIsMutable();
          limitcard_.add(value);
          onChanged();
        } else {
          limitcardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder addLimitcard(
          int index, protocol.Training.TrainLimitCard value) {
        if (limitcardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLimitcardIsMutable();
          limitcard_.add(index, value);
          onChanged();
        } else {
          limitcardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder addLimitcard(
          protocol.Training.TrainLimitCard.Builder builderForValue) {
        if (limitcardBuilder_ == null) {
          ensureLimitcardIsMutable();
          limitcard_.add(builderForValue.build());
          onChanged();
        } else {
          limitcardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder addLimitcard(
          int index, protocol.Training.TrainLimitCard.Builder builderForValue) {
        if (limitcardBuilder_ == null) {
          ensureLimitcardIsMutable();
          limitcard_.add(index, builderForValue.build());
          onChanged();
        } else {
          limitcardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder addAllLimitcard(
          java.lang.Iterable<? extends protocol.Training.TrainLimitCard> values) {
        if (limitcardBuilder_ == null) {
          ensureLimitcardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, limitcard_);
          onChanged();
        } else {
          limitcardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder clearLimitcard() {
        if (limitcardBuilder_ == null) {
          limitcard_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000080);
          onChanged();
        } else {
          limitcardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public Builder removeLimitcard(int index) {
        if (limitcardBuilder_ == null) {
          ensureLimitcardIsMutable();
          limitcard_.remove(index);
          onChanged();
        } else {
          limitcardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public protocol.Training.TrainLimitCard.Builder getLimitcardBuilder(
          int index) {
        return getLimitcardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public protocol.Training.TrainLimitCardOrBuilder getLimitcardOrBuilder(
          int index) {
        if (limitcardBuilder_ == null) {
          return limitcard_.get(index);  } else {
          return limitcardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public java.util.List<? extends protocol.Training.TrainLimitCardOrBuilder> 
           getLimitcardOrBuilderList() {
        if (limitcardBuilder_ != null) {
          return limitcardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(limitcard_);
        }
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public protocol.Training.TrainLimitCard.Builder addLimitcardBuilder() {
        return getLimitcardFieldBuilder().addBuilder(
            protocol.Training.TrainLimitCard.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public protocol.Training.TrainLimitCard.Builder addLimitcardBuilder(
          int index) {
        return getLimitcardFieldBuilder().addBuilder(
            index, protocol.Training.TrainLimitCard.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainLimitCard limitcard = 41;</code>
       */
      public java.util.List<protocol.Training.TrainLimitCard.Builder> 
           getLimitcardBuilderList() {
        return getLimitcardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Training.TrainLimitCard, protocol.Training.TrainLimitCard.Builder, protocol.Training.TrainLimitCardOrBuilder> 
          getLimitcardFieldBuilder() {
        if (limitcardBuilder_ == null) {
          limitcardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Training.TrainLimitCard, protocol.Training.TrainLimitCard.Builder, protocol.Training.TrainLimitCardOrBuilder>(
                  limitcard_,
                  ((bitField1_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          limitcard_ = null;
        }
        return limitcardBuilder_;
      }

      private long endtime_ ;
      /**
       * <code>int64 endtime = 42;</code>
       */
      public long getEndtime() {
        return endtime_;
      }
      /**
       * <code>int64 endtime = 42;</code>
       */
      public Builder setEndtime(long value) {
        
        endtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 endtime = 42;</code>
       */
      public Builder clearEndtime() {
        
        endtime_ = 0L;
        onChanged();
        return this;
      }

      private int npcEventId_ ;
      /**
       * <code>int32 npcEventId = 43;</code>
       */
      public int getNpcEventId() {
        return npcEventId_;
      }
      /**
       * <code>int32 npcEventId = 43;</code>
       */
      public Builder setNpcEventId(int value) {
        
        npcEventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 npcEventId = 43;</code>
       */
      public Builder clearNpcEventId() {
        
        npcEventId_ = 0;
        onChanged();
        return this;
      }

      private int npcEventPoint_ ;
      /**
       * <code>int32 npcEventPoint = 44;</code>
       */
      public int getNpcEventPoint() {
        return npcEventPoint_;
      }
      /**
       * <code>int32 npcEventPoint = 44;</code>
       */
      public Builder setNpcEventPoint(int value) {
        
        npcEventPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 npcEventPoint = 44;</code>
       */
      public Builder clearNpcEventPoint() {
        
        npcEventPoint_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> bloodMonster_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
      internalGetBloodMonster() {
        if (bloodMonster_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BloodMonsterDefaultEntryHolder.defaultEntry);
        }
        return bloodMonster_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
      internalGetMutableBloodMonster() {
        onChanged();;
        if (bloodMonster_ == null) {
          bloodMonster_ = com.google.protobuf.MapField.newMapField(
              BloodMonsterDefaultEntryHolder.defaultEntry);
        }
        if (!bloodMonster_.isMutable()) {
          bloodMonster_ = bloodMonster_.copy();
        }
        return bloodMonster_;
      }

      public int getBloodMonsterCount() {
        return internalGetBloodMonster().getMap().size();
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public boolean containsBloodMonster(
          int key) {
        
        return internalGetBloodMonster().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBloodMonsterMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> getBloodMonster() {
        return getBloodMonsterMap();
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> getBloodMonsterMap() {
        return internalGetBloodMonster().getMap();
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrDefault(
          int key,
          protocol.TrainingDB.TrainBloodMonster defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> map =
            internalGetBloodMonster().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public protocol.TrainingDB.TrainBloodMonster getBloodMonsterOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> map =
            internalGetBloodMonster().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBloodMonster() {
        internalGetMutableBloodMonster().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public Builder removeBloodMonster(
          int key) {
        
        internalGetMutableBloodMonster().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster>
      getMutableBloodMonster() {
        return internalGetMutableBloodMonster().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */
      public Builder putBloodMonster(
          int key,
          protocol.TrainingDB.TrainBloodMonster value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBloodMonster().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .TrainBloodMonster&gt; bloodMonster = 45;</code>
       */

      public Builder putAllBloodMonster(
          java.util.Map<java.lang.Integer, protocol.TrainingDB.TrainBloodMonster> values) {
        internalGetMutableBloodMonster().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> mlTimes_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMlTimes() {
        if (mlTimes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MlTimesDefaultEntryHolder.defaultEntry);
        }
        return mlTimes_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
      internalGetMutableMlTimes() {
        onChanged();;
        if (mlTimes_ == null) {
          mlTimes_ = com.google.protobuf.MapField.newMapField(
              MlTimesDefaultEntryHolder.defaultEntry);
        }
        if (!mlTimes_.isMutable()) {
          mlTimes_ = mlTimes_.copy();
        }
        return mlTimes_;
      }

      public int getMlTimesCount() {
        return internalGetMlTimes().getMap().size();
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public boolean containsMlTimes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMlTimes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMlTimesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getMlTimes() {
        return getMlTimesMap();
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Integer> getMlTimesMap() {
        return internalGetMlTimes().getMap();
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public int getMlTimesOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetMlTimes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public int getMlTimesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetMlTimes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMlTimes() {
        internalGetMutableMlTimes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public Builder removeMlTimes(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMlTimes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
      getMutableMlTimes() {
        return internalGetMutableMlTimes().getMutableMap();
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */
      public Builder putMlTimes(
          java.lang.String key,
          int value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        
        internalGetMutableMlTimes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *助战魔灵使用次数
       * </pre>
       *
       * <code>map&lt;string, int32&gt; mlTimes = 46;</code>
       */

      public Builder putAllMlTimes(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableMlTimes().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<protocol.TrainingDB.TrainCardChoice> traincard_ =
        java.util.Collections.emptyList();
      private void ensureTraincardIsMutable() {
        if (!((bitField1_ & 0x00002000) == 0x00002000)) {
          traincard_ = new java.util.ArrayList<protocol.TrainingDB.TrainCardChoice>(traincard_);
          bitField1_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainCardChoice, protocol.TrainingDB.TrainCardChoice.Builder, protocol.TrainingDB.TrainCardChoiceOrBuilder> traincardBuilder_;

      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainCardChoice> getTraincardList() {
        if (traincardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(traincard_);
        } else {
          return traincardBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public int getTraincardCount() {
        if (traincardBuilder_ == null) {
          return traincard_.size();
        } else {
          return traincardBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public protocol.TrainingDB.TrainCardChoice getTraincard(int index) {
        if (traincardBuilder_ == null) {
          return traincard_.get(index);
        } else {
          return traincardBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder setTraincard(
          int index, protocol.TrainingDB.TrainCardChoice value) {
        if (traincardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraincardIsMutable();
          traincard_.set(index, value);
          onChanged();
        } else {
          traincardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder setTraincard(
          int index, protocol.TrainingDB.TrainCardChoice.Builder builderForValue) {
        if (traincardBuilder_ == null) {
          ensureTraincardIsMutable();
          traincard_.set(index, builderForValue.build());
          onChanged();
        } else {
          traincardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder addTraincard(protocol.TrainingDB.TrainCardChoice value) {
        if (traincardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraincardIsMutable();
          traincard_.add(value);
          onChanged();
        } else {
          traincardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder addTraincard(
          int index, protocol.TrainingDB.TrainCardChoice value) {
        if (traincardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTraincardIsMutable();
          traincard_.add(index, value);
          onChanged();
        } else {
          traincardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder addTraincard(
          protocol.TrainingDB.TrainCardChoice.Builder builderForValue) {
        if (traincardBuilder_ == null) {
          ensureTraincardIsMutable();
          traincard_.add(builderForValue.build());
          onChanged();
        } else {
          traincardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder addTraincard(
          int index, protocol.TrainingDB.TrainCardChoice.Builder builderForValue) {
        if (traincardBuilder_ == null) {
          ensureTraincardIsMutable();
          traincard_.add(index, builderForValue.build());
          onChanged();
        } else {
          traincardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder addAllTraincard(
          java.lang.Iterable<? extends protocol.TrainingDB.TrainCardChoice> values) {
        if (traincardBuilder_ == null) {
          ensureTraincardIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, traincard_);
          onChanged();
        } else {
          traincardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder clearTraincard() {
        if (traincardBuilder_ == null) {
          traincard_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00002000);
          onChanged();
        } else {
          traincardBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public Builder removeTraincard(int index) {
        if (traincardBuilder_ == null) {
          ensureTraincardIsMutable();
          traincard_.remove(index);
          onChanged();
        } else {
          traincardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public protocol.TrainingDB.TrainCardChoice.Builder getTraincardBuilder(
          int index) {
        return getTraincardFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public protocol.TrainingDB.TrainCardChoiceOrBuilder getTraincardOrBuilder(
          int index) {
        if (traincardBuilder_ == null) {
          return traincard_.get(index);  } else {
          return traincardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public java.util.List<? extends protocol.TrainingDB.TrainCardChoiceOrBuilder> 
           getTraincardOrBuilderList() {
        if (traincardBuilder_ != null) {
          return traincardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(traincard_);
        }
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public protocol.TrainingDB.TrainCardChoice.Builder addTraincardBuilder() {
        return getTraincardFieldBuilder().addBuilder(
            protocol.TrainingDB.TrainCardChoice.getDefaultInstance());
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public protocol.TrainingDB.TrainCardChoice.Builder addTraincardBuilder(
          int index) {
        return getTraincardFieldBuilder().addBuilder(
            index, protocol.TrainingDB.TrainCardChoice.getDefaultInstance());
      }
      /**
       * <pre>
       *道具触发的祝福卡数据
       * </pre>
       *
       * <code>repeated .TrainCardChoice traincard = 47;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainCardChoice.Builder> 
           getTraincardBuilderList() {
        return getTraincardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainCardChoice, protocol.TrainingDB.TrainCardChoice.Builder, protocol.TrainingDB.TrainCardChoiceOrBuilder> 
          getTraincardFieldBuilder() {
        if (traincardBuilder_ == null) {
          traincardBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.TrainingDB.TrainCardChoice, protocol.TrainingDB.TrainCardChoice.Builder, protocol.TrainingDB.TrainCardChoiceOrBuilder>(
                  traincard_,
                  ((bitField1_ & 0x00002000) == 0x00002000),
                  getParentForChildren(),
                  isClean());
          traincard_ = null;
        }
        return traincardBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> beyondPlayerData_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetBeyondPlayerData() {
        if (beyondPlayerData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BeyondPlayerDataDefaultEntryHolder.defaultEntry);
        }
        return beyondPlayerData_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableBeyondPlayerData() {
        onChanged();;
        if (beyondPlayerData_ == null) {
          beyondPlayerData_ = com.google.protobuf.MapField.newMapField(
              BeyondPlayerDataDefaultEntryHolder.defaultEntry);
        }
        if (!beyondPlayerData_.isMutable()) {
          beyondPlayerData_ = beyondPlayerData_.copy();
        }
        return beyondPlayerData_;
      }

      public int getBeyondPlayerDataCount() {
        return internalGetBeyondPlayerData().getMap().size();
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public boolean containsBeyondPlayerData(
          int key) {
        
        return internalGetBeyondPlayerData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBeyondPlayerDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getBeyondPlayerData() {
        return getBeyondPlayerDataMap();
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getBeyondPlayerDataMap() {
        return internalGetBeyondPlayerData().getMap();
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public int getBeyondPlayerDataOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBeyondPlayerData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public int getBeyondPlayerDataOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetBeyondPlayerData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBeyondPlayerData() {
        internalGetMutableBeyondPlayerData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public Builder removeBeyondPlayerData(
          int key) {
        
        internalGetMutableBeyondPlayerData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableBeyondPlayerData() {
        return internalGetMutableBeyondPlayerData().getMutableMap();
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */
      public Builder putBeyondPlayerData(
          int key,
          int value) {
        
        
        internalGetMutableBeyondPlayerData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *成绩单超越玩家数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; beyondPlayerData = 48;</code>
       */

      public Builder putAllBeyondPlayerData(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableBeyondPlayerData().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainDBMap)
    }

    // @@protoc_insertion_point(class_scope:TrainDBMap)
    private static final protocol.TrainingDB.TrainDBMap DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainDBMap();
    }

    public static protocol.TrainingDB.TrainDBMap getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainDBMap>
        PARSER = new com.google.protobuf.AbstractParser<TrainDBMap>() {
      public TrainDBMap parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainDBMap(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainDBMap> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainDBMap> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainDBMap getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainHelpPetDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainHelpPetData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 宠物id
     * </pre>
     *
     * <code>string petId = 1;</code>
     */
    java.lang.String getPetId();
    /**
     * <pre>
     * 宠物id
     * </pre>
     *
     * <code>string petId = 1;</code>
     */
    com.google.protobuf.ByteString
        getPetIdBytes();

    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>int32 pointId = 2;</code>
     */
    int getPointId();

    /**
     * <pre>
     * 宠物图鉴id
     * </pre>
     *
     * <code>int32 petCfgId = 3;</code>
     */
    int getPetCfgId();

    /**
     * <pre>
     * 宠物等级
     * </pre>
     *
     * <code>int32 petLevel = 4;</code>
     */
    int getPetLevel();

    /**
     * <pre>
     * 品质
     * </pre>
     *
     * <code>int32 petRarity = 5;</code>
     */
    int getPetRarity();

    /**
     * <pre>
     * 觉醒等级
     * </pre>
     *
     * <code>int32 petUpLevel = 6;</code>
     */
    int getPetUpLevel();
  }
  /**
   * Protobuf type {@code TrainHelpPetData}
   */
  public  static final class TrainHelpPetData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainHelpPetData)
      TrainHelpPetDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainHelpPetData.newBuilder() to construct.
    private TrainHelpPetData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainHelpPetData() {
      petId_ = "";
      pointId_ = 0;
      petCfgId_ = 0;
      petLevel_ = 0;
      petRarity_ = 0;
      petUpLevel_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainHelpPetData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              petId_ = s;
              break;
            }
            case 16: {

              pointId_ = input.readInt32();
              break;
            }
            case 24: {

              petCfgId_ = input.readInt32();
              break;
            }
            case 32: {

              petLevel_ = input.readInt32();
              break;
            }
            case 40: {

              petRarity_ = input.readInt32();
              break;
            }
            case 48: {

              petUpLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainHelpPetData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainHelpPetData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainHelpPetData.class, protocol.TrainingDB.TrainHelpPetData.Builder.class);
    }

    public static final int PETID_FIELD_NUMBER = 1;
    private volatile java.lang.Object petId_;
    /**
     * <pre>
     * 宠物id
     * </pre>
     *
     * <code>string petId = 1;</code>
     */
    public java.lang.String getPetId() {
      java.lang.Object ref = petId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        petId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 宠物id
     * </pre>
     *
     * <code>string petId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPetIdBytes() {
      java.lang.Object ref = petId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        petId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POINTID_FIELD_NUMBER = 2;
    private int pointId_;
    /**
     * <pre>
     * 节点id
     * </pre>
     *
     * <code>int32 pointId = 2;</code>
     */
    public int getPointId() {
      return pointId_;
    }

    public static final int PETCFGID_FIELD_NUMBER = 3;
    private int petCfgId_;
    /**
     * <pre>
     * 宠物图鉴id
     * </pre>
     *
     * <code>int32 petCfgId = 3;</code>
     */
    public int getPetCfgId() {
      return petCfgId_;
    }

    public static final int PETLEVEL_FIELD_NUMBER = 4;
    private int petLevel_;
    /**
     * <pre>
     * 宠物等级
     * </pre>
     *
     * <code>int32 petLevel = 4;</code>
     */
    public int getPetLevel() {
      return petLevel_;
    }

    public static final int PETRARITY_FIELD_NUMBER = 5;
    private int petRarity_;
    /**
     * <pre>
     * 品质
     * </pre>
     *
     * <code>int32 petRarity = 5;</code>
     */
    public int getPetRarity() {
      return petRarity_;
    }

    public static final int PETUPLEVEL_FIELD_NUMBER = 6;
    private int petUpLevel_;
    /**
     * <pre>
     * 觉醒等级
     * </pre>
     *
     * <code>int32 petUpLevel = 6;</code>
     */
    public int getPetUpLevel() {
      return petUpLevel_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPetIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, petId_);
      }
      if (pointId_ != 0) {
        output.writeInt32(2, pointId_);
      }
      if (petCfgId_ != 0) {
        output.writeInt32(3, petCfgId_);
      }
      if (petLevel_ != 0) {
        output.writeInt32(4, petLevel_);
      }
      if (petRarity_ != 0) {
        output.writeInt32(5, petRarity_);
      }
      if (petUpLevel_ != 0) {
        output.writeInt32(6, petUpLevel_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPetIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, petId_);
      }
      if (pointId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pointId_);
      }
      if (petCfgId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, petCfgId_);
      }
      if (petLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, petLevel_);
      }
      if (petRarity_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, petRarity_);
      }
      if (petUpLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, petUpLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainHelpPetData)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainHelpPetData other = (protocol.TrainingDB.TrainHelpPetData) obj;

      boolean result = true;
      result = result && getPetId()
          .equals(other.getPetId());
      result = result && (getPointId()
          == other.getPointId());
      result = result && (getPetCfgId()
          == other.getPetCfgId());
      result = result && (getPetLevel()
          == other.getPetLevel());
      result = result && (getPetRarity()
          == other.getPetRarity());
      result = result && (getPetUpLevel()
          == other.getPetUpLevel());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PETID_FIELD_NUMBER;
      hash = (53 * hash) + getPetId().hashCode();
      hash = (37 * hash) + POINTID_FIELD_NUMBER;
      hash = (53 * hash) + getPointId();
      hash = (37 * hash) + PETCFGID_FIELD_NUMBER;
      hash = (53 * hash) + getPetCfgId();
      hash = (37 * hash) + PETLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getPetLevel();
      hash = (37 * hash) + PETRARITY_FIELD_NUMBER;
      hash = (53 * hash) + getPetRarity();
      hash = (37 * hash) + PETUPLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getPetUpLevel();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainHelpPetData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainHelpPetData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainHelpPetData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainHelpPetData)
        protocol.TrainingDB.TrainHelpPetDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainHelpPetData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainHelpPetData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainHelpPetData.class, protocol.TrainingDB.TrainHelpPetData.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainHelpPetData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        petId_ = "";

        pointId_ = 0;

        petCfgId_ = 0;

        petLevel_ = 0;

        petRarity_ = 0;

        petUpLevel_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainHelpPetData_descriptor;
      }

      public protocol.TrainingDB.TrainHelpPetData getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainHelpPetData.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainHelpPetData build() {
        protocol.TrainingDB.TrainHelpPetData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainHelpPetData buildPartial() {
        protocol.TrainingDB.TrainHelpPetData result = new protocol.TrainingDB.TrainHelpPetData(this);
        result.petId_ = petId_;
        result.pointId_ = pointId_;
        result.petCfgId_ = petCfgId_;
        result.petLevel_ = petLevel_;
        result.petRarity_ = petRarity_;
        result.petUpLevel_ = petUpLevel_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainHelpPetData) {
          return mergeFrom((protocol.TrainingDB.TrainHelpPetData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainHelpPetData other) {
        if (other == protocol.TrainingDB.TrainHelpPetData.getDefaultInstance()) return this;
        if (!other.getPetId().isEmpty()) {
          petId_ = other.petId_;
          onChanged();
        }
        if (other.getPointId() != 0) {
          setPointId(other.getPointId());
        }
        if (other.getPetCfgId() != 0) {
          setPetCfgId(other.getPetCfgId());
        }
        if (other.getPetLevel() != 0) {
          setPetLevel(other.getPetLevel());
        }
        if (other.getPetRarity() != 0) {
          setPetRarity(other.getPetRarity());
        }
        if (other.getPetUpLevel() != 0) {
          setPetUpLevel(other.getPetUpLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainHelpPetData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainHelpPetData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object petId_ = "";
      /**
       * <pre>
       * 宠物id
       * </pre>
       *
       * <code>string petId = 1;</code>
       */
      public java.lang.String getPetId() {
        java.lang.Object ref = petId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          petId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 宠物id
       * </pre>
       *
       * <code>string petId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPetIdBytes() {
        java.lang.Object ref = petId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          petId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 宠物id
       * </pre>
       *
       * <code>string petId = 1;</code>
       */
      public Builder setPetId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        petId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 宠物id
       * </pre>
       *
       * <code>string petId = 1;</code>
       */
      public Builder clearPetId() {
        
        petId_ = getDefaultInstance().getPetId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 宠物id
       * </pre>
       *
       * <code>string petId = 1;</code>
       */
      public Builder setPetIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        petId_ = value;
        onChanged();
        return this;
      }

      private int pointId_ ;
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 pointId = 2;</code>
       */
      public int getPointId() {
        return pointId_;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 pointId = 2;</code>
       */
      public Builder setPointId(int value) {
        
        pointId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 节点id
       * </pre>
       *
       * <code>int32 pointId = 2;</code>
       */
      public Builder clearPointId() {
        
        pointId_ = 0;
        onChanged();
        return this;
      }

      private int petCfgId_ ;
      /**
       * <pre>
       * 宠物图鉴id
       * </pre>
       *
       * <code>int32 petCfgId = 3;</code>
       */
      public int getPetCfgId() {
        return petCfgId_;
      }
      /**
       * <pre>
       * 宠物图鉴id
       * </pre>
       *
       * <code>int32 petCfgId = 3;</code>
       */
      public Builder setPetCfgId(int value) {
        
        petCfgId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 宠物图鉴id
       * </pre>
       *
       * <code>int32 petCfgId = 3;</code>
       */
      public Builder clearPetCfgId() {
        
        petCfgId_ = 0;
        onChanged();
        return this;
      }

      private int petLevel_ ;
      /**
       * <pre>
       * 宠物等级
       * </pre>
       *
       * <code>int32 petLevel = 4;</code>
       */
      public int getPetLevel() {
        return petLevel_;
      }
      /**
       * <pre>
       * 宠物等级
       * </pre>
       *
       * <code>int32 petLevel = 4;</code>
       */
      public Builder setPetLevel(int value) {
        
        petLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 宠物等级
       * </pre>
       *
       * <code>int32 petLevel = 4;</code>
       */
      public Builder clearPetLevel() {
        
        petLevel_ = 0;
        onChanged();
        return this;
      }

      private int petRarity_ ;
      /**
       * <pre>
       * 品质
       * </pre>
       *
       * <code>int32 petRarity = 5;</code>
       */
      public int getPetRarity() {
        return petRarity_;
      }
      /**
       * <pre>
       * 品质
       * </pre>
       *
       * <code>int32 petRarity = 5;</code>
       */
      public Builder setPetRarity(int value) {
        
        petRarity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 品质
       * </pre>
       *
       * <code>int32 petRarity = 5;</code>
       */
      public Builder clearPetRarity() {
        
        petRarity_ = 0;
        onChanged();
        return this;
      }

      private int petUpLevel_ ;
      /**
       * <pre>
       * 觉醒等级
       * </pre>
       *
       * <code>int32 petUpLevel = 6;</code>
       */
      public int getPetUpLevel() {
        return petUpLevel_;
      }
      /**
       * <pre>
       * 觉醒等级
       * </pre>
       *
       * <code>int32 petUpLevel = 6;</code>
       */
      public Builder setPetUpLevel(int value) {
        
        petUpLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 觉醒等级
       * </pre>
       *
       * <code>int32 petUpLevel = 6;</code>
       */
      public Builder clearPetUpLevel() {
        
        petUpLevel_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainHelpPetData)
    }

    // @@protoc_insertion_point(class_scope:TrainHelpPetData)
    private static final protocol.TrainingDB.TrainHelpPetData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainHelpPetData();
    }

    public static protocol.TrainingDB.TrainHelpPetData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainHelpPetData>
        PARSER = new com.google.protobuf.AbstractParser<TrainHelpPetData>() {
      public TrainHelpPetData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainHelpPetData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainHelpPetData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainHelpPetData> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainHelpPetData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainBloodMonsterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainBloodMonster)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */
    int getHpRateCount();
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */
    boolean containsHpRate(
        int key);
    /**
     * Use {@link #getHpRateMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getHpRate();
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getHpRateMap();
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    int getHpRateOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    int getHpRateOrThrow(
        int key);

    /**
     * <code>int32 max = 2;</code>
     */
    int getMax();

    /**
     * <pre>
     *已挑战次数
     * </pre>
     *
     * <code>int32 times = 3;</code>
     */
    int getTimes();
  }
  /**
   * Protobuf type {@code TrainBloodMonster}
   */
  public  static final class TrainBloodMonster extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainBloodMonster)
      TrainBloodMonsterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainBloodMonster.newBuilder() to construct.
    private TrainBloodMonster(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainBloodMonster() {
      max_ = 0;
      times_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainBloodMonster(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                hpRate_ = com.google.protobuf.MapField.newMapField(
                    HpRateDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              hpRate__ = input.readMessage(
                  HpRateDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              hpRate_.getMutableMap().put(
                  hpRate__.getKey(), hpRate__.getValue());
              break;
            }
            case 16: {

              max_ = input.readInt32();
              break;
            }
            case 24: {

              times_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainBloodMonster_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetHpRate();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainBloodMonster_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainBloodMonster.class, protocol.TrainingDB.TrainBloodMonster.Builder.class);
    }

    private int bitField0_;
    public static final int HPRATE_FIELD_NUMBER = 1;
    private static final class HpRateDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainBloodMonster_HpRateEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> hpRate_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetHpRate() {
      if (hpRate_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HpRateDefaultEntryHolder.defaultEntry);
      }
      return hpRate_;
    }

    public int getHpRateCount() {
      return internalGetHpRate().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    public boolean containsHpRate(
        int key) {
      
      return internalGetHpRate().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHpRateMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getHpRate() {
      return getHpRateMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getHpRateMap() {
      return internalGetHpRate().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    public int getHpRateOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetHpRate().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
     */

    public int getHpRateOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetHpRate().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int MAX_FIELD_NUMBER = 2;
    private int max_;
    /**
     * <code>int32 max = 2;</code>
     */
    public int getMax() {
      return max_;
    }

    public static final int TIMES_FIELD_NUMBER = 3;
    private int times_;
    /**
     * <pre>
     *已挑战次数
     * </pre>
     *
     * <code>int32 times = 3;</code>
     */
    public int getTimes() {
      return times_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetHpRate(),
          HpRateDefaultEntryHolder.defaultEntry,
          1);
      if (max_ != 0) {
        output.writeInt32(2, max_);
      }
      if (times_ != 0) {
        output.writeInt32(3, times_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetHpRate().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        hpRate__ = HpRateDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, hpRate__);
      }
      if (max_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, max_);
      }
      if (times_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, times_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainBloodMonster)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainBloodMonster other = (protocol.TrainingDB.TrainBloodMonster) obj;

      boolean result = true;
      result = result && internalGetHpRate().equals(
          other.internalGetHpRate());
      result = result && (getMax()
          == other.getMax());
      result = result && (getTimes()
          == other.getTimes());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetHpRate().getMap().isEmpty()) {
        hash = (37 * hash) + HPRATE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetHpRate().hashCode();
      }
      hash = (37 * hash) + MAX_FIELD_NUMBER;
      hash = (53 * hash) + getMax();
      hash = (37 * hash) + TIMES_FIELD_NUMBER;
      hash = (53 * hash) + getTimes();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainBloodMonster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainBloodMonster prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainBloodMonster}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainBloodMonster)
        protocol.TrainingDB.TrainBloodMonsterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainBloodMonster_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetHpRate();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableHpRate();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainBloodMonster_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainBloodMonster.class, protocol.TrainingDB.TrainBloodMonster.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainBloodMonster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableHpRate().clear();
        max_ = 0;

        times_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainBloodMonster_descriptor;
      }

      public protocol.TrainingDB.TrainBloodMonster getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainBloodMonster.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainBloodMonster build() {
        protocol.TrainingDB.TrainBloodMonster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainBloodMonster buildPartial() {
        protocol.TrainingDB.TrainBloodMonster result = new protocol.TrainingDB.TrainBloodMonster(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.hpRate_ = internalGetHpRate();
        result.hpRate_.makeImmutable();
        result.max_ = max_;
        result.times_ = times_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainBloodMonster) {
          return mergeFrom((protocol.TrainingDB.TrainBloodMonster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainBloodMonster other) {
        if (other == protocol.TrainingDB.TrainBloodMonster.getDefaultInstance()) return this;
        internalGetMutableHpRate().mergeFrom(
            other.internalGetHpRate());
        if (other.getMax() != 0) {
          setMax(other.getMax());
        }
        if (other.getTimes() != 0) {
          setTimes(other.getTimes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainBloodMonster parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainBloodMonster) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> hpRate_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetHpRate() {
        if (hpRate_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HpRateDefaultEntryHolder.defaultEntry);
        }
        return hpRate_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableHpRate() {
        onChanged();;
        if (hpRate_ == null) {
          hpRate_ = com.google.protobuf.MapField.newMapField(
              HpRateDefaultEntryHolder.defaultEntry);
        }
        if (!hpRate_.isMutable()) {
          hpRate_ = hpRate_.copy();
        }
        return hpRate_;
      }

      public int getHpRateCount() {
        return internalGetHpRate().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public boolean containsHpRate(
          int key) {
        
        return internalGetHpRate().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHpRateMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getHpRate() {
        return getHpRateMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getHpRateMap() {
        return internalGetHpRate().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public int getHpRateOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetHpRate().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public int getHpRateOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetHpRate().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearHpRate() {
        internalGetMutableHpRate().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public Builder removeHpRate(
          int key) {
        
        internalGetMutableHpRate().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableHpRate() {
        return internalGetMutableHpRate().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */
      public Builder putHpRate(
          int key,
          int value) {
        
        
        internalGetMutableHpRate().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; hpRate = 1;</code>
       */

      public Builder putAllHpRate(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableHpRate().getMutableMap()
            .putAll(values);
        return this;
      }

      private int max_ ;
      /**
       * <code>int32 max = 2;</code>
       */
      public int getMax() {
        return max_;
      }
      /**
       * <code>int32 max = 2;</code>
       */
      public Builder setMax(int value) {
        
        max_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max = 2;</code>
       */
      public Builder clearMax() {
        
        max_ = 0;
        onChanged();
        return this;
      }

      private int times_ ;
      /**
       * <pre>
       *已挑战次数
       * </pre>
       *
       * <code>int32 times = 3;</code>
       */
      public int getTimes() {
        return times_;
      }
      /**
       * <pre>
       *已挑战次数
       * </pre>
       *
       * <code>int32 times = 3;</code>
       */
      public Builder setTimes(int value) {
        
        times_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已挑战次数
       * </pre>
       *
       * <code>int32 times = 3;</code>
       */
      public Builder clearTimes() {
        
        times_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainBloodMonster)
    }

    // @@protoc_insertion_point(class_scope:TrainBloodMonster)
    private static final protocol.TrainingDB.TrainBloodMonster DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainBloodMonster();
    }

    public static protocol.TrainingDB.TrainBloodMonster getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainBloodMonster>
        PARSER = new com.google.protobuf.AbstractParser<TrainBloodMonster>() {
      public TrainBloodMonster parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainBloodMonster(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainBloodMonster> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainBloodMonster> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainBloodMonster getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainDBDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainDBData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 currMap = 1;</code>
     */
    int getCurrMap();

    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    java.util.List<protocol.TrainingDB.TrainDBMap> 
        getMapsList();
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    protocol.TrainingDB.TrainDBMap getMaps(int index);
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    int getMapsCount();
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    java.util.List<? extends protocol.TrainingDB.TrainDBMapOrBuilder> 
        getMapsOrBuilderList();
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    protocol.TrainingDB.TrainDBMapOrBuilder getMapsOrBuilder(
        int index);

    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    java.util.List<java.lang.Integer> getNoticeMapList();
    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    int getNoticeMapCount();
    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    int getNoticeMap(int index);

    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */
    int getEndMapCount();
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */
    boolean containsEndMap(
        int key);
    /**
     * Use {@link #getEndMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getEndMap();
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getEndMapMap();
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    long getEndMapOrDefault(
        int key,
        long defaultValue);
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    long getEndMapOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code TrainDBData}
   */
  public  static final class TrainDBData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainDBData)
      TrainDBDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainDBData.newBuilder() to construct.
    private TrainDBData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainDBData() {
      currMap_ = 0;
      maps_ = java.util.Collections.emptyList();
      noticeMap_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainDBData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              currMap_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                maps_ = new java.util.ArrayList<protocol.TrainingDB.TrainDBMap>();
                mutable_bitField0_ |= 0x00000002;
              }
              maps_.add(
                  input.readMessage(protocol.TrainingDB.TrainDBMap.parser(), extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                noticeMap_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              noticeMap_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                noticeMap_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                noticeMap_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                endMap_ = com.google.protobuf.MapField.newMapField(
                    EndMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              endMap__ = input.readMessage(
                  EndMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              endMap_.getMutableMap().put(
                  endMap__.getKey(), endMap__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          maps_ = java.util.Collections.unmodifiableList(maps_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          noticeMap_ = java.util.Collections.unmodifiableList(noticeMap_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainDBData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetEndMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainDBData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainDBData.class, protocol.TrainingDB.TrainDBData.Builder.class);
    }

    private int bitField0_;
    public static final int CURRMAP_FIELD_NUMBER = 1;
    private int currMap_;
    /**
     * <code>int32 currMap = 1;</code>
     */
    public int getCurrMap() {
      return currMap_;
    }

    public static final int MAPS_FIELD_NUMBER = 2;
    private java.util.List<protocol.TrainingDB.TrainDBMap> maps_;
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    public java.util.List<protocol.TrainingDB.TrainDBMap> getMapsList() {
      return maps_;
    }
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    public java.util.List<? extends protocol.TrainingDB.TrainDBMapOrBuilder> 
        getMapsOrBuilderList() {
      return maps_;
    }
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    public int getMapsCount() {
      return maps_.size();
    }
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    public protocol.TrainingDB.TrainDBMap getMaps(int index) {
      return maps_.get(index);
    }
    /**
     * <code>repeated .TrainDBMap maps = 2;</code>
     */
    public protocol.TrainingDB.TrainDBMapOrBuilder getMapsOrBuilder(
        int index) {
      return maps_.get(index);
    }

    public static final int NOTICEMAP_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> noticeMap_;
    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoticeMapList() {
      return noticeMap_;
    }
    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    public int getNoticeMapCount() {
      return noticeMap_.size();
    }
    /**
     * <pre>
     *需要通知成绩单的地图
     * </pre>
     *
     * <code>repeated int32 noticeMap = 3;</code>
     */
    public int getNoticeMap(int index) {
      return noticeMap_.get(index);
    }
    private int noticeMapMemoizedSerializedSize = -1;

    public static final int ENDMAP_FIELD_NUMBER = 4;
    private static final class EndMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainDBData_EndMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> endMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetEndMap() {
      if (endMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EndMapDefaultEntryHolder.defaultEntry);
      }
      return endMap_;
    }

    public int getEndMapCount() {
      return internalGetEndMap().getMap().size();
    }
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    public boolean containsEndMap(
        int key) {
      
      return internalGetEndMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEndMapMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getEndMap() {
      return getEndMapMap();
    }
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getEndMapMap() {
      return internalGetEndMap().getMap();
    }
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    public long getEndMapOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetEndMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int64&gt; endMap = 4;</code>
     */

    public long getEndMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetEndMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (currMap_ != 0) {
        output.writeInt32(1, currMap_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        output.writeMessage(2, maps_.get(i));
      }
      if (getNoticeMapList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(noticeMapMemoizedSerializedSize);
      }
      for (int i = 0; i < noticeMap_.size(); i++) {
        output.writeInt32NoTag(noticeMap_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEndMap(),
          EndMapDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (currMap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, currMap_);
      }
      for (int i = 0; i < maps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, maps_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < noticeMap_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(noticeMap_.get(i));
        }
        size += dataSize;
        if (!getNoticeMapList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        noticeMapMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetEndMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        endMap__ = EndMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, endMap__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainDBData)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainDBData other = (protocol.TrainingDB.TrainDBData) obj;

      boolean result = true;
      result = result && (getCurrMap()
          == other.getCurrMap());
      result = result && getMapsList()
          .equals(other.getMapsList());
      result = result && getNoticeMapList()
          .equals(other.getNoticeMapList());
      result = result && internalGetEndMap().equals(
          other.internalGetEndMap());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CURRMAP_FIELD_NUMBER;
      hash = (53 * hash) + getCurrMap();
      if (getMapsCount() > 0) {
        hash = (37 * hash) + MAPS_FIELD_NUMBER;
        hash = (53 * hash) + getMapsList().hashCode();
      }
      if (getNoticeMapCount() > 0) {
        hash = (37 * hash) + NOTICEMAP_FIELD_NUMBER;
        hash = (53 * hash) + getNoticeMapList().hashCode();
      }
      if (!internalGetEndMap().getMap().isEmpty()) {
        hash = (37 * hash) + ENDMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEndMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainDBData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainDBData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainDBData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainDBData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainDBData)
        protocol.TrainingDB.TrainDBDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainDBData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetEndMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableEndMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainDBData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainDBData.class, protocol.TrainingDB.TrainDBData.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainDBData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getMapsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        currMap_ = 0;

        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mapsBuilder_.clear();
        }
        noticeMap_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableEndMap().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainDBData_descriptor;
      }

      public protocol.TrainingDB.TrainDBData getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainDBData.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainDBData build() {
        protocol.TrainingDB.TrainDBData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainDBData buildPartial() {
        protocol.TrainingDB.TrainDBData result = new protocol.TrainingDB.TrainDBData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.currMap_ = currMap_;
        if (mapsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            maps_ = java.util.Collections.unmodifiableList(maps_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.maps_ = maps_;
        } else {
          result.maps_ = mapsBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          noticeMap_ = java.util.Collections.unmodifiableList(noticeMap_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.noticeMap_ = noticeMap_;
        result.endMap_ = internalGetEndMap();
        result.endMap_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainDBData) {
          return mergeFrom((protocol.TrainingDB.TrainDBData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainDBData other) {
        if (other == protocol.TrainingDB.TrainDBData.getDefaultInstance()) return this;
        if (other.getCurrMap() != 0) {
          setCurrMap(other.getCurrMap());
        }
        if (mapsBuilder_ == null) {
          if (!other.maps_.isEmpty()) {
            if (maps_.isEmpty()) {
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMapsIsMutable();
              maps_.addAll(other.maps_);
            }
            onChanged();
          }
        } else {
          if (!other.maps_.isEmpty()) {
            if (mapsBuilder_.isEmpty()) {
              mapsBuilder_.dispose();
              mapsBuilder_ = null;
              maps_ = other.maps_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mapsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMapsFieldBuilder() : null;
            } else {
              mapsBuilder_.addAllMessages(other.maps_);
            }
          }
        }
        if (!other.noticeMap_.isEmpty()) {
          if (noticeMap_.isEmpty()) {
            noticeMap_ = other.noticeMap_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNoticeMapIsMutable();
            noticeMap_.addAll(other.noticeMap_);
          }
          onChanged();
        }
        internalGetMutableEndMap().mergeFrom(
            other.internalGetEndMap());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainDBData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainDBData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int currMap_ ;
      /**
       * <code>int32 currMap = 1;</code>
       */
      public int getCurrMap() {
        return currMap_;
      }
      /**
       * <code>int32 currMap = 1;</code>
       */
      public Builder setCurrMap(int value) {
        
        currMap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 currMap = 1;</code>
       */
      public Builder clearCurrMap() {
        
        currMap_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol.TrainingDB.TrainDBMap> maps_ =
        java.util.Collections.emptyList();
      private void ensureMapsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          maps_ = new java.util.ArrayList<protocol.TrainingDB.TrainDBMap>(maps_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainDBMap, protocol.TrainingDB.TrainDBMap.Builder, protocol.TrainingDB.TrainDBMapOrBuilder> mapsBuilder_;

      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainDBMap> getMapsList() {
        if (mapsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(maps_);
        } else {
          return mapsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public int getMapsCount() {
        if (mapsBuilder_ == null) {
          return maps_.size();
        } else {
          return mapsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public protocol.TrainingDB.TrainDBMap getMaps(int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);
        } else {
          return mapsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder setMaps(
          int index, protocol.TrainingDB.TrainDBMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.set(index, value);
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder setMaps(
          int index, protocol.TrainingDB.TrainDBMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.set(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder addMaps(protocol.TrainingDB.TrainDBMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder addMaps(
          int index, protocol.TrainingDB.TrainDBMap value) {
        if (mapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMapsIsMutable();
          maps_.add(index, value);
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder addMaps(
          protocol.TrainingDB.TrainDBMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder addMaps(
          int index, protocol.TrainingDB.TrainDBMap.Builder builderForValue) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.add(index, builderForValue.build());
          onChanged();
        } else {
          mapsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder addAllMaps(
          java.lang.Iterable<? extends protocol.TrainingDB.TrainDBMap> values) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, maps_);
          onChanged();
        } else {
          mapsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder clearMaps() {
        if (mapsBuilder_ == null) {
          maps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mapsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public Builder removeMaps(int index) {
        if (mapsBuilder_ == null) {
          ensureMapsIsMutable();
          maps_.remove(index);
          onChanged();
        } else {
          mapsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public protocol.TrainingDB.TrainDBMap.Builder getMapsBuilder(
          int index) {
        return getMapsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public protocol.TrainingDB.TrainDBMapOrBuilder getMapsOrBuilder(
          int index) {
        if (mapsBuilder_ == null) {
          return maps_.get(index);  } else {
          return mapsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public java.util.List<? extends protocol.TrainingDB.TrainDBMapOrBuilder> 
           getMapsOrBuilderList() {
        if (mapsBuilder_ != null) {
          return mapsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(maps_);
        }
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public protocol.TrainingDB.TrainDBMap.Builder addMapsBuilder() {
        return getMapsFieldBuilder().addBuilder(
            protocol.TrainingDB.TrainDBMap.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public protocol.TrainingDB.TrainDBMap.Builder addMapsBuilder(
          int index) {
        return getMapsFieldBuilder().addBuilder(
            index, protocol.TrainingDB.TrainDBMap.getDefaultInstance());
      }
      /**
       * <code>repeated .TrainDBMap maps = 2;</code>
       */
      public java.util.List<protocol.TrainingDB.TrainDBMap.Builder> 
           getMapsBuilderList() {
        return getMapsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.TrainingDB.TrainDBMap, protocol.TrainingDB.TrainDBMap.Builder, protocol.TrainingDB.TrainDBMapOrBuilder> 
          getMapsFieldBuilder() {
        if (mapsBuilder_ == null) {
          mapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.TrainingDB.TrainDBMap, protocol.TrainingDB.TrainDBMap.Builder, protocol.TrainingDB.TrainDBMapOrBuilder>(
                  maps_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          maps_ = null;
        }
        return mapsBuilder_;
      }

      private java.util.List<java.lang.Integer> noticeMap_ = java.util.Collections.emptyList();
      private void ensureNoticeMapIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          noticeMap_ = new java.util.ArrayList<java.lang.Integer>(noticeMap_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getNoticeMapList() {
        return java.util.Collections.unmodifiableList(noticeMap_);
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public int getNoticeMapCount() {
        return noticeMap_.size();
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public int getNoticeMap(int index) {
        return noticeMap_.get(index);
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public Builder setNoticeMap(
          int index, int value) {
        ensureNoticeMapIsMutable();
        noticeMap_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public Builder addNoticeMap(int value) {
        ensureNoticeMapIsMutable();
        noticeMap_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public Builder addAllNoticeMap(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNoticeMapIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, noticeMap_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *需要通知成绩单的地图
       * </pre>
       *
       * <code>repeated int32 noticeMap = 3;</code>
       */
      public Builder clearNoticeMap() {
        noticeMap_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> endMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetEndMap() {
        if (endMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EndMapDefaultEntryHolder.defaultEntry);
        }
        return endMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableEndMap() {
        onChanged();;
        if (endMap_ == null) {
          endMap_ = com.google.protobuf.MapField.newMapField(
              EndMapDefaultEntryHolder.defaultEntry);
        }
        if (!endMap_.isMutable()) {
          endMap_ = endMap_.copy();
        }
        return endMap_;
      }

      public int getEndMapCount() {
        return internalGetEndMap().getMap().size();
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public boolean containsEndMap(
          int key) {
        
        return internalGetEndMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEndMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getEndMap() {
        return getEndMapMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getEndMapMap() {
        return internalGetEndMap().getMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public long getEndMapOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetEndMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public long getEndMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetEndMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEndMap() {
        internalGetMutableEndMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public Builder removeEndMap(
          int key) {
        
        internalGetMutableEndMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableEndMap() {
        return internalGetMutableEndMap().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */
      public Builder putEndMap(
          int key,
          long value) {
        
        
        internalGetMutableEndMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int64&gt; endMap = 4;</code>
       */

      public Builder putAllEndMap(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableEndMap().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainDBData)
    }

    // @@protoc_insertion_point(class_scope:TrainDBData)
    private static final protocol.TrainingDB.TrainDBData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainDBData();
    }

    public static protocol.TrainingDB.TrainDBData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainDBData>
        PARSER = new com.google.protobuf.AbstractParser<TrainDBData>() {
      public TrainDBData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainDBData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainDBData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainDBData> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainDBData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainLuckDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainLuckData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *祝福卡id
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <pre>
     *参数1
     * </pre>
     *
     * <code>int32 param1 = 2;</code>
     */
    int getParam1();

    /**
     * <code>int32 type = 3;</code>
     */
    int getType();

    /**
     * <code>int32 level = 4;</code>
     */
    int getLevel();

    /**
     * <pre>
     *buff标识
     * </pre>
     *
     * <code>int32 flag = 5;</code>
     */
    int getFlag();
  }
  /**
   * Protobuf type {@code TrainLuckData}
   */
  public  static final class TrainLuckData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainLuckData)
      TrainLuckDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainLuckData.newBuilder() to construct.
    private TrainLuckData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainLuckData() {
      id_ = 0;
      param1_ = 0;
      type_ = 0;
      level_ = 0;
      flag_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainLuckData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              param1_ = input.readInt32();
              break;
            }
            case 24: {

              type_ = input.readInt32();
              break;
            }
            case 32: {

              level_ = input.readInt32();
              break;
            }
            case 40: {

              flag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainLuckData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainLuckData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainLuckData.class, protocol.TrainingDB.TrainLuckData.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <pre>
     *祝福卡id
     * </pre>
     *
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int PARAM1_FIELD_NUMBER = 2;
    private int param1_;
    /**
     * <pre>
     *参数1
     * </pre>
     *
     * <code>int32 param1 = 2;</code>
     */
    public int getParam1() {
      return param1_;
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>int32 type = 3;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int LEVEL_FIELD_NUMBER = 4;
    private int level_;
    /**
     * <code>int32 level = 4;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int FLAG_FIELD_NUMBER = 5;
    private int flag_;
    /**
     * <pre>
     *buff标识
     * </pre>
     *
     * <code>int32 flag = 5;</code>
     */
    public int getFlag() {
      return flag_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (param1_ != 0) {
        output.writeInt32(2, param1_);
      }
      if (type_ != 0) {
        output.writeInt32(3, type_);
      }
      if (level_ != 0) {
        output.writeInt32(4, level_);
      }
      if (flag_ != 0) {
        output.writeInt32(5, flag_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (param1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, param1_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, type_);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, level_);
      }
      if (flag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, flag_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainLuckData)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainLuckData other = (protocol.TrainingDB.TrainLuckData) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getParam1()
          == other.getParam1());
      result = result && (getType()
          == other.getType());
      result = result && (getLevel()
          == other.getLevel());
      result = result && (getFlag()
          == other.getFlag());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + PARAM1_FIELD_NUMBER;
      hash = (53 * hash) + getParam1();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + FLAG_FIELD_NUMBER;
      hash = (53 * hash) + getFlag();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainLuckData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainLuckData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainLuckData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainLuckData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainLuckData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainLuckData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainLuckData)
        protocol.TrainingDB.TrainLuckDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainLuckData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainLuckData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainLuckData.class, protocol.TrainingDB.TrainLuckData.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainLuckData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        id_ = 0;

        param1_ = 0;

        type_ = 0;

        level_ = 0;

        flag_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainLuckData_descriptor;
      }

      public protocol.TrainingDB.TrainLuckData getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainLuckData.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainLuckData build() {
        protocol.TrainingDB.TrainLuckData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainLuckData buildPartial() {
        protocol.TrainingDB.TrainLuckData result = new protocol.TrainingDB.TrainLuckData(this);
        result.id_ = id_;
        result.param1_ = param1_;
        result.type_ = type_;
        result.level_ = level_;
        result.flag_ = flag_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainLuckData) {
          return mergeFrom((protocol.TrainingDB.TrainLuckData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainLuckData other) {
        if (other == protocol.TrainingDB.TrainLuckData.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getParam1() != 0) {
          setParam1(other.getParam1());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getFlag() != 0) {
          setFlag(other.getFlag());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainLuckData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainLuckData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <pre>
       *祝福卡id
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       *祝福卡id
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *祝福卡id
       * </pre>
       *
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int param1_ ;
      /**
       * <pre>
       *参数1
       * </pre>
       *
       * <code>int32 param1 = 2;</code>
       */
      public int getParam1() {
        return param1_;
      }
      /**
       * <pre>
       *参数1
       * </pre>
       *
       * <code>int32 param1 = 2;</code>
       */
      public Builder setParam1(int value) {
        
        param1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *参数1
       * </pre>
       *
       * <code>int32 param1 = 2;</code>
       */
      public Builder clearParam1() {
        
        param1_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>int32 type = 3;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 3;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 3;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>int32 level = 4;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <code>int32 level = 4;</code>
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 level = 4;</code>
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int flag_ ;
      /**
       * <pre>
       *buff标识
       * </pre>
       *
       * <code>int32 flag = 5;</code>
       */
      public int getFlag() {
        return flag_;
      }
      /**
       * <pre>
       *buff标识
       * </pre>
       *
       * <code>int32 flag = 5;</code>
       */
      public Builder setFlag(int value) {
        
        flag_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *buff标识
       * </pre>
       *
       * <code>int32 flag = 5;</code>
       */
      public Builder clearFlag() {
        
        flag_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainLuckData)
    }

    // @@protoc_insertion_point(class_scope:TrainLuckData)
    private static final protocol.TrainingDB.TrainLuckData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainLuckData();
    }

    public static protocol.TrainingDB.TrainLuckData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainLuckData>
        PARSER = new com.google.protobuf.AbstractParser<TrainLuckData>() {
      public TrainLuckData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainLuckData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainLuckData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainLuckData> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainLuckData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TraingEventDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TraingEventData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */
    int getLoseCountCount();
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */
    boolean containsLoseCount(
        int key);
    /**
     * Use {@link #getLoseCountMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLoseCount();
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLoseCountMap();
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    int getLoseCountOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    int getLoseCountOrThrow(
        int key);

    /**
     * <pre>
     *当前层数阶段
     * </pre>
     *
     * <code>int32 level = 2;</code>
     */
    int getLevel();

    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    java.util.List<java.lang.Integer> getEventIdList();
    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    int getEventIdCount();
    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    int getEventId(int index);

    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */
    int getCpPointCount();
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */
    boolean containsCpPoint(
        int key);
    /**
     * Use {@link #getCpPointMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCpPoint();
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCpPointMap();
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    int getCpPointOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    int getCpPointOrThrow(
        int key);

    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    java.util.List<java.lang.Integer> getCpRecordList();
    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    int getCpRecordCount();
    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    int getCpRecord(int index);

    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    java.util.List<java.lang.Integer> getRemoveIdsList();
    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    int getRemoveIdsCount();
    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    int getRemoveIds(int index);

    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    java.util.List<java.lang.Integer> getStrongPointList();
    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    int getStrongPointCount();
    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    int getStrongPoint(int index);

    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */
    int getCardGradeCount();
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */
    boolean containsCardGrade(
        int key);
    /**
     * Use {@link #getCardGradeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardGrade();
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardGradeMap();
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    int getCardGradeOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    int getCardGradeOrThrow(
        int key);

    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    java.util.List<java.lang.Integer> getRewardEventsList();
    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    int getRewardEventsCount();
    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    int getRewardEvents(int index);

    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */
    int getEventPointCount();
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */
    boolean containsEventPoint(
        int key);
    /**
     * Use {@link #getEventPointMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEventPoint();
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEventPointMap();
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    int getEventPointOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    int getEventPointOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code TraingEventData}
   */
  public  static final class TraingEventData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TraingEventData)
      TraingEventDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TraingEventData.newBuilder() to construct.
    private TraingEventData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TraingEventData() {
      level_ = 0;
      eventId_ = java.util.Collections.emptyList();
      cpRecord_ = java.util.Collections.emptyList();
      removeIds_ = java.util.Collections.emptyList();
      strongPoint_ = java.util.Collections.emptyList();
      rewardEvents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TraingEventData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                loseCount_ = com.google.protobuf.MapField.newMapField(
                    LoseCountDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              loseCount__ = input.readMessage(
                  LoseCountDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              loseCount_.getMutableMap().put(
                  loseCount__.getKey(), loseCount__.getValue());
              break;
            }
            case 16: {

              level_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                eventId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              eventId_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                eventId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                eventId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cpPoint_ = com.google.protobuf.MapField.newMapField(
                    CpPointDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              cpPoint__ = input.readMessage(
                  CpPointDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              cpPoint_.getMutableMap().put(
                  cpPoint__.getKey(), cpPoint__.getValue());
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cpRecord_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              cpRecord_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                cpRecord_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                cpRecord_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                removeIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              removeIds_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                removeIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                removeIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                strongPoint_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              strongPoint_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                strongPoint_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                strongPoint_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cardGrade_ = com.google.protobuf.MapField.newMapField(
                    CardGradeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000080;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              cardGrade__ = input.readMessage(
                  CardGradeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              cardGrade_.getMutableMap().put(
                  cardGrade__.getKey(), cardGrade__.getValue());
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                rewardEvents_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              rewardEvents_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                rewardEvents_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                rewardEvents_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                eventPoint_ = com.google.protobuf.MapField.newMapField(
                    EventPointDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              eventPoint__ = input.readMessage(
                  EventPointDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              eventPoint_.getMutableMap().put(
                  eventPoint__.getKey(), eventPoint__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          eventId_ = java.util.Collections.unmodifiableList(eventId_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cpRecord_ = java.util.Collections.unmodifiableList(cpRecord_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          removeIds_ = java.util.Collections.unmodifiableList(removeIds_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          strongPoint_ = java.util.Collections.unmodifiableList(strongPoint_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          rewardEvents_ = java.util.Collections.unmodifiableList(rewardEvents_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TraingEventData_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetLoseCount();
        case 4:
          return internalGetCpPoint();
        case 8:
          return internalGetCardGrade();
        case 10:
          return internalGetEventPoint();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TraingEventData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TraingEventData.class, protocol.TrainingDB.TraingEventData.Builder.class);
    }

    private int bitField0_;
    public static final int LOSECOUNT_FIELD_NUMBER = 1;
    private static final class LoseCountDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TraingEventData_LoseCountEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> loseCount_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLoseCount() {
      if (loseCount_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LoseCountDefaultEntryHolder.defaultEntry);
      }
      return loseCount_;
    }

    public int getLoseCountCount() {
      return internalGetLoseCount().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    public boolean containsLoseCount(
        int key) {
      
      return internalGetLoseCount().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLoseCountMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLoseCount() {
      return getLoseCountMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLoseCountMap() {
      return internalGetLoseCount().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    public int getLoseCountOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLoseCount().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
     */

    public int getLoseCountOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLoseCount().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LEVEL_FIELD_NUMBER = 2;
    private int level_;
    /**
     * <pre>
     *当前层数阶段
     * </pre>
     *
     * <code>int32 level = 2;</code>
     */
    public int getLevel() {
      return level_;
    }

    public static final int EVENTID_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> eventId_;
    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getEventIdList() {
      return eventId_;
    }
    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    public int getEventIdCount() {
      return eventId_.size();
    }
    /**
     * <pre>
     *已触发事件
     * </pre>
     *
     * <code>repeated int32 eventId = 3;</code>
     */
    public int getEventId(int index) {
      return eventId_.get(index);
    }
    private int eventIdMemoizedSerializedSize = -1;

    public static final int CPPOINT_FIELD_NUMBER = 4;
    private static final class CpPointDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TraingEventData_CpPointEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> cpPoint_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCpPoint() {
      if (cpPoint_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CpPointDefaultEntryHolder.defaultEntry);
      }
      return cpPoint_;
    }

    public int getCpPointCount() {
      return internalGetCpPoint().getMap().size();
    }
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    public boolean containsCpPoint(
        int key) {
      
      return internalGetCpPoint().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCpPointMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCpPoint() {
      return getCpPointMap();
    }
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getCpPointMap() {
      return internalGetCpPoint().getMap();
    }
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    public int getCpPointOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCpPoint().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *羁绊点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
     */

    public int getCpPointOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCpPoint().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CPRECORD_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> cpRecord_;
    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getCpRecordList() {
      return cpRecord_;
    }
    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    public int getCpRecordCount() {
      return cpRecord_.size();
    }
    /**
     * <pre>
     *羁绊点通过记录
     * </pre>
     *
     * <code>repeated int32 cpRecord = 5;</code>
     */
    public int getCpRecord(int index) {
      return cpRecord_.get(index);
    }
    private int cpRecordMemoizedSerializedSize = -1;

    public static final int REMOVEIDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> removeIds_;
    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getRemoveIdsList() {
      return removeIds_;
    }
    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    public int getRemoveIdsCount() {
      return removeIds_.size();
    }
    /**
     * <pre>
     *二选一放弃的点
     * </pre>
     *
     * <code>repeated int32 removeIds = 6;</code>
     */
    public int getRemoveIds(int index) {
      return removeIds_.get(index);
    }
    private int removeIdsMemoizedSerializedSize = -1;

    public static final int STRONGPOINT_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> strongPoint_;
    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    public java.util.List<java.lang.Integer>
        getStrongPointList() {
      return strongPoint_;
    }
    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    public int getStrongPointCount() {
      return strongPoint_.size();
    }
    /**
     * <pre>
     *羁绊点被打了,变强的点
     * </pre>
     *
     * <code>repeated int32 strongPoint = 7;</code>
     */
    public int getStrongPoint(int index) {
      return strongPoint_.get(index);
    }
    private int strongPointMemoizedSerializedSize = -1;

    public static final int CARDGRADE_FIELD_NUMBER = 8;
    private static final class CardGradeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TraingEventData_CardGradeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> cardGrade_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCardGrade() {
      if (cardGrade_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CardGradeDefaultEntryHolder.defaultEntry);
      }
      return cardGrade_;
    }

    public int getCardGradeCount() {
      return internalGetCardGrade().getMap().size();
    }
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    public boolean containsCardGrade(
        int key) {
      
      return internalGetCardGrade().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCardGradeMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardGrade() {
      return getCardGradeMap();
    }
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardGradeMap() {
      return internalGetCardGrade().getMap();
    }
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    public int getCardGradeOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardGrade().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *祝福卡品质
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
     */

    public int getCardGradeOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardGrade().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int REWARDEVENTS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> rewardEvents_;
    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getRewardEventsList() {
      return rewardEvents_;
    }
    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    public int getRewardEventsCount() {
      return rewardEvents_.size();
    }
    /**
     * <pre>
     *已领奖事件
     * </pre>
     *
     * <code>repeated int32 rewardEvents = 9;</code>
     */
    public int getRewardEvents(int index) {
      return rewardEvents_.get(index);
    }
    private int rewardEventsMemoizedSerializedSize = -1;

    public static final int EVENTPOINT_FIELD_NUMBER = 10;
    private static final class EventPointDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TraingEventData_EventPointEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> eventPoint_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetEventPoint() {
      if (eventPoint_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EventPointDefaultEntryHolder.defaultEntry);
      }
      return eventPoint_;
    }

    public int getEventPointCount() {
      return internalGetEventPoint().getMap().size();
    }
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    public boolean containsEventPoint(
        int key) {
      
      return internalGetEventPoint().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEventPointMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getEventPoint() {
      return getEventPointMap();
    }
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getEventPointMap() {
      return internalGetEventPoint().getMap();
    }
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    public int getEventPointOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEventPoint().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *触发事件的点
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
     */

    public int getEventPointOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEventPoint().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLoseCount(),
          LoseCountDefaultEntryHolder.defaultEntry,
          1);
      if (level_ != 0) {
        output.writeInt32(2, level_);
      }
      if (getEventIdList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(eventIdMemoizedSerializedSize);
      }
      for (int i = 0; i < eventId_.size(); i++) {
        output.writeInt32NoTag(eventId_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCpPoint(),
          CpPointDefaultEntryHolder.defaultEntry,
          4);
      if (getCpRecordList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(cpRecordMemoizedSerializedSize);
      }
      for (int i = 0; i < cpRecord_.size(); i++) {
        output.writeInt32NoTag(cpRecord_.get(i));
      }
      if (getRemoveIdsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(removeIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < removeIds_.size(); i++) {
        output.writeInt32NoTag(removeIds_.get(i));
      }
      if (getStrongPointList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(strongPointMemoizedSerializedSize);
      }
      for (int i = 0; i < strongPoint_.size(); i++) {
        output.writeInt32NoTag(strongPoint_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCardGrade(),
          CardGradeDefaultEntryHolder.defaultEntry,
          8);
      if (getRewardEventsList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(rewardEventsMemoizedSerializedSize);
      }
      for (int i = 0; i < rewardEvents_.size(); i++) {
        output.writeInt32NoTag(rewardEvents_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEventPoint(),
          EventPointDefaultEntryHolder.defaultEntry,
          10);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLoseCount().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        loseCount__ = LoseCountDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, loseCount__);
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, level_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < eventId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(eventId_.get(i));
        }
        size += dataSize;
        if (!getEventIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        eventIdMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetCpPoint().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        cpPoint__ = CpPointDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, cpPoint__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cpRecord_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cpRecord_.get(i));
        }
        size += dataSize;
        if (!getCpRecordList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cpRecordMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removeIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(removeIds_.get(i));
        }
        size += dataSize;
        if (!getRemoveIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        removeIdsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strongPoint_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(strongPoint_.get(i));
        }
        size += dataSize;
        if (!getStrongPointList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        strongPointMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetCardGrade().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        cardGrade__ = CardGradeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, cardGrade__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rewardEvents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rewardEvents_.get(i));
        }
        size += dataSize;
        if (!getRewardEventsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rewardEventsMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetEventPoint().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        eventPoint__ = EventPointDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, eventPoint__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TraingEventData)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TraingEventData other = (protocol.TrainingDB.TraingEventData) obj;

      boolean result = true;
      result = result && internalGetLoseCount().equals(
          other.internalGetLoseCount());
      result = result && (getLevel()
          == other.getLevel());
      result = result && getEventIdList()
          .equals(other.getEventIdList());
      result = result && internalGetCpPoint().equals(
          other.internalGetCpPoint());
      result = result && getCpRecordList()
          .equals(other.getCpRecordList());
      result = result && getRemoveIdsList()
          .equals(other.getRemoveIdsList());
      result = result && getStrongPointList()
          .equals(other.getStrongPointList());
      result = result && internalGetCardGrade().equals(
          other.internalGetCardGrade());
      result = result && getRewardEventsList()
          .equals(other.getRewardEventsList());
      result = result && internalGetEventPoint().equals(
          other.internalGetEventPoint());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLoseCount().getMap().isEmpty()) {
        hash = (37 * hash) + LOSECOUNT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLoseCount().hashCode();
      }
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      if (getEventIdCount() > 0) {
        hash = (37 * hash) + EVENTID_FIELD_NUMBER;
        hash = (53 * hash) + getEventIdList().hashCode();
      }
      if (!internalGetCpPoint().getMap().isEmpty()) {
        hash = (37 * hash) + CPPOINT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCpPoint().hashCode();
      }
      if (getCpRecordCount() > 0) {
        hash = (37 * hash) + CPRECORD_FIELD_NUMBER;
        hash = (53 * hash) + getCpRecordList().hashCode();
      }
      if (getRemoveIdsCount() > 0) {
        hash = (37 * hash) + REMOVEIDS_FIELD_NUMBER;
        hash = (53 * hash) + getRemoveIdsList().hashCode();
      }
      if (getStrongPointCount() > 0) {
        hash = (37 * hash) + STRONGPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getStrongPointList().hashCode();
      }
      if (!internalGetCardGrade().getMap().isEmpty()) {
        hash = (37 * hash) + CARDGRADE_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCardGrade().hashCode();
      }
      if (getRewardEventsCount() > 0) {
        hash = (37 * hash) + REWARDEVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getRewardEventsList().hashCode();
      }
      if (!internalGetEventPoint().getMap().isEmpty()) {
        hash = (37 * hash) + EVENTPOINT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEventPoint().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TraingEventData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TraingEventData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TraingEventData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TraingEventData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TraingEventData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TraingEventData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TraingEventData)
        protocol.TrainingDB.TraingEventDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TraingEventData_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetLoseCount();
          case 4:
            return internalGetCpPoint();
          case 8:
            return internalGetCardGrade();
          case 10:
            return internalGetEventPoint();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableLoseCount();
          case 4:
            return internalGetMutableCpPoint();
          case 8:
            return internalGetMutableCardGrade();
          case 10:
            return internalGetMutableEventPoint();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TraingEventData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TraingEventData.class, protocol.TrainingDB.TraingEventData.Builder.class);
      }

      // Construct using protocol.TrainingDB.TraingEventData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableLoseCount().clear();
        level_ = 0;

        eventId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        internalGetMutableCpPoint().clear();
        cpRecord_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        removeIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        strongPoint_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        internalGetMutableCardGrade().clear();
        rewardEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        internalGetMutableEventPoint().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TraingEventData_descriptor;
      }

      public protocol.TrainingDB.TraingEventData getDefaultInstanceForType() {
        return protocol.TrainingDB.TraingEventData.getDefaultInstance();
      }

      public protocol.TrainingDB.TraingEventData build() {
        protocol.TrainingDB.TraingEventData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TraingEventData buildPartial() {
        protocol.TrainingDB.TraingEventData result = new protocol.TrainingDB.TraingEventData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.loseCount_ = internalGetLoseCount();
        result.loseCount_.makeImmutable();
        result.level_ = level_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          eventId_ = java.util.Collections.unmodifiableList(eventId_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.eventId_ = eventId_;
        result.cpPoint_ = internalGetCpPoint();
        result.cpPoint_.makeImmutable();
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          cpRecord_ = java.util.Collections.unmodifiableList(cpRecord_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.cpRecord_ = cpRecord_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          removeIds_ = java.util.Collections.unmodifiableList(removeIds_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.removeIds_ = removeIds_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          strongPoint_ = java.util.Collections.unmodifiableList(strongPoint_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.strongPoint_ = strongPoint_;
        result.cardGrade_ = internalGetCardGrade();
        result.cardGrade_.makeImmutable();
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          rewardEvents_ = java.util.Collections.unmodifiableList(rewardEvents_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.rewardEvents_ = rewardEvents_;
        result.eventPoint_ = internalGetEventPoint();
        result.eventPoint_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TraingEventData) {
          return mergeFrom((protocol.TrainingDB.TraingEventData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TraingEventData other) {
        if (other == protocol.TrainingDB.TraingEventData.getDefaultInstance()) return this;
        internalGetMutableLoseCount().mergeFrom(
            other.internalGetLoseCount());
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (!other.eventId_.isEmpty()) {
          if (eventId_.isEmpty()) {
            eventId_ = other.eventId_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEventIdIsMutable();
            eventId_.addAll(other.eventId_);
          }
          onChanged();
        }
        internalGetMutableCpPoint().mergeFrom(
            other.internalGetCpPoint());
        if (!other.cpRecord_.isEmpty()) {
          if (cpRecord_.isEmpty()) {
            cpRecord_ = other.cpRecord_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCpRecordIsMutable();
            cpRecord_.addAll(other.cpRecord_);
          }
          onChanged();
        }
        if (!other.removeIds_.isEmpty()) {
          if (removeIds_.isEmpty()) {
            removeIds_ = other.removeIds_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRemoveIdsIsMutable();
            removeIds_.addAll(other.removeIds_);
          }
          onChanged();
        }
        if (!other.strongPoint_.isEmpty()) {
          if (strongPoint_.isEmpty()) {
            strongPoint_ = other.strongPoint_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureStrongPointIsMutable();
            strongPoint_.addAll(other.strongPoint_);
          }
          onChanged();
        }
        internalGetMutableCardGrade().mergeFrom(
            other.internalGetCardGrade());
        if (!other.rewardEvents_.isEmpty()) {
          if (rewardEvents_.isEmpty()) {
            rewardEvents_ = other.rewardEvents_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureRewardEventsIsMutable();
            rewardEvents_.addAll(other.rewardEvents_);
          }
          onChanged();
        }
        internalGetMutableEventPoint().mergeFrom(
            other.internalGetEventPoint());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TraingEventData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TraingEventData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> loseCount_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLoseCount() {
        if (loseCount_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LoseCountDefaultEntryHolder.defaultEntry);
        }
        return loseCount_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLoseCount() {
        onChanged();;
        if (loseCount_ == null) {
          loseCount_ = com.google.protobuf.MapField.newMapField(
              LoseCountDefaultEntryHolder.defaultEntry);
        }
        if (!loseCount_.isMutable()) {
          loseCount_ = loseCount_.copy();
        }
        return loseCount_;
      }

      public int getLoseCountCount() {
        return internalGetLoseCount().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public boolean containsLoseCount(
          int key) {
        
        return internalGetLoseCount().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLoseCountMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLoseCount() {
        return getLoseCountMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLoseCountMap() {
        return internalGetLoseCount().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public int getLoseCountOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLoseCount().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public int getLoseCountOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLoseCount().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLoseCount() {
        internalGetMutableLoseCount().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public Builder removeLoseCount(
          int key) {
        
        internalGetMutableLoseCount().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLoseCount() {
        return internalGetMutableLoseCount().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */
      public Builder putLoseCount(
          int key,
          int value) {
        
        
        internalGetMutableLoseCount().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; loseCount = 1;</code>
       */

      public Builder putAllLoseCount(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLoseCount().getMutableMap()
            .putAll(values);
        return this;
      }

      private int level_ ;
      /**
       * <pre>
       *当前层数阶段
       * </pre>
       *
       * <code>int32 level = 2;</code>
       */
      public int getLevel() {
        return level_;
      }
      /**
       * <pre>
       *当前层数阶段
       * </pre>
       *
       * <code>int32 level = 2;</code>
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前层数阶段
       * </pre>
       *
       * <code>int32 level = 2;</code>
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> eventId_ = java.util.Collections.emptyList();
      private void ensureEventIdIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          eventId_ = new java.util.ArrayList<java.lang.Integer>(eventId_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getEventIdList() {
        return java.util.Collections.unmodifiableList(eventId_);
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public int getEventIdCount() {
        return eventId_.size();
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public int getEventId(int index) {
        return eventId_.get(index);
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public Builder setEventId(
          int index, int value) {
        ensureEventIdIsMutable();
        eventId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public Builder addEventId(int value) {
        ensureEventIdIsMutable();
        eventId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public Builder addAllEventId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEventIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, eventId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已触发事件
       * </pre>
       *
       * <code>repeated int32 eventId = 3;</code>
       */
      public Builder clearEventId() {
        eventId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> cpPoint_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetCpPoint() {
        if (cpPoint_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CpPointDefaultEntryHolder.defaultEntry);
        }
        return cpPoint_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableCpPoint() {
        onChanged();;
        if (cpPoint_ == null) {
          cpPoint_ = com.google.protobuf.MapField.newMapField(
              CpPointDefaultEntryHolder.defaultEntry);
        }
        if (!cpPoint_.isMutable()) {
          cpPoint_ = cpPoint_.copy();
        }
        return cpPoint_;
      }

      public int getCpPointCount() {
        return internalGetCpPoint().getMap().size();
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public boolean containsCpPoint(
          int key) {
        
        return internalGetCpPoint().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCpPointMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCpPoint() {
        return getCpPointMap();
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getCpPointMap() {
        return internalGetCpPoint().getMap();
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public int getCpPointOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCpPoint().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public int getCpPointOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCpPoint().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCpPoint() {
        internalGetMutableCpPoint().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public Builder removeCpPoint(
          int key) {
        
        internalGetMutableCpPoint().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableCpPoint() {
        return internalGetMutableCpPoint().getMutableMap();
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */
      public Builder putCpPoint(
          int key,
          int value) {
        
        
        internalGetMutableCpPoint().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *羁绊点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cpPoint = 4;</code>
       */

      public Builder putAllCpPoint(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableCpPoint().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> cpRecord_ = java.util.Collections.emptyList();
      private void ensureCpRecordIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cpRecord_ = new java.util.ArrayList<java.lang.Integer>(cpRecord_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getCpRecordList() {
        return java.util.Collections.unmodifiableList(cpRecord_);
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public int getCpRecordCount() {
        return cpRecord_.size();
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public int getCpRecord(int index) {
        return cpRecord_.get(index);
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public Builder setCpRecord(
          int index, int value) {
        ensureCpRecordIsMutable();
        cpRecord_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public Builder addCpRecord(int value) {
        ensureCpRecordIsMutable();
        cpRecord_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public Builder addAllCpRecord(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCpRecordIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cpRecord_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点通过记录
       * </pre>
       *
       * <code>repeated int32 cpRecord = 5;</code>
       */
      public Builder clearCpRecord() {
        cpRecord_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> removeIds_ = java.util.Collections.emptyList();
      private void ensureRemoveIdsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          removeIds_ = new java.util.ArrayList<java.lang.Integer>(removeIds_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getRemoveIdsList() {
        return java.util.Collections.unmodifiableList(removeIds_);
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public int getRemoveIdsCount() {
        return removeIds_.size();
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public int getRemoveIds(int index) {
        return removeIds_.get(index);
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public Builder setRemoveIds(
          int index, int value) {
        ensureRemoveIdsIsMutable();
        removeIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public Builder addRemoveIds(int value) {
        ensureRemoveIdsIsMutable();
        removeIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public Builder addAllRemoveIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRemoveIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, removeIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *二选一放弃的点
       * </pre>
       *
       * <code>repeated int32 removeIds = 6;</code>
       */
      public Builder clearRemoveIds() {
        removeIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> strongPoint_ = java.util.Collections.emptyList();
      private void ensureStrongPointIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          strongPoint_ = new java.util.ArrayList<java.lang.Integer>(strongPoint_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public java.util.List<java.lang.Integer>
          getStrongPointList() {
        return java.util.Collections.unmodifiableList(strongPoint_);
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public int getStrongPointCount() {
        return strongPoint_.size();
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public int getStrongPoint(int index) {
        return strongPoint_.get(index);
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public Builder setStrongPoint(
          int index, int value) {
        ensureStrongPointIsMutable();
        strongPoint_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public Builder addStrongPoint(int value) {
        ensureStrongPointIsMutable();
        strongPoint_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public Builder addAllStrongPoint(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStrongPointIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, strongPoint_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *羁绊点被打了,变强的点
       * </pre>
       *
       * <code>repeated int32 strongPoint = 7;</code>
       */
      public Builder clearStrongPoint() {
        strongPoint_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> cardGrade_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetCardGrade() {
        if (cardGrade_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CardGradeDefaultEntryHolder.defaultEntry);
        }
        return cardGrade_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableCardGrade() {
        onChanged();;
        if (cardGrade_ == null) {
          cardGrade_ = com.google.protobuf.MapField.newMapField(
              CardGradeDefaultEntryHolder.defaultEntry);
        }
        if (!cardGrade_.isMutable()) {
          cardGrade_ = cardGrade_.copy();
        }
        return cardGrade_;
      }

      public int getCardGradeCount() {
        return internalGetCardGrade().getMap().size();
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public boolean containsCardGrade(
          int key) {
        
        return internalGetCardGrade().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCardGradeMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardGrade() {
        return getCardGradeMap();
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardGradeMap() {
        return internalGetCardGrade().getMap();
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public int getCardGradeOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardGrade().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public int getCardGradeOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardGrade().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCardGrade() {
        internalGetMutableCardGrade().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public Builder removeCardGrade(
          int key) {
        
        internalGetMutableCardGrade().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableCardGrade() {
        return internalGetMutableCardGrade().getMutableMap();
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */
      public Builder putCardGrade(
          int key,
          int value) {
        
        
        internalGetMutableCardGrade().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *祝福卡品质
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; cardGrade = 8;</code>
       */

      public Builder putAllCardGrade(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableCardGrade().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> rewardEvents_ = java.util.Collections.emptyList();
      private void ensureRewardEventsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          rewardEvents_ = new java.util.ArrayList<java.lang.Integer>(rewardEvents_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getRewardEventsList() {
        return java.util.Collections.unmodifiableList(rewardEvents_);
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public int getRewardEventsCount() {
        return rewardEvents_.size();
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public int getRewardEvents(int index) {
        return rewardEvents_.get(index);
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public Builder setRewardEvents(
          int index, int value) {
        ensureRewardEventsIsMutable();
        rewardEvents_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public Builder addRewardEvents(int value) {
        ensureRewardEventsIsMutable();
        rewardEvents_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public Builder addAllRewardEvents(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRewardEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rewardEvents_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已领奖事件
       * </pre>
       *
       * <code>repeated int32 rewardEvents = 9;</code>
       */
      public Builder clearRewardEvents() {
        rewardEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> eventPoint_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetEventPoint() {
        if (eventPoint_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EventPointDefaultEntryHolder.defaultEntry);
        }
        return eventPoint_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableEventPoint() {
        onChanged();;
        if (eventPoint_ == null) {
          eventPoint_ = com.google.protobuf.MapField.newMapField(
              EventPointDefaultEntryHolder.defaultEntry);
        }
        if (!eventPoint_.isMutable()) {
          eventPoint_ = eventPoint_.copy();
        }
        return eventPoint_;
      }

      public int getEventPointCount() {
        return internalGetEventPoint().getMap().size();
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public boolean containsEventPoint(
          int key) {
        
        return internalGetEventPoint().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEventPointMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getEventPoint() {
        return getEventPointMap();
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getEventPointMap() {
        return internalGetEventPoint().getMap();
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public int getEventPointOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEventPoint().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public int getEventPointOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEventPoint().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEventPoint() {
        internalGetMutableEventPoint().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public Builder removeEventPoint(
          int key) {
        
        internalGetMutableEventPoint().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableEventPoint() {
        return internalGetMutableEventPoint().getMutableMap();
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */
      public Builder putEventPoint(
          int key,
          int value) {
        
        
        internalGetMutableEventPoint().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *触发事件的点
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventPoint = 10;</code>
       */

      public Builder putAllEventPoint(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableEventPoint().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TraingEventData)
    }

    // @@protoc_insertion_point(class_scope:TraingEventData)
    private static final protocol.TrainingDB.TraingEventData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TraingEventData();
    }

    public static protocol.TrainingDB.TraingEventData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TraingEventData>
        PARSER = new com.google.protobuf.AbstractParser<TraingEventData>() {
      public TraingEventData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TraingEventData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TraingEventData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TraingEventData> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TraingEventData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainShopGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainShopGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */
    int getItemCount();
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */
    boolean containsItem(
        int key);
    /**
     * Use {@link #getItemMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem>
    getItem();
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */
    java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem>
    getItemMap();
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    protocol.Training.TrainShopItem getItemOrDefault(
        int key,
        protocol.Training.TrainShopItem defaultValue);
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    protocol.Training.TrainShopItem getItemOrThrow(
        int key);

    /**
     * <pre>
     *已刷新次数
     * </pre>
     *
     * <code>int32 freshTime = 2;</code>
     */
    int getFreshTime();

    /**
     * <code>int32 groupId = 3;</code>
     */
    int getGroupId();
  }
  /**
   * Protobuf type {@code TrainShopGroup}
   */
  public  static final class TrainShopGroup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainShopGroup)
      TrainShopGroupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainShopGroup.newBuilder() to construct.
    private TrainShopGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainShopGroup() {
      freshTime_ = 0;
      groupId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainShopGroup(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = com.google.protobuf.MapField.newMapField(
                    ItemDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.Training.TrainShopItem>
              item__ = input.readMessage(
                  ItemDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              item_.getMutableMap().put(
                  item__.getKey(), item__.getValue());
              break;
            }
            case 16: {

              freshTime_ = input.readInt32();
              break;
            }
            case 24: {

              groupId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainShopGroup_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetItem();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainShopGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainShopGroup.class, protocol.TrainingDB.TrainShopGroup.Builder.class);
    }

    private int bitField0_;
    public static final int ITEM_FIELD_NUMBER = 1;
    private static final class ItemDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.Training.TrainShopItem> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.Training.TrainShopItem>newDefaultInstance(
                  protocol.TrainingDB.internal_static_TrainShopGroup_ItemEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.Training.TrainShopItem.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.Training.TrainShopItem> item_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainShopItem>
    internalGetItem() {
      if (item_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ItemDefaultEntryHolder.defaultEntry);
      }
      return item_;
    }

    public int getItemCount() {
      return internalGetItem().getMap().size();
    }
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    public boolean containsItem(
        int key) {
      
      return internalGetItem().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> getItem() {
      return getItemMap();
    }
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> getItemMap() {
      return internalGetItem().getMap();
    }
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    public protocol.Training.TrainShopItem getItemOrDefault(
        int key,
        protocol.Training.TrainShopItem defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> map =
          internalGetItem().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
     */

    public protocol.Training.TrainShopItem getItemOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> map =
          internalGetItem().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int FRESHTIME_FIELD_NUMBER = 2;
    private int freshTime_;
    /**
     * <pre>
     *已刷新次数
     * </pre>
     *
     * <code>int32 freshTime = 2;</code>
     */
    public int getFreshTime() {
      return freshTime_;
    }

    public static final int GROUPID_FIELD_NUMBER = 3;
    private int groupId_;
    /**
     * <code>int32 groupId = 3;</code>
     */
    public int getGroupId() {
      return groupId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetItem(),
          ItemDefaultEntryHolder.defaultEntry,
          1);
      if (freshTime_ != 0) {
        output.writeInt32(2, freshTime_);
      }
      if (groupId_ != 0) {
        output.writeInt32(3, groupId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, protocol.Training.TrainShopItem> entry
           : internalGetItem().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.Training.TrainShopItem>
        item__ = ItemDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, item__);
      }
      if (freshTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, freshTime_);
      }
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, groupId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainShopGroup)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainShopGroup other = (protocol.TrainingDB.TrainShopGroup) obj;

      boolean result = true;
      result = result && internalGetItem().equals(
          other.internalGetItem());
      result = result && (getFreshTime()
          == other.getFreshTime());
      result = result && (getGroupId()
          == other.getGroupId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetItem().getMap().isEmpty()) {
        hash = (37 * hash) + ITEM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItem().hashCode();
      }
      hash = (37 * hash) + FRESHTIME_FIELD_NUMBER;
      hash = (53 * hash) + getFreshTime();
      hash = (37 * hash) + GROUPID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainShopGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainShopGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainShopGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainShopGroup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainShopGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainShopGroup)
        protocol.TrainingDB.TrainShopGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainShopGroup_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetItem();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableItem();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainShopGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainShopGroup.class, protocol.TrainingDB.TrainShopGroup.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainShopGroup.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableItem().clear();
        freshTime_ = 0;

        groupId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainShopGroup_descriptor;
      }

      public protocol.TrainingDB.TrainShopGroup getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainShopGroup.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainShopGroup build() {
        protocol.TrainingDB.TrainShopGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainShopGroup buildPartial() {
        protocol.TrainingDB.TrainShopGroup result = new protocol.TrainingDB.TrainShopGroup(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.item_ = internalGetItem();
        result.item_.makeImmutable();
        result.freshTime_ = freshTime_;
        result.groupId_ = groupId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainShopGroup) {
          return mergeFrom((protocol.TrainingDB.TrainShopGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainShopGroup other) {
        if (other == protocol.TrainingDB.TrainShopGroup.getDefaultInstance()) return this;
        internalGetMutableItem().mergeFrom(
            other.internalGetItem());
        if (other.getFreshTime() != 0) {
          setFreshTime(other.getFreshTime());
        }
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainShopGroup parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainShopGroup) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.Training.TrainShopItem> item_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainShopItem>
      internalGetItem() {
        if (item_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ItemDefaultEntryHolder.defaultEntry);
        }
        return item_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.Training.TrainShopItem>
      internalGetMutableItem() {
        onChanged();;
        if (item_ == null) {
          item_ = com.google.protobuf.MapField.newMapField(
              ItemDefaultEntryHolder.defaultEntry);
        }
        if (!item_.isMutable()) {
          item_ = item_.copy();
        }
        return item_;
      }

      public int getItemCount() {
        return internalGetItem().getMap().size();
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public boolean containsItem(
          int key) {
        
        return internalGetItem().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> getItem() {
        return getItemMap();
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> getItemMap() {
        return internalGetItem().getMap();
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public protocol.Training.TrainShopItem getItemOrDefault(
          int key,
          protocol.Training.TrainShopItem defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> map =
            internalGetItem().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public protocol.Training.TrainShopItem getItemOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> map =
            internalGetItem().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItem() {
        internalGetMutableItem().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public Builder removeItem(
          int key) {
        
        internalGetMutableItem().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem>
      getMutableItem() {
        return internalGetMutableItem().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */
      public Builder putItem(
          int key,
          protocol.Training.TrainShopItem value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableItem().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, .TrainShopItem&gt; item = 1;</code>
       */

      public Builder putAllItem(
          java.util.Map<java.lang.Integer, protocol.Training.TrainShopItem> values) {
        internalGetMutableItem().getMutableMap()
            .putAll(values);
        return this;
      }

      private int freshTime_ ;
      /**
       * <pre>
       *已刷新次数
       * </pre>
       *
       * <code>int32 freshTime = 2;</code>
       */
      public int getFreshTime() {
        return freshTime_;
      }
      /**
       * <pre>
       *已刷新次数
       * </pre>
       *
       * <code>int32 freshTime = 2;</code>
       */
      public Builder setFreshTime(int value) {
        
        freshTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *已刷新次数
       * </pre>
       *
       * <code>int32 freshTime = 2;</code>
       */
      public Builder clearFreshTime() {
        
        freshTime_ = 0;
        onChanged();
        return this;
      }

      private int groupId_ ;
      /**
       * <code>int32 groupId = 3;</code>
       */
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>int32 groupId = 3;</code>
       */
      public Builder setGroupId(int value) {
        
        groupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 groupId = 3;</code>
       */
      public Builder clearGroupId() {
        
        groupId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainShopGroup)
    }

    // @@protoc_insertion_point(class_scope:TrainShopGroup)
    private static final protocol.TrainingDB.TrainShopGroup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainShopGroup();
    }

    public static protocol.TrainingDB.TrainShopGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainShopGroup>
        PARSER = new com.google.protobuf.AbstractParser<TrainShopGroup>() {
      public TrainShopGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainShopGroup(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainShopGroup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainShopGroup> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainShopGroup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrainCardChoiceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TrainCardChoice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    java.util.List<java.lang.Integer> getCardIdList();
    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    int getCardIdCount();
    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    int getCardId(int index);
  }
  /**
   * Protobuf type {@code TrainCardChoice}
   */
  public  static final class TrainCardChoice extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:TrainCardChoice)
      TrainCardChoiceOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrainCardChoice.newBuilder() to construct.
    private TrainCardChoice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrainCardChoice() {
      cardId_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TrainCardChoice(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cardId_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cardId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cardId_ = java.util.Collections.unmodifiableList(cardId_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TrainingDB.internal_static_TrainCardChoice_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TrainingDB.internal_static_TrainCardChoice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TrainingDB.TrainCardChoice.class, protocol.TrainingDB.TrainCardChoice.Builder.class);
    }

    public static final int CARDID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cardId_;
    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getCardIdList() {
      return cardId_;
    }
    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    public int getCardIdCount() {
      return cardId_.size();
    }
    /**
     * <code>repeated int32 cardId = 1;</code>
     */
    public int getCardId(int index) {
      return cardId_.get(index);
    }
    private int cardIdMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCardIdList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(cardIdMemoizedSerializedSize);
      }
      for (int i = 0; i < cardId_.size(); i++) {
        output.writeInt32NoTag(cardId_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardId_.get(i));
        }
        size += dataSize;
        if (!getCardIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardIdMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TrainingDB.TrainCardChoice)) {
        return super.equals(obj);
      }
      protocol.TrainingDB.TrainCardChoice other = (protocol.TrainingDB.TrainCardChoice) obj;

      boolean result = true;
      result = result && getCardIdList()
          .equals(other.getCardIdList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardIdCount() > 0) {
        hash = (37 * hash) + CARDID_FIELD_NUMBER;
        hash = (53 * hash) + getCardIdList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainCardChoice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainCardChoice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TrainingDB.TrainCardChoice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TrainingDB.TrainCardChoice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TrainCardChoice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TrainCardChoice)
        protocol.TrainingDB.TrainCardChoiceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TrainingDB.internal_static_TrainCardChoice_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TrainingDB.internal_static_TrainCardChoice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TrainingDB.TrainCardChoice.class, protocol.TrainingDB.TrainCardChoice.Builder.class);
      }

      // Construct using protocol.TrainingDB.TrainCardChoice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        cardId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TrainingDB.internal_static_TrainCardChoice_descriptor;
      }

      public protocol.TrainingDB.TrainCardChoice getDefaultInstanceForType() {
        return protocol.TrainingDB.TrainCardChoice.getDefaultInstance();
      }

      public protocol.TrainingDB.TrainCardChoice build() {
        protocol.TrainingDB.TrainCardChoice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TrainingDB.TrainCardChoice buildPartial() {
        protocol.TrainingDB.TrainCardChoice result = new protocol.TrainingDB.TrainCardChoice(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cardId_ = java.util.Collections.unmodifiableList(cardId_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardId_ = cardId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TrainingDB.TrainCardChoice) {
          return mergeFrom((protocol.TrainingDB.TrainCardChoice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TrainingDB.TrainCardChoice other) {
        if (other == protocol.TrainingDB.TrainCardChoice.getDefaultInstance()) return this;
        if (!other.cardId_.isEmpty()) {
          if (cardId_.isEmpty()) {
            cardId_ = other.cardId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardIdIsMutable();
            cardId_.addAll(other.cardId_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TrainingDB.TrainCardChoice parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TrainingDB.TrainCardChoice) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> cardId_ = java.util.Collections.emptyList();
      private void ensureCardIdIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cardId_ = new java.util.ArrayList<java.lang.Integer>(cardId_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getCardIdList() {
        return java.util.Collections.unmodifiableList(cardId_);
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public int getCardIdCount() {
        return cardId_.size();
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public int getCardId(int index) {
        return cardId_.get(index);
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public Builder setCardId(
          int index, int value) {
        ensureCardIdIsMutable();
        cardId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public Builder addCardId(int value) {
        ensureCardIdIsMutable();
        cardId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public Builder addAllCardId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cardId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardId = 1;</code>
       */
      public Builder clearCardId() {
        cardId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:TrainCardChoice)
    }

    // @@protoc_insertion_point(class_scope:TrainCardChoice)
    private static final protocol.TrainingDB.TrainCardChoice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TrainingDB.TrainCardChoice();
    }

    public static protocol.TrainingDB.TrainCardChoice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrainCardChoice>
        PARSER = new com.google.protobuf.AbstractParser<TrainCardChoice>() {
      public TrainCardChoice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TrainCardChoice(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TrainCardChoice> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrainCardChoice> getParserForType() {
      return PARSER;
    }

    public protocol.TrainingDB.TrainCardChoice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_StarMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_StarMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_ItemMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_ItemMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_PrepareUseEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_PrepareUseEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_ShopEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_ShopEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_LuckDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_LuckDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_CardMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_CardMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_CardWeightChangeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_CardWeightChangeEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_BuffFlagEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_BuffFlagEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_ChangePointEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_ChangePointEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_BloodMonsterEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_BloodMonsterEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_MlTimesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_MlTimesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBMap_BeyondPlayerDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBMap_BeyondPlayerDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainHelpPetData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainHelpPetData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainBloodMonster_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainBloodMonster_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainBloodMonster_HpRateEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainBloodMonster_HpRateEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainDBData_EndMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainDBData_EndMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainLuckData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainLuckData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraingEventData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraingEventData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraingEventData_LoseCountEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraingEventData_LoseCountEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraingEventData_CpPointEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraingEventData_CpPointEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraingEventData_CardGradeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraingEventData_CardGradeEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TraingEventData_EventPointEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TraingEventData_EventPointEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainShopGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainShopGroup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainShopGroup_ItemEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainShopGroup_ItemEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TrainCardChoice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_TrainCardChoice_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020TrainingDB.proto\032\016Training.proto\032\014Comm" +
      "on.proto\"\237\020\n\nTrainDBMap\022\r\n\005mapId\030\001 \001(\005\022\020" +
      "\n\010openTime\030\002 \001(\003\022\021\n\tcloseTime\030\003 \001(\003\022\017\n\007c" +
      "urrPos\030\004 \001(\005\022\022\n\nisBlessing\030\005 \001(\005\022\017\n\007star" +
      "Num\030\006 \001(\005\022\r\n\005jifen\030\007 \001(\005\022\024\n\014jifenRefTime" +
      "\030\010 \001(\003\022\021\n\tendRankMC\030\t \001(\005\022\027\n\006reward\030\n \003(" +
      "\0132\007.Reward\022\027\n\005goNum\030\013 \003(\0132\010.TrainKV\022\031\n\007s" +
      "hopBuy\030\014 \003(\0132\010.TrainKV\022\031\n\007usebuff\030\r \003(\0132" +
      "\010.TrainKV\022 \n\005mlids\030\016 \003(\0132\021.TrainHelpPetD" +
      "ata\022\017\n\007buffIds\030\017 \003(\005\022)\n\007starMap\030\020 \003(\0132\030.",
      "TrainDBMap.StarMapEntry\022)\n\007itemMap\030\021 \003(\013" +
      "2\030.TrainDBMap.ItemMapEntry\022/\n\nprepareUse" +
      "\030\022 \003(\0132\033.TrainDBMap.PrepareUseEntry\022\017\n\007s" +
      "tartId\030\023 \001(\005\022\017\n\007curBoss\030\024 \001(\005\022#\n\004shop\030\025 " +
      "\003(\0132\025.TrainDBMap.ShopEntry\022\036\n\007buffBag\030\026 " +
      "\001(\0132\r.TrainBuffBag\022\036\n\007itemBag\030\027 \001(\0132\r.Tr" +
      "ainItemBag\022\023\n\013preparPoint\030\030 \001(\005\022\017\n\007curpa" +
      "th\030\031 \003(\005\022\027\n\017luckbuffendtime\030\032 \001(\003\022\024\n\014luc" +
      "kbufftime\030\033 \001(\005\022\022\n\nluckbuffid\030\034 \003(\005\022+\n\010l" +
      "uckData\030\035 \003(\0132\031.TrainDBMap.LuckDataEntry",
      "\022)\n\007cardMap\030\036 \003(\0132\030.TrainDBMap.CardMapEn" +
      "try\022;\n\020cardWeightChange\030\037 \003(\0132!.TrainDBM" +
      "ap.CardWeightChangeEntry\022+\n\010buffFlag\030  \003" +
      "(\0132\031.TrainDBMap.BuffFlagEntry\022\020\n\010jifenPe" +
      "r\030! \001(\005\022#\n\teventData\030\" \001(\0132\020.TraingEvent" +
      "Data\022\023\n\013limitCardId\030# \001(\005\0221\n\013changePoint" +
      "\030$ \003(\0132\034.TrainDBMap.ChangePointEntry\022\021\n\t" +
      "joinPower\030% \001(\003\022\020\n\010endPower\030& \001(\003\022\027\n\017rep" +
      "ortCardLevel\030\' \001(\005\022\"\n\tlimitcard\030) \003(\0132\017." +
      "TrainLimitCard\022\017\n\007endtime\030* \001(\003\022\022\n\nnpcEv",
      "entId\030+ \001(\005\022\025\n\rnpcEventPoint\030, \001(\005\0223\n\014bl" +
      "oodMonster\030- \003(\0132\035.TrainDBMap.BloodMonst" +
      "erEntry\022)\n\007mlTimes\030. \003(\0132\030.TrainDBMap.Ml" +
      "TimesEntry\022#\n\ttraincard\030/ \003(\0132\020.TrainCar" +
      "dChoice\022;\n\020beyondPlayerData\0300 \003(\0132!.Trai" +
      "nDBMap.BeyondPlayerDataEntry\032.\n\014StarMapE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032:\n\014" +
      "ItemMapEntry\022\013\n\003key\030\001 \001(\t\022\031\n\005value\030\002 \001(\013" +
      "2\n.TrainItem:\0028\001\0321\n\017PrepareUseEntry\022\013\n\003k" +
      "ey\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032<\n\tShopEntry",
      "\022\013\n\003key\030\001 \001(\005\022\036\n\005value\030\002 \001(\0132\017.TrainShop" +
      "Group:\0028\001\032?\n\rLuckDataEntry\022\013\n\003key\030\001 \001(\005\022" +
      "\035\n\005value\030\002 \001(\0132\016.TrainLuckData:\0028\001\032>\n\014Ca" +
      "rdMapEntry\022\013\n\003key\030\001 \001(\005\022\035\n\005value\030\002 \001(\0132\016" +
      ".TrainLuckCard:\0028\001\0327\n\025CardWeightChangeEn" +
      "try\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032?\n\rB" +
      "uffFlagEntry\022\013\n\003key\030\001 \001(\005\022\035\n\005value\030\002 \001(\013" +
      "2\016.TrainLuckData:\0028\001\0322\n\020ChangePointEntry" +
      "\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032G\n\021Bloo" +
      "dMonsterEntry\022\013\n\003key\030\001 \001(\005\022!\n\005value\030\002 \001(",
      "\0132\022.TrainBloodMonster:\0028\001\032.\n\014MlTimesEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\0327\n\025Bey" +
      "ondPlayerDataEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value" +
      "\030\002 \001(\005:\0028\001\"}\n\020TrainHelpPetData\022\r\n\005petId\030" +
      "\001 \001(\t\022\017\n\007pointId\030\002 \001(\005\022\020\n\010petCfgId\030\003 \001(\005" +
      "\022\020\n\010petLevel\030\004 \001(\005\022\021\n\tpetRarity\030\005 \001(\005\022\022\n" +
      "\npetUpLevel\030\006 \001(\005\"\216\001\n\021TrainBloodMonster\022" +
      ".\n\006hpRate\030\001 \003(\0132\036.TrainBloodMonster.HpRa" +
      "teEntry\022\013\n\003max\030\002 \001(\005\022\r\n\005times\030\003 \001(\005\032-\n\013H" +
      "pRateEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\002",
      "8\001\"\245\001\n\013TrainDBData\022\017\n\007currMap\030\001 \001(\005\022\031\n\004m" +
      "aps\030\002 \003(\0132\013.TrainDBMap\022\021\n\tnoticeMap\030\003 \003(" +
      "\005\022(\n\006endMap\030\004 \003(\0132\030.TrainDBData.EndMapEn" +
      "try\032-\n\013EndMapEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value" +
      "\030\002 \001(\003:\0028\001\"V\n\rTrainLuckData\022\n\n\002id\030\001 \001(\005\022" +
      "\016\n\006param1\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\r\n\005level\030\004" +
      " \001(\005\022\014\n\004flag\030\005 \001(\005\"\226\004\n\017TraingEventData\0222" +
      "\n\tloseCount\030\001 \003(\0132\037.TraingEventData.Lose" +
      "CountEntry\022\r\n\005level\030\002 \001(\005\022\017\n\007eventId\030\003 \003" +
      "(\005\022.\n\007cpPoint\030\004 \003(\0132\035.TraingEventData.Cp",
      "PointEntry\022\020\n\010cpRecord\030\005 \003(\005\022\021\n\tremoveId" +
      "s\030\006 \003(\005\022\023\n\013strongPoint\030\007 \003(\005\0222\n\tcardGrad" +
      "e\030\010 \003(\0132\037.TraingEventData.CardGradeEntry" +
      "\022\024\n\014rewardEvents\030\t \003(\005\0224\n\neventPoint\030\n \003" +
      "(\0132 .TraingEventData.EventPointEntry\0320\n\016" +
      "LoseCountEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001" +
      "(\005:\0028\001\032.\n\014CpPointEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005v" +
      "alue\030\002 \001(\005:\0028\001\0320\n\016CardGradeEntry\022\013\n\003key\030" +
      "\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0321\n\017EventPointEn" +
      "try\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\232\001\n\016",
      "TrainShopGroup\022\'\n\004item\030\001 \003(\0132\031.TrainShop" +
      "Group.ItemEntry\022\021\n\tfreshTime\030\002 \001(\005\022\017\n\007gr" +
      "oupId\030\003 \001(\005\032;\n\tItemEntry\022\013\n\003key\030\001 \001(\005\022\035\n" +
      "\005value\030\002 \001(\0132\016.TrainShopItem:\0028\001\"!\n\017Trai" +
      "nCardChoice\022\016\n\006cardId\030\001 \003(\005B\033\n\010protocol\252" +
      "\002\016ETHotfix.Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.Training.getDescriptor(),
          protocol.Common.getDescriptor(),
        }, assigner);
    internal_static_TrainDBMap_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TrainDBMap_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_descriptor,
        new java.lang.String[] { "MapId", "OpenTime", "CloseTime", "CurrPos", "IsBlessing", "StarNum", "Jifen", "JifenRefTime", "EndRankMC", "Reward", "GoNum", "ShopBuy", "Usebuff", "Mlids", "BuffIds", "StarMap", "ItemMap", "PrepareUse", "StartId", "CurBoss", "Shop", "BuffBag", "ItemBag", "PreparPoint", "Curpath", "Luckbuffendtime", "Luckbufftime", "Luckbuffid", "LuckData", "CardMap", "CardWeightChange", "BuffFlag", "JifenPer", "EventData", "LimitCardId", "ChangePoint", "JoinPower", "EndPower", "ReportCardLevel", "Limitcard", "Endtime", "NpcEventId", "NpcEventPoint", "BloodMonster", "MlTimes", "Traincard", "BeyondPlayerData", });
    internal_static_TrainDBMap_StarMapEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(0);
    internal_static_TrainDBMap_StarMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_StarMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_ItemMapEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(1);
    internal_static_TrainDBMap_ItemMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_ItemMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_PrepareUseEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(2);
    internal_static_TrainDBMap_PrepareUseEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_PrepareUseEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_ShopEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(3);
    internal_static_TrainDBMap_ShopEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_ShopEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_LuckDataEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(4);
    internal_static_TrainDBMap_LuckDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_LuckDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_CardMapEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(5);
    internal_static_TrainDBMap_CardMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_CardMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_CardWeightChangeEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(6);
    internal_static_TrainDBMap_CardWeightChangeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_CardWeightChangeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_BuffFlagEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(7);
    internal_static_TrainDBMap_BuffFlagEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_BuffFlagEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_ChangePointEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(8);
    internal_static_TrainDBMap_ChangePointEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_ChangePointEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_BloodMonsterEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(9);
    internal_static_TrainDBMap_BloodMonsterEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_BloodMonsterEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_MlTimesEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(10);
    internal_static_TrainDBMap_MlTimesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_MlTimesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBMap_BeyondPlayerDataEntry_descriptor =
      internal_static_TrainDBMap_descriptor.getNestedTypes().get(11);
    internal_static_TrainDBMap_BeyondPlayerDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBMap_BeyondPlayerDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainHelpPetData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TrainHelpPetData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainHelpPetData_descriptor,
        new java.lang.String[] { "PetId", "PointId", "PetCfgId", "PetLevel", "PetRarity", "PetUpLevel", });
    internal_static_TrainBloodMonster_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TrainBloodMonster_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainBloodMonster_descriptor,
        new java.lang.String[] { "HpRate", "Max", "Times", });
    internal_static_TrainBloodMonster_HpRateEntry_descriptor =
      internal_static_TrainBloodMonster_descriptor.getNestedTypes().get(0);
    internal_static_TrainBloodMonster_HpRateEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainBloodMonster_HpRateEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainDBData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_TrainDBData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBData_descriptor,
        new java.lang.String[] { "CurrMap", "Maps", "NoticeMap", "EndMap", });
    internal_static_TrainDBData_EndMapEntry_descriptor =
      internal_static_TrainDBData_descriptor.getNestedTypes().get(0);
    internal_static_TrainDBData_EndMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainDBData_EndMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainLuckData_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_TrainLuckData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainLuckData_descriptor,
        new java.lang.String[] { "Id", "Param1", "Type", "Level", "Flag", });
    internal_static_TraingEventData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_TraingEventData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraingEventData_descriptor,
        new java.lang.String[] { "LoseCount", "Level", "EventId", "CpPoint", "CpRecord", "RemoveIds", "StrongPoint", "CardGrade", "RewardEvents", "EventPoint", });
    internal_static_TraingEventData_LoseCountEntry_descriptor =
      internal_static_TraingEventData_descriptor.getNestedTypes().get(0);
    internal_static_TraingEventData_LoseCountEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraingEventData_LoseCountEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TraingEventData_CpPointEntry_descriptor =
      internal_static_TraingEventData_descriptor.getNestedTypes().get(1);
    internal_static_TraingEventData_CpPointEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraingEventData_CpPointEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TraingEventData_CardGradeEntry_descriptor =
      internal_static_TraingEventData_descriptor.getNestedTypes().get(2);
    internal_static_TraingEventData_CardGradeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraingEventData_CardGradeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TraingEventData_EventPointEntry_descriptor =
      internal_static_TraingEventData_descriptor.getNestedTypes().get(3);
    internal_static_TraingEventData_EventPointEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TraingEventData_EventPointEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainShopGroup_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_TrainShopGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainShopGroup_descriptor,
        new java.lang.String[] { "Item", "FreshTime", "GroupId", });
    internal_static_TrainShopGroup_ItemEntry_descriptor =
      internal_static_TrainShopGroup_descriptor.getNestedTypes().get(0);
    internal_static_TrainShopGroup_ItemEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainShopGroup_ItemEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_TrainCardChoice_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_TrainCardChoice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_TrainCardChoice_descriptor,
        new java.lang.String[] { "CardId", });
    protocol.Training.getDescriptor();
    protocol.Common.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
