// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CrossArenaDB.proto

package protocol;

public final class CrossArenaDB {
  private CrossArenaDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CrossArenaHonorDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CrossArenaHonorDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    java.util.List<java.lang.Integer> getFlishsList();
    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    int getFlishsCount();
    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    int getFlishs(int index);

    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */
    int getDbsCount();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */
    boolean containsDbs(
        int key);
    /**
     * Use {@link #getDbsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getDbs();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getDbsMap();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    int getDbsOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    int getDbsOrThrow(
        int key);

    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */
    int getHisTimeCount();
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */
    boolean containsHisTime(
        int key);
    /**
     * Use {@link #getHisTimeMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getHisTime();
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getHisTimeMap();
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    long getHisTimeOrDefault(
        int key,
        long defaultValue);
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    long getHisTimeOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code CrossArenaHonorDB}
   */
  public  static final class CrossArenaHonorDB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CrossArenaHonorDB)
      CrossArenaHonorDBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrossArenaHonorDB.newBuilder() to construct.
    private CrossArenaHonorDB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrossArenaHonorDB() {
      flishs_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CrossArenaHonorDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                flishs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              flishs_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                flishs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                flishs_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                dbs_ = com.google.protobuf.MapField.newMapField(
                    DbsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              dbs__ = input.readMessage(
                  DbsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dbs_.getMutableMap().put(
                  dbs__.getKey(), dbs__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                hisTime_ = com.google.protobuf.MapField.newMapField(
                    HisTimeDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              hisTime__ = input.readMessage(
                  HisTimeDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              hisTime_.getMutableMap().put(
                  hisTime__.getKey(), hisTime__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          flishs_ = java.util.Collections.unmodifiableList(flishs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetDbs();
        case 3:
          return internalGetHisTime();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.CrossArenaHonorDB.class, protocol.CrossArenaDB.CrossArenaHonorDB.Builder.class);
    }

    public static final int FLISHS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> flishs_;
    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getFlishsList() {
      return flishs_;
    }
    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    public int getFlishsCount() {
      return flishs_.size();
    }
    /**
     * <code>repeated int32 flishs = 1;</code>
     */
    public int getFlishs(int index) {
      return flishs_.get(index);
    }
    private int flishsMemoizedSerializedSize = -1;

    public static final int DBS_FIELD_NUMBER = 2;
    private static final class DbsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_DbsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> dbs_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetDbs() {
      if (dbs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DbsDefaultEntryHolder.defaultEntry);
      }
      return dbs_;
    }

    public int getDbsCount() {
      return internalGetDbs().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    public boolean containsDbs(
        int key) {
      
      return internalGetDbs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDbsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getDbs() {
      return getDbsMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getDbsMap() {
      return internalGetDbs().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    public int getDbsOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDbs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 2;</code>
     */

    public int getDbsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDbs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int HISTIME_FIELD_NUMBER = 3;
    private static final class HisTimeDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_HisTimeEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> hisTime_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetHisTime() {
      if (hisTime_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            HisTimeDefaultEntryHolder.defaultEntry);
      }
      return hisTime_;
    }

    public int getHisTimeCount() {
      return internalGetHisTime().getMap().size();
    }
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    public boolean containsHisTime(
        int key) {
      
      return internalGetHisTime().getMap().containsKey(key);
    }
    /**
     * Use {@link #getHisTimeMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getHisTime() {
      return getHisTimeMap();
    }
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getHisTimeMap() {
      return internalGetHisTime().getMap();
    }
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    public long getHisTimeOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetHisTime().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *第一次完成时间点
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
     */

    public long getHisTimeOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetHisTime().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getFlishsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(flishsMemoizedSerializedSize);
      }
      for (int i = 0; i < flishs_.size(); i++) {
        output.writeInt32NoTag(flishs_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetDbs(),
          DbsDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetHisTime(),
          HisTimeDefaultEntryHolder.defaultEntry,
          3);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < flishs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flishs_.get(i));
        }
        size += dataSize;
        if (!getFlishsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        flishsMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetDbs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        dbs__ = DbsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, dbs__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetHisTime().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        hisTime__ = HisTimeDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, hisTime__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.CrossArenaHonorDB)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.CrossArenaHonorDB other = (protocol.CrossArenaDB.CrossArenaHonorDB) obj;

      boolean result = true;
      result = result && getFlishsList()
          .equals(other.getFlishsList());
      result = result && internalGetDbs().equals(
          other.internalGetDbs());
      result = result && internalGetHisTime().equals(
          other.internalGetHisTime());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFlishsCount() > 0) {
        hash = (37 * hash) + FLISHS_FIELD_NUMBER;
        hash = (53 * hash) + getFlishsList().hashCode();
      }
      if (!internalGetDbs().getMap().isEmpty()) {
        hash = (37 * hash) + DBS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDbs().hashCode();
      }
      if (!internalGetHisTime().getMap().isEmpty()) {
        hash = (37 * hash) + HISTIME_FIELD_NUMBER;
        hash = (53 * hash) + internalGetHisTime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaHonorDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.CrossArenaHonorDB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CrossArenaHonorDB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CrossArenaHonorDB)
        protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetDbs();
          case 3:
            return internalGetHisTime();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableDbs();
          case 3:
            return internalGetMutableHisTime();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.CrossArenaHonorDB.class, protocol.CrossArenaDB.CrossArenaHonorDB.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.CrossArenaHonorDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        flishs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableDbs().clear();
        internalGetMutableHisTime().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_CrossArenaHonorDB_descriptor;
      }

      public protocol.CrossArenaDB.CrossArenaHonorDB getDefaultInstanceForType() {
        return protocol.CrossArenaDB.CrossArenaHonorDB.getDefaultInstance();
      }

      public protocol.CrossArenaDB.CrossArenaHonorDB build() {
        protocol.CrossArenaDB.CrossArenaHonorDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.CrossArenaHonorDB buildPartial() {
        protocol.CrossArenaDB.CrossArenaHonorDB result = new protocol.CrossArenaDB.CrossArenaHonorDB(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          flishs_ = java.util.Collections.unmodifiableList(flishs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.flishs_ = flishs_;
        result.dbs_ = internalGetDbs();
        result.dbs_.makeImmutable();
        result.hisTime_ = internalGetHisTime();
        result.hisTime_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.CrossArenaHonorDB) {
          return mergeFrom((protocol.CrossArenaDB.CrossArenaHonorDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.CrossArenaHonorDB other) {
        if (other == protocol.CrossArenaDB.CrossArenaHonorDB.getDefaultInstance()) return this;
        if (!other.flishs_.isEmpty()) {
          if (flishs_.isEmpty()) {
            flishs_ = other.flishs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFlishsIsMutable();
            flishs_.addAll(other.flishs_);
          }
          onChanged();
        }
        internalGetMutableDbs().mergeFrom(
            other.internalGetDbs());
        internalGetMutableHisTime().mergeFrom(
            other.internalGetHisTime());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.CrossArenaHonorDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.CrossArenaHonorDB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> flishs_ = java.util.Collections.emptyList();
      private void ensureFlishsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          flishs_ = new java.util.ArrayList<java.lang.Integer>(flishs_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getFlishsList() {
        return java.util.Collections.unmodifiableList(flishs_);
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public int getFlishsCount() {
        return flishs_.size();
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public int getFlishs(int index) {
        return flishs_.get(index);
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public Builder setFlishs(
          int index, int value) {
        ensureFlishsIsMutable();
        flishs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public Builder addFlishs(int value) {
        ensureFlishsIsMutable();
        flishs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public Builder addAllFlishs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlishsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, flishs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 flishs = 1;</code>
       */
      public Builder clearFlishs() {
        flishs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> dbs_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetDbs() {
        if (dbs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DbsDefaultEntryHolder.defaultEntry);
        }
        return dbs_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableDbs() {
        onChanged();;
        if (dbs_ == null) {
          dbs_ = com.google.protobuf.MapField.newMapField(
              DbsDefaultEntryHolder.defaultEntry);
        }
        if (!dbs_.isMutable()) {
          dbs_ = dbs_.copy();
        }
        return dbs_;
      }

      public int getDbsCount() {
        return internalGetDbs().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public boolean containsDbs(
          int key) {
        
        return internalGetDbs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDbsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getDbs() {
        return getDbsMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getDbsMap() {
        return internalGetDbs().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public int getDbsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetDbs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public int getDbsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetDbs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDbs() {
        internalGetMutableDbs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public Builder removeDbs(
          int key) {
        
        internalGetMutableDbs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableDbs() {
        return internalGetMutableDbs().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */
      public Builder putDbs(
          int key,
          int value) {
        
        
        internalGetMutableDbs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 2;</code>
       */

      public Builder putAllDbs(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableDbs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> hisTime_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetHisTime() {
        if (hisTime_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HisTimeDefaultEntryHolder.defaultEntry);
        }
        return hisTime_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableHisTime() {
        onChanged();;
        if (hisTime_ == null) {
          hisTime_ = com.google.protobuf.MapField.newMapField(
              HisTimeDefaultEntryHolder.defaultEntry);
        }
        if (!hisTime_.isMutable()) {
          hisTime_ = hisTime_.copy();
        }
        return hisTime_;
      }

      public int getHisTimeCount() {
        return internalGetHisTime().getMap().size();
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public boolean containsHisTime(
          int key) {
        
        return internalGetHisTime().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHisTimeMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getHisTime() {
        return getHisTimeMap();
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getHisTimeMap() {
        return internalGetHisTime().getMap();
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public long getHisTimeOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetHisTime().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public long getHisTimeOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetHisTime().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearHisTime() {
        internalGetMutableHisTime().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public Builder removeHisTime(
          int key) {
        
        internalGetMutableHisTime().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableHisTime() {
        return internalGetMutableHisTime().getMutableMap();
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */
      public Builder putHisTime(
          int key,
          long value) {
        
        
        internalGetMutableHisTime().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *第一次完成时间点
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; hisTime = 3;</code>
       */

      public Builder putAllHisTime(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableHisTime().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CrossArenaHonorDB)
    }

    // @@protoc_insertion_point(class_scope:CrossArenaHonorDB)
    private static final protocol.CrossArenaDB.CrossArenaHonorDB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.CrossArenaHonorDB();
    }

    public static protocol.CrossArenaDB.CrossArenaHonorDB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CrossArenaHonorDB>
        PARSER = new com.google.protobuf.AbstractParser<CrossArenaHonorDB>() {
      public CrossArenaHonorDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CrossArenaHonorDB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CrossArenaHonorDB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrossArenaHonorDB> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.CrossArenaHonorDB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CrossArenaPlayerDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CrossArenaPlayerDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */
    int getDbsCount();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */
    boolean containsDbs(
        int key);
    /**
     * Use {@link #getDbsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getDbs();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getDbsMap();
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    int getDbsOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    int getDbsOrThrow(
        int key);

    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */
    int getLtPetNumCount();
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */
    boolean containsLtPetNum(
        int key);
    /**
     * Use {@link #getLtPetNumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtPetNum();
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtPetNumMap();
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    int getLtPetNumOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    int getLtPetNumOrThrow(
        int key);

    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */
    int getLtPetWinNumCount();
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */
    boolean containsLtPetWinNum(
        int key);
    /**
     * Use {@link #getLtPetWinNumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtPetWinNum();
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtPetWinNumMap();
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    int getLtPetWinNumOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    int getLtPetWinNumOrThrow(
        int key);

    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */
    int getWeekBattleResCount();
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */
    boolean containsWeekBattleRes(
        int key);
    /**
     * Use {@link #getWeekBattleResMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekBattleRes();
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekBattleResMap();
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    int getWeekBattleResOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    int getWeekBattleResOrThrow(
        int key);

    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */
    int getEventFlishNumCount();
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */
    boolean containsEventFlishNum(
        int key);
    /**
     * Use {@link #getEventFlishNumMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEventFlishNum();
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getEventFlishNumMap();
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    int getEventFlishNumOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    int getEventFlishNumOrThrow(
        int key);

    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */
    int getEventCurCount();
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */
    boolean containsEventCur(
        int key);
    /**
     * Use {@link #getEventCurMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getEventCur();
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getEventCurMap();
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    long getEventCurOrDefault(
        int key,
        long defaultValue);
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    long getEventCurOrThrow(
        int key);

    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    boolean hasHonor();
    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    protocol.CrossArenaDB.CrossArenaHonorDB getHonor();
    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder getHonorOrBuilder();

    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    java.util.List<java.lang.Integer> getNoteAwardList();
    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    int getNoteAwardCount();
    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    int getNoteAward(int index);

    /**
     * <code>int32 hyDay = 9;</code>
     */
    int getHyDay();

    /**
     * <code>int64 jionTime = 10;</code>
     */
    long getJionTime();

    /**
     * <code>int64 leijiTime = 11;</code>
     */
    long getLeijiTime();

    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    java.util.List<java.lang.Integer> getAllBatWinList();
    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    int getAllBatWinCount();
    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    int getAllBatWin(int index);

    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */
    int getLtCotCootCount();
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */
    boolean containsLtCotCoot(
        int key);
    /**
     * Use {@link #getLtCotCootMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtCotCoot();
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLtCotCootMap();
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    int getLtCotCootOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    int getLtCotCootOrThrow(
        int key);

    /**
     * <code>int32 isAward = 14;</code>
     */
    int getIsAward();

    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */
    int getWeekTaskDataCount();
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */
    boolean containsWeekTaskData(
        int key);
    /**
     * Use {@link #getWeekTaskDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekTaskData();
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekTaskDataMap();
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    int getWeekTaskDataOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    int getWeekTaskDataOrThrow(
        int key);

    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */
    int getWeekTaskRewardCount();
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */
    boolean containsWeekTaskReward(
        int key);
    /**
     * Use {@link #getWeekTaskRewardMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekTaskReward();
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekTaskRewardMap();
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    int getWeekTaskRewardOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    int getWeekTaskRewardOrThrow(
        int key);

    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    java.util.List<java.lang.Integer> getWinTaskList();
    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    int getWinTaskCount();
    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    int getWinTask(int index);

    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */
    int getWeekBoxTaskCount();
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */
    boolean containsWeekBoxTask(
        int key);
    /**
     * Use {@link #getWeekBoxTaskMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekBoxTask();
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeekBoxTaskMap();
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    int getWeekBoxTaskOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    int getWeekBoxTaskOrThrow(
        int key);

    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox> 
        getPreWeekboxList();
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    protocol.CrossArena.CrossArenaTaskWeekBox getPreWeekbox(int index);
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    int getPreWeekboxCount();
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    java.util.List<? extends protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder> 
        getPreWeekboxOrBuilderList();
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder getPreWeekboxOrBuilder(
        int index);

    /**
     * <pre>
     *第一次进入擂台时间
     * </pre>
     *
     * <code>int64 firstJoinTime = 20;</code>
     */
    long getFirstJoinTime();

    /**
     * <pre>
     *今天使用连胜保护卡次数
     * </pre>
     *
     * <code>int32 todayUseWinProtect = 21;</code>
     */
    int getTodayUseWinProtect();

    /**
     * <pre>
     *当前免费上擂使用次数
     * </pre>
     *
     * <code>int32 curFreeLtAttTimes = 22;</code>
     */
    int getCurFreeLtAttTimes();

    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */
    int getSerialWinDataCount();
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */
    boolean containsSerialWinData(
        int key);
    /**
     * Use {@link #getSerialWinDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
    getSerialWinData();
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */
    java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
    getSerialWinDataMap();
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrDefault(
        int key,
        protocol.CrossArenaDB.DB_LTSerialWin defaultValue);
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrThrow(
        int key);

    /**
     * <pre>
     *选择连胜奖励的道场
     * </pre>
     *
     * <code>int32 dailyWinTaskScienceId = 24;</code>
     */
    int getDailyWinTaskScienceId();

    /**
     * <pre>
     *选择连胜奖励的道场
     * </pre>
     *
     * <code>int32 weeklyWinTaskScienceId = 25;</code>
     */
    int getWeeklyWinTaskScienceId();
  }
  /**
   * Protobuf type {@code CrossArenaPlayerDB}
   */
  public  static final class CrossArenaPlayerDB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CrossArenaPlayerDB)
      CrossArenaPlayerDBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrossArenaPlayerDB.newBuilder() to construct.
    private CrossArenaPlayerDB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrossArenaPlayerDB() {
      noteAward_ = java.util.Collections.emptyList();
      hyDay_ = 0;
      jionTime_ = 0L;
      leijiTime_ = 0L;
      allBatWin_ = java.util.Collections.emptyList();
      isAward_ = 0;
      winTask_ = java.util.Collections.emptyList();
      preWeekbox_ = java.util.Collections.emptyList();
      firstJoinTime_ = 0L;
      todayUseWinProtect_ = 0;
      curFreeLtAttTimes_ = 0;
      dailyWinTaskScienceId_ = 0;
      weeklyWinTaskScienceId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CrossArenaPlayerDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dbs_ = com.google.protobuf.MapField.newMapField(
                    DbsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              dbs__ = input.readMessage(
                  DbsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              dbs_.getMutableMap().put(
                  dbs__.getKey(), dbs__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                ltPetNum_ = com.google.protobuf.MapField.newMapField(
                    LtPetNumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              ltPetNum__ = input.readMessage(
                  LtPetNumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              ltPetNum_.getMutableMap().put(
                  ltPetNum__.getKey(), ltPetNum__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                ltPetWinNum_ = com.google.protobuf.MapField.newMapField(
                    LtPetWinNumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              ltPetWinNum__ = input.readMessage(
                  LtPetWinNumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              ltPetWinNum_.getMutableMap().put(
                  ltPetWinNum__.getKey(), ltPetWinNum__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                weekBattleRes_ = com.google.protobuf.MapField.newMapField(
                    WeekBattleResDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              weekBattleRes__ = input.readMessage(
                  WeekBattleResDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              weekBattleRes_.getMutableMap().put(
                  weekBattleRes__.getKey(), weekBattleRes__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                eventFlishNum_ = com.google.protobuf.MapField.newMapField(
                    EventFlishNumDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              eventFlishNum__ = input.readMessage(
                  EventFlishNumDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              eventFlishNum_.getMutableMap().put(
                  eventFlishNum__.getKey(), eventFlishNum__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                eventCur_ = com.google.protobuf.MapField.newMapField(
                    EventCurDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              eventCur__ = input.readMessage(
                  EventCurDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              eventCur_.getMutableMap().put(
                  eventCur__.getKey(), eventCur__.getValue());
              break;
            }
            case 58: {
              protocol.CrossArenaDB.CrossArenaHonorDB.Builder subBuilder = null;
              if (honor_ != null) {
                subBuilder = honor_.toBuilder();
              }
              honor_ = input.readMessage(protocol.CrossArenaDB.CrossArenaHonorDB.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(honor_);
                honor_ = subBuilder.buildPartial();
              }

              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                noteAward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              noteAward_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                noteAward_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                noteAward_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {

              hyDay_ = input.readInt32();
              break;
            }
            case 80: {

              jionTime_ = input.readInt64();
              break;
            }
            case 88: {

              leijiTime_ = input.readInt64();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                allBatWin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              allBatWin_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                allBatWin_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                allBatWin_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                ltCotCoot_ = com.google.protobuf.MapField.newMapField(
                    LtCotCootDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              ltCotCoot__ = input.readMessage(
                  LtCotCootDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              ltCotCoot_.getMutableMap().put(
                  ltCotCoot__.getKey(), ltCotCoot__.getValue());
              break;
            }
            case 112: {

              isAward_ = input.readInt32();
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                weekTaskData_ = com.google.protobuf.MapField.newMapField(
                    WeekTaskDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00004000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              weekTaskData__ = input.readMessage(
                  WeekTaskDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              weekTaskData_.getMutableMap().put(
                  weekTaskData__.getKey(), weekTaskData__.getValue());
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                weekTaskReward_ = com.google.protobuf.MapField.newMapField(
                    WeekTaskRewardDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00008000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              weekTaskReward__ = input.readMessage(
                  WeekTaskRewardDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              weekTaskReward_.getMutableMap().put(
                  weekTaskReward__.getKey(), weekTaskReward__.getValue());
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                winTask_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              winTask_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                winTask_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                winTask_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                weekBoxTask_ = com.google.protobuf.MapField.newMapField(
                    WeekBoxTaskDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00020000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              weekBoxTask__ = input.readMessage(
                  WeekBoxTaskDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              weekBoxTask_.getMutableMap().put(
                  weekBoxTask__.getKey(), weekBoxTask__.getValue());
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                preWeekbox_ = new java.util.ArrayList<protocol.CrossArena.CrossArenaTaskWeekBox>();
                mutable_bitField0_ |= 0x00040000;
              }
              preWeekbox_.add(
                  input.readMessage(protocol.CrossArena.CrossArenaTaskWeekBox.parser(), extensionRegistry));
              break;
            }
            case 160: {

              firstJoinTime_ = input.readInt64();
              break;
            }
            case 168: {

              todayUseWinProtect_ = input.readInt32();
              break;
            }
            case 176: {

              curFreeLtAttTimes_ = input.readInt32();
              break;
            }
            case 186: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                serialWinData_ = com.google.protobuf.MapField.newMapField(
                    SerialWinDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00400000;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
              serialWinData__ = input.readMessage(
                  SerialWinDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              serialWinData_.getMutableMap().put(
                  serialWinData__.getKey(), serialWinData__.getValue());
              break;
            }
            case 192: {

              dailyWinTaskScienceId_ = input.readInt32();
              break;
            }
            case 200: {

              weeklyWinTaskScienceId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          noteAward_ = java.util.Collections.unmodifiableList(noteAward_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          allBatWin_ = java.util.Collections.unmodifiableList(allBatWin_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          winTask_ = java.util.Collections.unmodifiableList(winTask_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          preWeekbox_ = java.util.Collections.unmodifiableList(preWeekbox_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetDbs();
        case 2:
          return internalGetLtPetNum();
        case 3:
          return internalGetLtPetWinNum();
        case 4:
          return internalGetWeekBattleRes();
        case 5:
          return internalGetEventFlishNum();
        case 6:
          return internalGetEventCur();
        case 13:
          return internalGetLtCotCoot();
        case 15:
          return internalGetWeekTaskData();
        case 16:
          return internalGetWeekTaskReward();
        case 18:
          return internalGetWeekBoxTask();
        case 23:
          return internalGetSerialWinData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.CrossArenaPlayerDB.class, protocol.CrossArenaDB.CrossArenaPlayerDB.Builder.class);
    }

    private int bitField0_;
    public static final int DBS_FIELD_NUMBER = 1;
    private static final class DbsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_DbsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> dbs_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetDbs() {
      if (dbs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            DbsDefaultEntryHolder.defaultEntry);
      }
      return dbs_;
    }

    public int getDbsCount() {
      return internalGetDbs().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    public boolean containsDbs(
        int key) {
      
      return internalGetDbs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getDbsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getDbs() {
      return getDbsMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getDbsMap() {
      return internalGetDbs().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    public int getDbsOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDbs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; dbs = 1;</code>
     */

    public int getDbsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetDbs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LTPETNUM_FIELD_NUMBER = 2;
    private static final class LtPetNumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_LtPetNumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> ltPetNum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLtPetNum() {
      if (ltPetNum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LtPetNumDefaultEntryHolder.defaultEntry);
      }
      return ltPetNum_;
    }

    public int getLtPetNumCount() {
      return internalGetLtPetNum().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    public boolean containsLtPetNum(
        int key) {
      
      return internalGetLtPetNum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLtPetNumMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetNum() {
      return getLtPetNumMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetNumMap() {
      return internalGetLtPetNum().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    public int getLtPetNumOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtPetNum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
     */

    public int getLtPetNumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtPetNum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LTPETWINNUM_FIELD_NUMBER = 3;
    private static final class LtPetWinNumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> ltPetWinNum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLtPetWinNum() {
      if (ltPetWinNum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LtPetWinNumDefaultEntryHolder.defaultEntry);
      }
      return ltPetWinNum_;
    }

    public int getLtPetWinNumCount() {
      return internalGetLtPetWinNum().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    public boolean containsLtPetWinNum(
        int key) {
      
      return internalGetLtPetWinNum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLtPetWinNumMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetWinNum() {
      return getLtPetWinNumMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetWinNumMap() {
      return internalGetLtPetWinNum().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    public int getLtPetWinNumOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtPetWinNum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
     */

    public int getLtPetWinNumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtPetWinNum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WEEKBATTLERES_FIELD_NUMBER = 4;
    private static final class WeekBattleResDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_WeekBattleResEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> weekBattleRes_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWeekBattleRes() {
      if (weekBattleRes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeekBattleResDefaultEntryHolder.defaultEntry);
      }
      return weekBattleRes_;
    }

    public int getWeekBattleResCount() {
      return internalGetWeekBattleRes().getMap().size();
    }
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    public boolean containsWeekBattleRes(
        int key) {
      
      return internalGetWeekBattleRes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeekBattleResMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBattleRes() {
      return getWeekBattleResMap();
    }
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBattleResMap() {
      return internalGetWeekBattleRes().getMap();
    }
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    public int getWeekBattleResOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekBattleRes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 记录每周战斗结果数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
     */

    public int getWeekBattleResOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekBattleRes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EVENTFLISHNUM_FIELD_NUMBER = 5;
    private static final class EventFlishNumDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_EventFlishNumEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> eventFlishNum_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetEventFlishNum() {
      if (eventFlishNum_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EventFlishNumDefaultEntryHolder.defaultEntry);
      }
      return eventFlishNum_;
    }

    public int getEventFlishNumCount() {
      return internalGetEventFlishNum().getMap().size();
    }
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    public boolean containsEventFlishNum(
        int key) {
      
      return internalGetEventFlishNum().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEventFlishNumMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getEventFlishNum() {
      return getEventFlishNumMap();
    }
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getEventFlishNumMap() {
      return internalGetEventFlishNum().getMap();
    }
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    public int getEventFlishNumOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEventFlishNum().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * 事件完成次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
     */

    public int getEventFlishNumOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetEventFlishNum().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EVENTCUR_FIELD_NUMBER = 6;
    private static final class EventCurDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_EventCurEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> eventCur_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetEventCur() {
      if (eventCur_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EventCurDefaultEntryHolder.defaultEntry);
      }
      return eventCur_;
    }

    public int getEventCurCount() {
      return internalGetEventCur().getMap().size();
    }
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    public boolean containsEventCur(
        int key) {
      
      return internalGetEventCur().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEventCurMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getEventCur() {
      return getEventCurMap();
    }
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getEventCurMap() {
      return internalGetEventCur().getMap();
    }
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    public long getEventCurOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetEventCur().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *当前事件
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
     */

    public long getEventCurOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetEventCur().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int HONOR_FIELD_NUMBER = 7;
    private protocol.CrossArenaDB.CrossArenaHonorDB honor_;
    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    public boolean hasHonor() {
      return honor_ != null;
    }
    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    public protocol.CrossArenaDB.CrossArenaHonorDB getHonor() {
      return honor_ == null ? protocol.CrossArenaDB.CrossArenaHonorDB.getDefaultInstance() : honor_;
    }
    /**
     * <pre>
     *成就记录
     * </pre>
     *
     * <code>.CrossArenaHonorDB honor = 7;</code>
     */
    public protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder getHonorOrBuilder() {
      return getHonor();
    }

    public static final int NOTEAWARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> noteAward_;
    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getNoteAwardList() {
      return noteAward_;
    }
    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    public int getNoteAwardCount() {
      return noteAward_.size();
    }
    /**
     * <code>repeated int32 noteAward = 8;</code>
     */
    public int getNoteAward(int index) {
      return noteAward_.get(index);
    }
    private int noteAwardMemoizedSerializedSize = -1;

    public static final int HYDAY_FIELD_NUMBER = 9;
    private int hyDay_;
    /**
     * <code>int32 hyDay = 9;</code>
     */
    public int getHyDay() {
      return hyDay_;
    }

    public static final int JIONTIME_FIELD_NUMBER = 10;
    private long jionTime_;
    /**
     * <code>int64 jionTime = 10;</code>
     */
    public long getJionTime() {
      return jionTime_;
    }

    public static final int LEIJITIME_FIELD_NUMBER = 11;
    private long leijiTime_;
    /**
     * <code>int64 leijiTime = 11;</code>
     */
    public long getLeijiTime() {
      return leijiTime_;
    }

    public static final int ALLBATWIN_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> allBatWin_;
    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    public java.util.List<java.lang.Integer>
        getAllBatWinList() {
      return allBatWin_;
    }
    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    public int getAllBatWinCount() {
      return allBatWin_.size();
    }
    /**
     * <pre>
     * 记录每次战斗结果
     * </pre>
     *
     * <code>repeated int32 allBatWin = 12;</code>
     */
    public int getAllBatWin(int index) {
      return allBatWin_.get(index);
    }
    private int allBatWinMemoizedSerializedSize = -1;

    public static final int LTCOTCOOT_FIELD_NUMBER = 13;
    private static final class LtCotCootDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_LtCotCootEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> ltCotCoot_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLtCotCoot() {
      if (ltCotCoot_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LtCotCootDefaultEntryHolder.defaultEntry);
      }
      return ltCotCoot_;
    }

    public int getLtCotCootCount() {
      return internalGetLtCotCoot().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    public boolean containsLtCotCoot(
        int key) {
      
      return internalGetLtCotCoot().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLtCotCootMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtCotCoot() {
      return getLtCotCootMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLtCotCootMap() {
      return internalGetLtCotCoot().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    public int getLtCotCootOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtCotCoot().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
     */

    public int getLtCotCootOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLtCotCoot().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ISAWARD_FIELD_NUMBER = 14;
    private int isAward_;
    /**
     * <code>int32 isAward = 14;</code>
     */
    public int getIsAward() {
      return isAward_;
    }

    public static final int WEEKTASKDATA_FIELD_NUMBER = 15;
    private static final class WeekTaskDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> weekTaskData_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWeekTaskData() {
      if (weekTaskData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeekTaskDataDefaultEntryHolder.defaultEntry);
      }
      return weekTaskData_;
    }

    public int getWeekTaskDataCount() {
      return internalGetWeekTaskData().getMap().size();
    }
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    public boolean containsWeekTaskData(
        int key) {
      
      return internalGetWeekTaskData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeekTaskDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskData() {
      return getWeekTaskDataMap();
    }
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskDataMap() {
      return internalGetWeekTaskData().getMap();
    }
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    public int getWeekTaskDataOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekTaskData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *荣耀周活动任务数据记录
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
     */

    public int getWeekTaskDataOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekTaskData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WEEKTASKREWARD_FIELD_NUMBER = 16;
    private static final class WeekTaskRewardDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> weekTaskReward_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWeekTaskReward() {
      if (weekTaskReward_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeekTaskRewardDefaultEntryHolder.defaultEntry);
      }
      return weekTaskReward_;
    }

    public int getWeekTaskRewardCount() {
      return internalGetWeekTaskReward().getMap().size();
    }
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    public boolean containsWeekTaskReward(
        int key) {
      
      return internalGetWeekTaskReward().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeekTaskRewardMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskReward() {
      return getWeekTaskRewardMap();
    }
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskRewardMap() {
      return internalGetWeekTaskReward().getMap();
    }
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    public int getWeekTaskRewardOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekTaskReward().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *荣耀周活动任务领取情况
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
     */

    public int getWeekTaskRewardOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekTaskReward().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WINTASK_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> winTask_;
    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    public java.util.List<java.lang.Integer>
        getWinTaskList() {
      return winTask_;
    }
    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    public int getWinTaskCount() {
      return winTask_.size();
    }
    /**
     * <pre>
     *连胜任务领取情况
     * </pre>
     *
     * <code>repeated int32 winTask = 17;</code>
     */
    public int getWinTask(int index) {
      return winTask_.get(index);
    }
    private int winTaskMemoizedSerializedSize = -1;

    public static final int WEEKBOXTASK_FIELD_NUMBER = 18;
    private static final class WeekBoxTaskDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> weekBoxTask_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWeekBoxTask() {
      if (weekBoxTask_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeekBoxTaskDefaultEntryHolder.defaultEntry);
      }
      return weekBoxTask_;
    }

    public int getWeekBoxTaskCount() {
      return internalGetWeekBoxTask().getMap().size();
    }
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    public boolean containsWeekBoxTask(
        int key) {
      
      return internalGetWeekBoxTask().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeekBoxTaskMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBoxTask() {
      return getWeekBoxTaskMap();
    }
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBoxTaskMap() {
      return internalGetWeekBoxTask().getMap();
    }
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    public int getWeekBoxTaskOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekBoxTask().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *周宝箱数据
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
     */

    public int getWeekBoxTaskOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeekBoxTask().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PREWEEKBOX_FIELD_NUMBER = 19;
    private java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox> preWeekbox_;
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    public java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox> getPreWeekboxList() {
      return preWeekbox_;
    }
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    public java.util.List<? extends protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder> 
        getPreWeekboxOrBuilderList() {
      return preWeekbox_;
    }
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    public int getPreWeekboxCount() {
      return preWeekbox_.size();
    }
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    public protocol.CrossArena.CrossArenaTaskWeekBox getPreWeekbox(int index) {
      return preWeekbox_.get(index);
    }
    /**
     * <pre>
     *周宝箱上周数据
     * </pre>
     *
     * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
     */
    public protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder getPreWeekboxOrBuilder(
        int index) {
      return preWeekbox_.get(index);
    }

    public static final int FIRSTJOINTIME_FIELD_NUMBER = 20;
    private long firstJoinTime_;
    /**
     * <pre>
     *第一次进入擂台时间
     * </pre>
     *
     * <code>int64 firstJoinTime = 20;</code>
     */
    public long getFirstJoinTime() {
      return firstJoinTime_;
    }

    public static final int TODAYUSEWINPROTECT_FIELD_NUMBER = 21;
    private int todayUseWinProtect_;
    /**
     * <pre>
     *今天使用连胜保护卡次数
     * </pre>
     *
     * <code>int32 todayUseWinProtect = 21;</code>
     */
    public int getTodayUseWinProtect() {
      return todayUseWinProtect_;
    }

    public static final int CURFREELTATTTIMES_FIELD_NUMBER = 22;
    private int curFreeLtAttTimes_;
    /**
     * <pre>
     *当前免费上擂使用次数
     * </pre>
     *
     * <code>int32 curFreeLtAttTimes = 22;</code>
     */
    public int getCurFreeLtAttTimes() {
      return curFreeLtAttTimes_;
    }

    public static final int SERIALWINDATA_FIELD_NUMBER = 23;
    private static final class SerialWinDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_SerialWinDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.CrossArenaDB.DB_LTSerialWin.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> serialWinData_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
    internalGetSerialWinData() {
      if (serialWinData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SerialWinDataDefaultEntryHolder.defaultEntry);
      }
      return serialWinData_;
    }

    public int getSerialWinDataCount() {
      return internalGetSerialWinData().getMap().size();
    }
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    public boolean containsSerialWinData(
        int key) {
      
      return internalGetSerialWinData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSerialWinDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> getSerialWinData() {
      return getSerialWinDataMap();
    }
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> getSerialWinDataMap() {
      return internalGetSerialWinData().getMap();
    }
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    public protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrDefault(
        int key,
        protocol.CrossArenaDB.DB_LTSerialWin defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> map =
          internalGetSerialWinData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *连胜记录  (&lt;道场id,连胜db&gt;)
     * </pre>
     *
     * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
     */

    public protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> map =
          internalGetSerialWinData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DAILYWINTASKSCIENCEID_FIELD_NUMBER = 24;
    private int dailyWinTaskScienceId_;
    /**
     * <pre>
     *选择连胜奖励的道场
     * </pre>
     *
     * <code>int32 dailyWinTaskScienceId = 24;</code>
     */
    public int getDailyWinTaskScienceId() {
      return dailyWinTaskScienceId_;
    }

    public static final int WEEKLYWINTASKSCIENCEID_FIELD_NUMBER = 25;
    private int weeklyWinTaskScienceId_;
    /**
     * <pre>
     *选择连胜奖励的道场
     * </pre>
     *
     * <code>int32 weeklyWinTaskScienceId = 25;</code>
     */
    public int getWeeklyWinTaskScienceId() {
      return weeklyWinTaskScienceId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetDbs(),
          DbsDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLtPetNum(),
          LtPetNumDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLtPetWinNum(),
          LtPetWinNumDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWeekBattleRes(),
          WeekBattleResDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEventFlishNum(),
          EventFlishNumDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetEventCur(),
          EventCurDefaultEntryHolder.defaultEntry,
          6);
      if (honor_ != null) {
        output.writeMessage(7, getHonor());
      }
      if (getNoteAwardList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(noteAwardMemoizedSerializedSize);
      }
      for (int i = 0; i < noteAward_.size(); i++) {
        output.writeInt32NoTag(noteAward_.get(i));
      }
      if (hyDay_ != 0) {
        output.writeInt32(9, hyDay_);
      }
      if (jionTime_ != 0L) {
        output.writeInt64(10, jionTime_);
      }
      if (leijiTime_ != 0L) {
        output.writeInt64(11, leijiTime_);
      }
      if (getAllBatWinList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(allBatWinMemoizedSerializedSize);
      }
      for (int i = 0; i < allBatWin_.size(); i++) {
        output.writeInt32NoTag(allBatWin_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLtCotCoot(),
          LtCotCootDefaultEntryHolder.defaultEntry,
          13);
      if (isAward_ != 0) {
        output.writeInt32(14, isAward_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWeekTaskData(),
          WeekTaskDataDefaultEntryHolder.defaultEntry,
          15);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWeekTaskReward(),
          WeekTaskRewardDefaultEntryHolder.defaultEntry,
          16);
      if (getWinTaskList().size() > 0) {
        output.writeUInt32NoTag(138);
        output.writeUInt32NoTag(winTaskMemoizedSerializedSize);
      }
      for (int i = 0; i < winTask_.size(); i++) {
        output.writeInt32NoTag(winTask_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWeekBoxTask(),
          WeekBoxTaskDefaultEntryHolder.defaultEntry,
          18);
      for (int i = 0; i < preWeekbox_.size(); i++) {
        output.writeMessage(19, preWeekbox_.get(i));
      }
      if (firstJoinTime_ != 0L) {
        output.writeInt64(20, firstJoinTime_);
      }
      if (todayUseWinProtect_ != 0) {
        output.writeInt32(21, todayUseWinProtect_);
      }
      if (curFreeLtAttTimes_ != 0) {
        output.writeInt32(22, curFreeLtAttTimes_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSerialWinData(),
          SerialWinDataDefaultEntryHolder.defaultEntry,
          23);
      if (dailyWinTaskScienceId_ != 0) {
        output.writeInt32(24, dailyWinTaskScienceId_);
      }
      if (weeklyWinTaskScienceId_ != 0) {
        output.writeInt32(25, weeklyWinTaskScienceId_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetDbs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        dbs__ = DbsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, dbs__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLtPetNum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        ltPetNum__ = LtPetNumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, ltPetNum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLtPetWinNum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        ltPetWinNum__ = LtPetWinNumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, ltPetWinNum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWeekBattleRes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        weekBattleRes__ = WeekBattleResDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, weekBattleRes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetEventFlishNum().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        eventFlishNum__ = EventFlishNumDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, eventFlishNum__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetEventCur().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        eventCur__ = EventCurDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, eventCur__);
      }
      if (honor_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getHonor());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < noteAward_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(noteAward_.get(i));
        }
        size += dataSize;
        if (!getNoteAwardList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        noteAwardMemoizedSerializedSize = dataSize;
      }
      if (hyDay_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, hyDay_);
      }
      if (jionTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, jionTime_);
      }
      if (leijiTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, leijiTime_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < allBatWin_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(allBatWin_.get(i));
        }
        size += dataSize;
        if (!getAllBatWinList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        allBatWinMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLtCotCoot().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        ltCotCoot__ = LtCotCootDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, ltCotCoot__);
      }
      if (isAward_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isAward_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWeekTaskData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        weekTaskData__ = WeekTaskDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, weekTaskData__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWeekTaskReward().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        weekTaskReward__ = WeekTaskRewardDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, weekTaskReward__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < winTask_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(winTask_.get(i));
        }
        size += dataSize;
        if (!getWinTaskList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        winTaskMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWeekBoxTask().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        weekBoxTask__ = WeekBoxTaskDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(18, weekBoxTask__);
      }
      for (int i = 0; i < preWeekbox_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, preWeekbox_.get(i));
      }
      if (firstJoinTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, firstJoinTime_);
      }
      if (todayUseWinProtect_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, todayUseWinProtect_);
      }
      if (curFreeLtAttTimes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, curFreeLtAttTimes_);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> entry
           : internalGetSerialWinData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
        serialWinData__ = SerialWinDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(23, serialWinData__);
      }
      if (dailyWinTaskScienceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, dailyWinTaskScienceId_);
      }
      if (weeklyWinTaskScienceId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, weeklyWinTaskScienceId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.CrossArenaPlayerDB)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.CrossArenaPlayerDB other = (protocol.CrossArenaDB.CrossArenaPlayerDB) obj;

      boolean result = true;
      result = result && internalGetDbs().equals(
          other.internalGetDbs());
      result = result && internalGetLtPetNum().equals(
          other.internalGetLtPetNum());
      result = result && internalGetLtPetWinNum().equals(
          other.internalGetLtPetWinNum());
      result = result && internalGetWeekBattleRes().equals(
          other.internalGetWeekBattleRes());
      result = result && internalGetEventFlishNum().equals(
          other.internalGetEventFlishNum());
      result = result && internalGetEventCur().equals(
          other.internalGetEventCur());
      result = result && (hasHonor() == other.hasHonor());
      if (hasHonor()) {
        result = result && getHonor()
            .equals(other.getHonor());
      }
      result = result && getNoteAwardList()
          .equals(other.getNoteAwardList());
      result = result && (getHyDay()
          == other.getHyDay());
      result = result && (getJionTime()
          == other.getJionTime());
      result = result && (getLeijiTime()
          == other.getLeijiTime());
      result = result && getAllBatWinList()
          .equals(other.getAllBatWinList());
      result = result && internalGetLtCotCoot().equals(
          other.internalGetLtCotCoot());
      result = result && (getIsAward()
          == other.getIsAward());
      result = result && internalGetWeekTaskData().equals(
          other.internalGetWeekTaskData());
      result = result && internalGetWeekTaskReward().equals(
          other.internalGetWeekTaskReward());
      result = result && getWinTaskList()
          .equals(other.getWinTaskList());
      result = result && internalGetWeekBoxTask().equals(
          other.internalGetWeekBoxTask());
      result = result && getPreWeekboxList()
          .equals(other.getPreWeekboxList());
      result = result && (getFirstJoinTime()
          == other.getFirstJoinTime());
      result = result && (getTodayUseWinProtect()
          == other.getTodayUseWinProtect());
      result = result && (getCurFreeLtAttTimes()
          == other.getCurFreeLtAttTimes());
      result = result && internalGetSerialWinData().equals(
          other.internalGetSerialWinData());
      result = result && (getDailyWinTaskScienceId()
          == other.getDailyWinTaskScienceId());
      result = result && (getWeeklyWinTaskScienceId()
          == other.getWeeklyWinTaskScienceId());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetDbs().getMap().isEmpty()) {
        hash = (37 * hash) + DBS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetDbs().hashCode();
      }
      if (!internalGetLtPetNum().getMap().isEmpty()) {
        hash = (37 * hash) + LTPETNUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLtPetNum().hashCode();
      }
      if (!internalGetLtPetWinNum().getMap().isEmpty()) {
        hash = (37 * hash) + LTPETWINNUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLtPetWinNum().hashCode();
      }
      if (!internalGetWeekBattleRes().getMap().isEmpty()) {
        hash = (37 * hash) + WEEKBATTLERES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWeekBattleRes().hashCode();
      }
      if (!internalGetEventFlishNum().getMap().isEmpty()) {
        hash = (37 * hash) + EVENTFLISHNUM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEventFlishNum().hashCode();
      }
      if (!internalGetEventCur().getMap().isEmpty()) {
        hash = (37 * hash) + EVENTCUR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEventCur().hashCode();
      }
      if (hasHonor()) {
        hash = (37 * hash) + HONOR_FIELD_NUMBER;
        hash = (53 * hash) + getHonor().hashCode();
      }
      if (getNoteAwardCount() > 0) {
        hash = (37 * hash) + NOTEAWARD_FIELD_NUMBER;
        hash = (53 * hash) + getNoteAwardList().hashCode();
      }
      hash = (37 * hash) + HYDAY_FIELD_NUMBER;
      hash = (53 * hash) + getHyDay();
      hash = (37 * hash) + JIONTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getJionTime());
      hash = (37 * hash) + LEIJITIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLeijiTime());
      if (getAllBatWinCount() > 0) {
        hash = (37 * hash) + ALLBATWIN_FIELD_NUMBER;
        hash = (53 * hash) + getAllBatWinList().hashCode();
      }
      if (!internalGetLtCotCoot().getMap().isEmpty()) {
        hash = (37 * hash) + LTCOTCOOT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLtCotCoot().hashCode();
      }
      hash = (37 * hash) + ISAWARD_FIELD_NUMBER;
      hash = (53 * hash) + getIsAward();
      if (!internalGetWeekTaskData().getMap().isEmpty()) {
        hash = (37 * hash) + WEEKTASKDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWeekTaskData().hashCode();
      }
      if (!internalGetWeekTaskReward().getMap().isEmpty()) {
        hash = (37 * hash) + WEEKTASKREWARD_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWeekTaskReward().hashCode();
      }
      if (getWinTaskCount() > 0) {
        hash = (37 * hash) + WINTASK_FIELD_NUMBER;
        hash = (53 * hash) + getWinTaskList().hashCode();
      }
      if (!internalGetWeekBoxTask().getMap().isEmpty()) {
        hash = (37 * hash) + WEEKBOXTASK_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWeekBoxTask().hashCode();
      }
      if (getPreWeekboxCount() > 0) {
        hash = (37 * hash) + PREWEEKBOX_FIELD_NUMBER;
        hash = (53 * hash) + getPreWeekboxList().hashCode();
      }
      hash = (37 * hash) + FIRSTJOINTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFirstJoinTime());
      hash = (37 * hash) + TODAYUSEWINPROTECT_FIELD_NUMBER;
      hash = (53 * hash) + getTodayUseWinProtect();
      hash = (37 * hash) + CURFREELTATTTIMES_FIELD_NUMBER;
      hash = (53 * hash) + getCurFreeLtAttTimes();
      if (!internalGetSerialWinData().getMap().isEmpty()) {
        hash = (37 * hash) + SERIALWINDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSerialWinData().hashCode();
      }
      hash = (37 * hash) + DAILYWINTASKSCIENCEID_FIELD_NUMBER;
      hash = (53 * hash) + getDailyWinTaskScienceId();
      hash = (37 * hash) + WEEKLYWINTASKSCIENCEID_FIELD_NUMBER;
      hash = (53 * hash) + getWeeklyWinTaskScienceId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.CrossArenaPlayerDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.CrossArenaPlayerDB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CrossArenaPlayerDB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CrossArenaPlayerDB)
        protocol.CrossArenaDB.CrossArenaPlayerDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetDbs();
          case 2:
            return internalGetLtPetNum();
          case 3:
            return internalGetLtPetWinNum();
          case 4:
            return internalGetWeekBattleRes();
          case 5:
            return internalGetEventFlishNum();
          case 6:
            return internalGetEventCur();
          case 13:
            return internalGetLtCotCoot();
          case 15:
            return internalGetWeekTaskData();
          case 16:
            return internalGetWeekTaskReward();
          case 18:
            return internalGetWeekBoxTask();
          case 23:
            return internalGetSerialWinData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableDbs();
          case 2:
            return internalGetMutableLtPetNum();
          case 3:
            return internalGetMutableLtPetWinNum();
          case 4:
            return internalGetMutableWeekBattleRes();
          case 5:
            return internalGetMutableEventFlishNum();
          case 6:
            return internalGetMutableEventCur();
          case 13:
            return internalGetMutableLtCotCoot();
          case 15:
            return internalGetMutableWeekTaskData();
          case 16:
            return internalGetMutableWeekTaskReward();
          case 18:
            return internalGetMutableWeekBoxTask();
          case 23:
            return internalGetMutableSerialWinData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.CrossArenaPlayerDB.class, protocol.CrossArenaDB.CrossArenaPlayerDB.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.CrossArenaPlayerDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getPreWeekboxFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableDbs().clear();
        internalGetMutableLtPetNum().clear();
        internalGetMutableLtPetWinNum().clear();
        internalGetMutableWeekBattleRes().clear();
        internalGetMutableEventFlishNum().clear();
        internalGetMutableEventCur().clear();
        if (honorBuilder_ == null) {
          honor_ = null;
        } else {
          honor_ = null;
          honorBuilder_ = null;
        }
        noteAward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        hyDay_ = 0;

        jionTime_ = 0L;

        leijiTime_ = 0L;

        allBatWin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        internalGetMutableLtCotCoot().clear();
        isAward_ = 0;

        internalGetMutableWeekTaskData().clear();
        internalGetMutableWeekTaskReward().clear();
        winTask_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        internalGetMutableWeekBoxTask().clear();
        if (preWeekboxBuilder_ == null) {
          preWeekbox_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
        } else {
          preWeekboxBuilder_.clear();
        }
        firstJoinTime_ = 0L;

        todayUseWinProtect_ = 0;

        curFreeLtAttTimes_ = 0;

        internalGetMutableSerialWinData().clear();
        dailyWinTaskScienceId_ = 0;

        weeklyWinTaskScienceId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_CrossArenaPlayerDB_descriptor;
      }

      public protocol.CrossArenaDB.CrossArenaPlayerDB getDefaultInstanceForType() {
        return protocol.CrossArenaDB.CrossArenaPlayerDB.getDefaultInstance();
      }

      public protocol.CrossArenaDB.CrossArenaPlayerDB build() {
        protocol.CrossArenaDB.CrossArenaPlayerDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.CrossArenaPlayerDB buildPartial() {
        protocol.CrossArenaDB.CrossArenaPlayerDB result = new protocol.CrossArenaDB.CrossArenaPlayerDB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.dbs_ = internalGetDbs();
        result.dbs_.makeImmutable();
        result.ltPetNum_ = internalGetLtPetNum();
        result.ltPetNum_.makeImmutable();
        result.ltPetWinNum_ = internalGetLtPetWinNum();
        result.ltPetWinNum_.makeImmutable();
        result.weekBattleRes_ = internalGetWeekBattleRes();
        result.weekBattleRes_.makeImmutable();
        result.eventFlishNum_ = internalGetEventFlishNum();
        result.eventFlishNum_.makeImmutable();
        result.eventCur_ = internalGetEventCur();
        result.eventCur_.makeImmutable();
        if (honorBuilder_ == null) {
          result.honor_ = honor_;
        } else {
          result.honor_ = honorBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          noteAward_ = java.util.Collections.unmodifiableList(noteAward_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.noteAward_ = noteAward_;
        result.hyDay_ = hyDay_;
        result.jionTime_ = jionTime_;
        result.leijiTime_ = leijiTime_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          allBatWin_ = java.util.Collections.unmodifiableList(allBatWin_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.allBatWin_ = allBatWin_;
        result.ltCotCoot_ = internalGetLtCotCoot();
        result.ltCotCoot_.makeImmutable();
        result.isAward_ = isAward_;
        result.weekTaskData_ = internalGetWeekTaskData();
        result.weekTaskData_.makeImmutable();
        result.weekTaskReward_ = internalGetWeekTaskReward();
        result.weekTaskReward_.makeImmutable();
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          winTask_ = java.util.Collections.unmodifiableList(winTask_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.winTask_ = winTask_;
        result.weekBoxTask_ = internalGetWeekBoxTask();
        result.weekBoxTask_.makeImmutable();
        if (preWeekboxBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000)) {
            preWeekbox_ = java.util.Collections.unmodifiableList(preWeekbox_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.preWeekbox_ = preWeekbox_;
        } else {
          result.preWeekbox_ = preWeekboxBuilder_.build();
        }
        result.firstJoinTime_ = firstJoinTime_;
        result.todayUseWinProtect_ = todayUseWinProtect_;
        result.curFreeLtAttTimes_ = curFreeLtAttTimes_;
        result.serialWinData_ = internalGetSerialWinData();
        result.serialWinData_.makeImmutable();
        result.dailyWinTaskScienceId_ = dailyWinTaskScienceId_;
        result.weeklyWinTaskScienceId_ = weeklyWinTaskScienceId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.CrossArenaPlayerDB) {
          return mergeFrom((protocol.CrossArenaDB.CrossArenaPlayerDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.CrossArenaPlayerDB other) {
        if (other == protocol.CrossArenaDB.CrossArenaPlayerDB.getDefaultInstance()) return this;
        internalGetMutableDbs().mergeFrom(
            other.internalGetDbs());
        internalGetMutableLtPetNum().mergeFrom(
            other.internalGetLtPetNum());
        internalGetMutableLtPetWinNum().mergeFrom(
            other.internalGetLtPetWinNum());
        internalGetMutableWeekBattleRes().mergeFrom(
            other.internalGetWeekBattleRes());
        internalGetMutableEventFlishNum().mergeFrom(
            other.internalGetEventFlishNum());
        internalGetMutableEventCur().mergeFrom(
            other.internalGetEventCur());
        if (other.hasHonor()) {
          mergeHonor(other.getHonor());
        }
        if (!other.noteAward_.isEmpty()) {
          if (noteAward_.isEmpty()) {
            noteAward_ = other.noteAward_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureNoteAwardIsMutable();
            noteAward_.addAll(other.noteAward_);
          }
          onChanged();
        }
        if (other.getHyDay() != 0) {
          setHyDay(other.getHyDay());
        }
        if (other.getJionTime() != 0L) {
          setJionTime(other.getJionTime());
        }
        if (other.getLeijiTime() != 0L) {
          setLeijiTime(other.getLeijiTime());
        }
        if (!other.allBatWin_.isEmpty()) {
          if (allBatWin_.isEmpty()) {
            allBatWin_ = other.allBatWin_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureAllBatWinIsMutable();
            allBatWin_.addAll(other.allBatWin_);
          }
          onChanged();
        }
        internalGetMutableLtCotCoot().mergeFrom(
            other.internalGetLtCotCoot());
        if (other.getIsAward() != 0) {
          setIsAward(other.getIsAward());
        }
        internalGetMutableWeekTaskData().mergeFrom(
            other.internalGetWeekTaskData());
        internalGetMutableWeekTaskReward().mergeFrom(
            other.internalGetWeekTaskReward());
        if (!other.winTask_.isEmpty()) {
          if (winTask_.isEmpty()) {
            winTask_ = other.winTask_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureWinTaskIsMutable();
            winTask_.addAll(other.winTask_);
          }
          onChanged();
        }
        internalGetMutableWeekBoxTask().mergeFrom(
            other.internalGetWeekBoxTask());
        if (preWeekboxBuilder_ == null) {
          if (!other.preWeekbox_.isEmpty()) {
            if (preWeekbox_.isEmpty()) {
              preWeekbox_ = other.preWeekbox_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensurePreWeekboxIsMutable();
              preWeekbox_.addAll(other.preWeekbox_);
            }
            onChanged();
          }
        } else {
          if (!other.preWeekbox_.isEmpty()) {
            if (preWeekboxBuilder_.isEmpty()) {
              preWeekboxBuilder_.dispose();
              preWeekboxBuilder_ = null;
              preWeekbox_ = other.preWeekbox_;
              bitField0_ = (bitField0_ & ~0x00040000);
              preWeekboxBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPreWeekboxFieldBuilder() : null;
            } else {
              preWeekboxBuilder_.addAllMessages(other.preWeekbox_);
            }
          }
        }
        if (other.getFirstJoinTime() != 0L) {
          setFirstJoinTime(other.getFirstJoinTime());
        }
        if (other.getTodayUseWinProtect() != 0) {
          setTodayUseWinProtect(other.getTodayUseWinProtect());
        }
        if (other.getCurFreeLtAttTimes() != 0) {
          setCurFreeLtAttTimes(other.getCurFreeLtAttTimes());
        }
        internalGetMutableSerialWinData().mergeFrom(
            other.internalGetSerialWinData());
        if (other.getDailyWinTaskScienceId() != 0) {
          setDailyWinTaskScienceId(other.getDailyWinTaskScienceId());
        }
        if (other.getWeeklyWinTaskScienceId() != 0) {
          setWeeklyWinTaskScienceId(other.getWeeklyWinTaskScienceId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.CrossArenaPlayerDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.CrossArenaPlayerDB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> dbs_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetDbs() {
        if (dbs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              DbsDefaultEntryHolder.defaultEntry);
        }
        return dbs_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableDbs() {
        onChanged();;
        if (dbs_ == null) {
          dbs_ = com.google.protobuf.MapField.newMapField(
              DbsDefaultEntryHolder.defaultEntry);
        }
        if (!dbs_.isMutable()) {
          dbs_ = dbs_.copy();
        }
        return dbs_;
      }

      public int getDbsCount() {
        return internalGetDbs().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public boolean containsDbs(
          int key) {
        
        return internalGetDbs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getDbsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getDbs() {
        return getDbsMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getDbsMap() {
        return internalGetDbs().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public int getDbsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetDbs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public int getDbsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetDbs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearDbs() {
        internalGetMutableDbs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public Builder removeDbs(
          int key) {
        
        internalGetMutableDbs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableDbs() {
        return internalGetMutableDbs().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */
      public Builder putDbs(
          int key,
          int value) {
        
        
        internalGetMutableDbs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; dbs = 1;</code>
       */

      public Builder putAllDbs(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableDbs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> ltPetNum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLtPetNum() {
        if (ltPetNum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LtPetNumDefaultEntryHolder.defaultEntry);
        }
        return ltPetNum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLtPetNum() {
        onChanged();;
        if (ltPetNum_ == null) {
          ltPetNum_ = com.google.protobuf.MapField.newMapField(
              LtPetNumDefaultEntryHolder.defaultEntry);
        }
        if (!ltPetNum_.isMutable()) {
          ltPetNum_ = ltPetNum_.copy();
        }
        return ltPetNum_;
      }

      public int getLtPetNumCount() {
        return internalGetLtPetNum().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public boolean containsLtPetNum(
          int key) {
        
        return internalGetLtPetNum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLtPetNumMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetNum() {
        return getLtPetNumMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetNumMap() {
        return internalGetLtPetNum().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public int getLtPetNumOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtPetNum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public int getLtPetNumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtPetNum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLtPetNum() {
        internalGetMutableLtPetNum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public Builder removeLtPetNum(
          int key) {
        
        internalGetMutableLtPetNum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLtPetNum() {
        return internalGetMutableLtPetNum().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */
      public Builder putLtPetNum(
          int key,
          int value) {
        
        
        internalGetMutableLtPetNum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetNum = 2;</code>
       */

      public Builder putAllLtPetNum(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLtPetNum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> ltPetWinNum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLtPetWinNum() {
        if (ltPetWinNum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LtPetWinNumDefaultEntryHolder.defaultEntry);
        }
        return ltPetWinNum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLtPetWinNum() {
        onChanged();;
        if (ltPetWinNum_ == null) {
          ltPetWinNum_ = com.google.protobuf.MapField.newMapField(
              LtPetWinNumDefaultEntryHolder.defaultEntry);
        }
        if (!ltPetWinNum_.isMutable()) {
          ltPetWinNum_ = ltPetWinNum_.copy();
        }
        return ltPetWinNum_;
      }

      public int getLtPetWinNumCount() {
        return internalGetLtPetWinNum().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public boolean containsLtPetWinNum(
          int key) {
        
        return internalGetLtPetWinNum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLtPetWinNumMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetWinNum() {
        return getLtPetWinNumMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtPetWinNumMap() {
        return internalGetLtPetWinNum().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public int getLtPetWinNumOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtPetWinNum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public int getLtPetWinNumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtPetWinNum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLtPetWinNum() {
        internalGetMutableLtPetWinNum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public Builder removeLtPetWinNum(
          int key) {
        
        internalGetMutableLtPetWinNum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLtPetWinNum() {
        return internalGetMutableLtPetWinNum().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */
      public Builder putLtPetWinNum(
          int key,
          int value) {
        
        
        internalGetMutableLtPetWinNum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltPetWinNum = 3;</code>
       */

      public Builder putAllLtPetWinNum(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLtPetWinNum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> weekBattleRes_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWeekBattleRes() {
        if (weekBattleRes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WeekBattleResDefaultEntryHolder.defaultEntry);
        }
        return weekBattleRes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWeekBattleRes() {
        onChanged();;
        if (weekBattleRes_ == null) {
          weekBattleRes_ = com.google.protobuf.MapField.newMapField(
              WeekBattleResDefaultEntryHolder.defaultEntry);
        }
        if (!weekBattleRes_.isMutable()) {
          weekBattleRes_ = weekBattleRes_.copy();
        }
        return weekBattleRes_;
      }

      public int getWeekBattleResCount() {
        return internalGetWeekBattleRes().getMap().size();
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public boolean containsWeekBattleRes(
          int key) {
        
        return internalGetWeekBattleRes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWeekBattleResMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBattleRes() {
        return getWeekBattleResMap();
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBattleResMap() {
        return internalGetWeekBattleRes().getMap();
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public int getWeekBattleResOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekBattleRes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public int getWeekBattleResOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekBattleRes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWeekBattleRes() {
        internalGetMutableWeekBattleRes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public Builder removeWeekBattleRes(
          int key) {
        
        internalGetMutableWeekBattleRes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWeekBattleRes() {
        return internalGetMutableWeekBattleRes().getMutableMap();
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */
      public Builder putWeekBattleRes(
          int key,
          int value) {
        
        
        internalGetMutableWeekBattleRes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 记录每周战斗结果数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBattleRes = 4;</code>
       */

      public Builder putAllWeekBattleRes(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWeekBattleRes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> eventFlishNum_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetEventFlishNum() {
        if (eventFlishNum_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EventFlishNumDefaultEntryHolder.defaultEntry);
        }
        return eventFlishNum_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableEventFlishNum() {
        onChanged();;
        if (eventFlishNum_ == null) {
          eventFlishNum_ = com.google.protobuf.MapField.newMapField(
              EventFlishNumDefaultEntryHolder.defaultEntry);
        }
        if (!eventFlishNum_.isMutable()) {
          eventFlishNum_ = eventFlishNum_.copy();
        }
        return eventFlishNum_;
      }

      public int getEventFlishNumCount() {
        return internalGetEventFlishNum().getMap().size();
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public boolean containsEventFlishNum(
          int key) {
        
        return internalGetEventFlishNum().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEventFlishNumMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getEventFlishNum() {
        return getEventFlishNumMap();
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getEventFlishNumMap() {
        return internalGetEventFlishNum().getMap();
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public int getEventFlishNumOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEventFlishNum().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public int getEventFlishNumOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetEventFlishNum().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEventFlishNum() {
        internalGetMutableEventFlishNum().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public Builder removeEventFlishNum(
          int key) {
        
        internalGetMutableEventFlishNum().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableEventFlishNum() {
        return internalGetMutableEventFlishNum().getMutableMap();
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */
      public Builder putEventFlishNum(
          int key,
          int value) {
        
        
        internalGetMutableEventFlishNum().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * 事件完成次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; eventFlishNum = 5;</code>
       */

      public Builder putAllEventFlishNum(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableEventFlishNum().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> eventCur_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetEventCur() {
        if (eventCur_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EventCurDefaultEntryHolder.defaultEntry);
        }
        return eventCur_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableEventCur() {
        onChanged();;
        if (eventCur_ == null) {
          eventCur_ = com.google.protobuf.MapField.newMapField(
              EventCurDefaultEntryHolder.defaultEntry);
        }
        if (!eventCur_.isMutable()) {
          eventCur_ = eventCur_.copy();
        }
        return eventCur_;
      }

      public int getEventCurCount() {
        return internalGetEventCur().getMap().size();
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public boolean containsEventCur(
          int key) {
        
        return internalGetEventCur().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEventCurMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getEventCur() {
        return getEventCurMap();
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getEventCurMap() {
        return internalGetEventCur().getMap();
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public long getEventCurOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetEventCur().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public long getEventCurOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetEventCur().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEventCur() {
        internalGetMutableEventCur().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public Builder removeEventCur(
          int key) {
        
        internalGetMutableEventCur().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableEventCur() {
        return internalGetMutableEventCur().getMutableMap();
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */
      public Builder putEventCur(
          int key,
          long value) {
        
        
        internalGetMutableEventCur().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *当前事件
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; eventCur = 6;</code>
       */

      public Builder putAllEventCur(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableEventCur().getMutableMap()
            .putAll(values);
        return this;
      }

      private protocol.CrossArenaDB.CrossArenaHonorDB honor_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.CrossArenaHonorDB, protocol.CrossArenaDB.CrossArenaHonorDB.Builder, protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder> honorBuilder_;
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public boolean hasHonor() {
        return honorBuilder_ != null || honor_ != null;
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public protocol.CrossArenaDB.CrossArenaHonorDB getHonor() {
        if (honorBuilder_ == null) {
          return honor_ == null ? protocol.CrossArenaDB.CrossArenaHonorDB.getDefaultInstance() : honor_;
        } else {
          return honorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public Builder setHonor(protocol.CrossArenaDB.CrossArenaHonorDB value) {
        if (honorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          honor_ = value;
          onChanged();
        } else {
          honorBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public Builder setHonor(
          protocol.CrossArenaDB.CrossArenaHonorDB.Builder builderForValue) {
        if (honorBuilder_ == null) {
          honor_ = builderForValue.build();
          onChanged();
        } else {
          honorBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public Builder mergeHonor(protocol.CrossArenaDB.CrossArenaHonorDB value) {
        if (honorBuilder_ == null) {
          if (honor_ != null) {
            honor_ =
              protocol.CrossArenaDB.CrossArenaHonorDB.newBuilder(honor_).mergeFrom(value).buildPartial();
          } else {
            honor_ = value;
          }
          onChanged();
        } else {
          honorBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public Builder clearHonor() {
        if (honorBuilder_ == null) {
          honor_ = null;
          onChanged();
        } else {
          honor_ = null;
          honorBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public protocol.CrossArenaDB.CrossArenaHonorDB.Builder getHonorBuilder() {
        
        onChanged();
        return getHonorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      public protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder getHonorOrBuilder() {
        if (honorBuilder_ != null) {
          return honorBuilder_.getMessageOrBuilder();
        } else {
          return honor_ == null ?
              protocol.CrossArenaDB.CrossArenaHonorDB.getDefaultInstance() : honor_;
        }
      }
      /**
       * <pre>
       *成就记录
       * </pre>
       *
       * <code>.CrossArenaHonorDB honor = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.CrossArenaHonorDB, protocol.CrossArenaDB.CrossArenaHonorDB.Builder, protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder> 
          getHonorFieldBuilder() {
        if (honorBuilder_ == null) {
          honorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaDB.CrossArenaHonorDB, protocol.CrossArenaDB.CrossArenaHonorDB.Builder, protocol.CrossArenaDB.CrossArenaHonorDBOrBuilder>(
                  getHonor(),
                  getParentForChildren(),
                  isClean());
          honor_ = null;
        }
        return honorBuilder_;
      }

      private java.util.List<java.lang.Integer> noteAward_ = java.util.Collections.emptyList();
      private void ensureNoteAwardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          noteAward_ = new java.util.ArrayList<java.lang.Integer>(noteAward_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getNoteAwardList() {
        return java.util.Collections.unmodifiableList(noteAward_);
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public int getNoteAwardCount() {
        return noteAward_.size();
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public int getNoteAward(int index) {
        return noteAward_.get(index);
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public Builder setNoteAward(
          int index, int value) {
        ensureNoteAwardIsMutable();
        noteAward_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public Builder addNoteAward(int value) {
        ensureNoteAwardIsMutable();
        noteAward_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public Builder addAllNoteAward(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNoteAwardIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, noteAward_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 noteAward = 8;</code>
       */
      public Builder clearNoteAward() {
        noteAward_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private int hyDay_ ;
      /**
       * <code>int32 hyDay = 9;</code>
       */
      public int getHyDay() {
        return hyDay_;
      }
      /**
       * <code>int32 hyDay = 9;</code>
       */
      public Builder setHyDay(int value) {
        
        hyDay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 hyDay = 9;</code>
       */
      public Builder clearHyDay() {
        
        hyDay_ = 0;
        onChanged();
        return this;
      }

      private long jionTime_ ;
      /**
       * <code>int64 jionTime = 10;</code>
       */
      public long getJionTime() {
        return jionTime_;
      }
      /**
       * <code>int64 jionTime = 10;</code>
       */
      public Builder setJionTime(long value) {
        
        jionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 jionTime = 10;</code>
       */
      public Builder clearJionTime() {
        
        jionTime_ = 0L;
        onChanged();
        return this;
      }

      private long leijiTime_ ;
      /**
       * <code>int64 leijiTime = 11;</code>
       */
      public long getLeijiTime() {
        return leijiTime_;
      }
      /**
       * <code>int64 leijiTime = 11;</code>
       */
      public Builder setLeijiTime(long value) {
        
        leijiTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 leijiTime = 11;</code>
       */
      public Builder clearLeijiTime() {
        
        leijiTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> allBatWin_ = java.util.Collections.emptyList();
      private void ensureAllBatWinIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          allBatWin_ = new java.util.ArrayList<java.lang.Integer>(allBatWin_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public java.util.List<java.lang.Integer>
          getAllBatWinList() {
        return java.util.Collections.unmodifiableList(allBatWin_);
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public int getAllBatWinCount() {
        return allBatWin_.size();
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public int getAllBatWin(int index) {
        return allBatWin_.get(index);
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public Builder setAllBatWin(
          int index, int value) {
        ensureAllBatWinIsMutable();
        allBatWin_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public Builder addAllBatWin(int value) {
        ensureAllBatWinIsMutable();
        allBatWin_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public Builder addAllAllBatWin(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAllBatWinIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, allBatWin_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 记录每次战斗结果
       * </pre>
       *
       * <code>repeated int32 allBatWin = 12;</code>
       */
      public Builder clearAllBatWin() {
        allBatWin_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> ltCotCoot_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLtCotCoot() {
        if (ltCotCoot_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LtCotCootDefaultEntryHolder.defaultEntry);
        }
        return ltCotCoot_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLtCotCoot() {
        onChanged();;
        if (ltCotCoot_ == null) {
          ltCotCoot_ = com.google.protobuf.MapField.newMapField(
              LtCotCootDefaultEntryHolder.defaultEntry);
        }
        if (!ltCotCoot_.isMutable()) {
          ltCotCoot_ = ltCotCoot_.copy();
        }
        return ltCotCoot_;
      }

      public int getLtCotCootCount() {
        return internalGetLtCotCoot().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public boolean containsLtCotCoot(
          int key) {
        
        return internalGetLtCotCoot().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLtCotCootMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtCotCoot() {
        return getLtCotCootMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLtCotCootMap() {
        return internalGetLtCotCoot().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public int getLtCotCootOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtCotCoot().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public int getLtCotCootOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLtCotCoot().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLtCotCoot() {
        internalGetMutableLtCotCoot().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public Builder removeLtCotCoot(
          int key) {
        
        internalGetMutableLtCotCoot().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLtCotCoot() {
        return internalGetMutableLtCotCoot().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */
      public Builder putLtCotCoot(
          int key,
          int value) {
        
        
        internalGetMutableLtCotCoot().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; ltCotCoot = 13;</code>
       */

      public Builder putAllLtCotCoot(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLtCotCoot().getMutableMap()
            .putAll(values);
        return this;
      }

      private int isAward_ ;
      /**
       * <code>int32 isAward = 14;</code>
       */
      public int getIsAward() {
        return isAward_;
      }
      /**
       * <code>int32 isAward = 14;</code>
       */
      public Builder setIsAward(int value) {
        
        isAward_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAward = 14;</code>
       */
      public Builder clearIsAward() {
        
        isAward_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> weekTaskData_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWeekTaskData() {
        if (weekTaskData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WeekTaskDataDefaultEntryHolder.defaultEntry);
        }
        return weekTaskData_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWeekTaskData() {
        onChanged();;
        if (weekTaskData_ == null) {
          weekTaskData_ = com.google.protobuf.MapField.newMapField(
              WeekTaskDataDefaultEntryHolder.defaultEntry);
        }
        if (!weekTaskData_.isMutable()) {
          weekTaskData_ = weekTaskData_.copy();
        }
        return weekTaskData_;
      }

      public int getWeekTaskDataCount() {
        return internalGetWeekTaskData().getMap().size();
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public boolean containsWeekTaskData(
          int key) {
        
        return internalGetWeekTaskData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWeekTaskDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskData() {
        return getWeekTaskDataMap();
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskDataMap() {
        return internalGetWeekTaskData().getMap();
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public int getWeekTaskDataOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekTaskData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public int getWeekTaskDataOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekTaskData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWeekTaskData() {
        internalGetMutableWeekTaskData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public Builder removeWeekTaskData(
          int key) {
        
        internalGetMutableWeekTaskData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWeekTaskData() {
        return internalGetMutableWeekTaskData().getMutableMap();
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */
      public Builder putWeekTaskData(
          int key,
          int value) {
        
        
        internalGetMutableWeekTaskData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *荣耀周活动任务数据记录
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskData = 15;</code>
       */

      public Builder putAllWeekTaskData(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWeekTaskData().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> weekTaskReward_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWeekTaskReward() {
        if (weekTaskReward_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WeekTaskRewardDefaultEntryHolder.defaultEntry);
        }
        return weekTaskReward_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWeekTaskReward() {
        onChanged();;
        if (weekTaskReward_ == null) {
          weekTaskReward_ = com.google.protobuf.MapField.newMapField(
              WeekTaskRewardDefaultEntryHolder.defaultEntry);
        }
        if (!weekTaskReward_.isMutable()) {
          weekTaskReward_ = weekTaskReward_.copy();
        }
        return weekTaskReward_;
      }

      public int getWeekTaskRewardCount() {
        return internalGetWeekTaskReward().getMap().size();
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public boolean containsWeekTaskReward(
          int key) {
        
        return internalGetWeekTaskReward().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWeekTaskRewardMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskReward() {
        return getWeekTaskRewardMap();
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekTaskRewardMap() {
        return internalGetWeekTaskReward().getMap();
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public int getWeekTaskRewardOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekTaskReward().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public int getWeekTaskRewardOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekTaskReward().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWeekTaskReward() {
        internalGetMutableWeekTaskReward().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public Builder removeWeekTaskReward(
          int key) {
        
        internalGetMutableWeekTaskReward().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWeekTaskReward() {
        return internalGetMutableWeekTaskReward().getMutableMap();
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */
      public Builder putWeekTaskReward(
          int key,
          int value) {
        
        
        internalGetMutableWeekTaskReward().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *荣耀周活动任务领取情况
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekTaskReward = 16;</code>
       */

      public Builder putAllWeekTaskReward(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWeekTaskReward().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> winTask_ = java.util.Collections.emptyList();
      private void ensureWinTaskIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          winTask_ = new java.util.ArrayList<java.lang.Integer>(winTask_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public java.util.List<java.lang.Integer>
          getWinTaskList() {
        return java.util.Collections.unmodifiableList(winTask_);
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public int getWinTaskCount() {
        return winTask_.size();
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public int getWinTask(int index) {
        return winTask_.get(index);
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public Builder setWinTask(
          int index, int value) {
        ensureWinTaskIsMutable();
        winTask_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public Builder addWinTask(int value) {
        ensureWinTaskIsMutable();
        winTask_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public Builder addAllWinTask(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinTaskIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, winTask_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       *连胜任务领取情况
       * </pre>
       *
       * <code>repeated int32 winTask = 17;</code>
       */
      public Builder clearWinTask() {
        winTask_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> weekBoxTask_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWeekBoxTask() {
        if (weekBoxTask_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WeekBoxTaskDefaultEntryHolder.defaultEntry);
        }
        return weekBoxTask_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWeekBoxTask() {
        onChanged();;
        if (weekBoxTask_ == null) {
          weekBoxTask_ = com.google.protobuf.MapField.newMapField(
              WeekBoxTaskDefaultEntryHolder.defaultEntry);
        }
        if (!weekBoxTask_.isMutable()) {
          weekBoxTask_ = weekBoxTask_.copy();
        }
        return weekBoxTask_;
      }

      public int getWeekBoxTaskCount() {
        return internalGetWeekBoxTask().getMap().size();
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public boolean containsWeekBoxTask(
          int key) {
        
        return internalGetWeekBoxTask().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWeekBoxTaskMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBoxTask() {
        return getWeekBoxTaskMap();
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeekBoxTaskMap() {
        return internalGetWeekBoxTask().getMap();
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public int getWeekBoxTaskOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekBoxTask().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public int getWeekBoxTaskOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeekBoxTask().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWeekBoxTask() {
        internalGetMutableWeekBoxTask().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public Builder removeWeekBoxTask(
          int key) {
        
        internalGetMutableWeekBoxTask().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWeekBoxTask() {
        return internalGetMutableWeekBoxTask().getMutableMap();
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */
      public Builder putWeekBoxTask(
          int key,
          int value) {
        
        
        internalGetMutableWeekBoxTask().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *周宝箱数据
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weekBoxTask = 18;</code>
       */

      public Builder putAllWeekBoxTask(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWeekBoxTask().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox> preWeekbox_ =
        java.util.Collections.emptyList();
      private void ensurePreWeekboxIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          preWeekbox_ = new java.util.ArrayList<protocol.CrossArena.CrossArenaTaskWeekBox>(preWeekbox_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArena.CrossArenaTaskWeekBox, protocol.CrossArena.CrossArenaTaskWeekBox.Builder, protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder> preWeekboxBuilder_;

      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox> getPreWeekboxList() {
        if (preWeekboxBuilder_ == null) {
          return java.util.Collections.unmodifiableList(preWeekbox_);
        } else {
          return preWeekboxBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public int getPreWeekboxCount() {
        if (preWeekboxBuilder_ == null) {
          return preWeekbox_.size();
        } else {
          return preWeekboxBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public protocol.CrossArena.CrossArenaTaskWeekBox getPreWeekbox(int index) {
        if (preWeekboxBuilder_ == null) {
          return preWeekbox_.get(index);
        } else {
          return preWeekboxBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder setPreWeekbox(
          int index, protocol.CrossArena.CrossArenaTaskWeekBox value) {
        if (preWeekboxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreWeekboxIsMutable();
          preWeekbox_.set(index, value);
          onChanged();
        } else {
          preWeekboxBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder setPreWeekbox(
          int index, protocol.CrossArena.CrossArenaTaskWeekBox.Builder builderForValue) {
        if (preWeekboxBuilder_ == null) {
          ensurePreWeekboxIsMutable();
          preWeekbox_.set(index, builderForValue.build());
          onChanged();
        } else {
          preWeekboxBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder addPreWeekbox(protocol.CrossArena.CrossArenaTaskWeekBox value) {
        if (preWeekboxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreWeekboxIsMutable();
          preWeekbox_.add(value);
          onChanged();
        } else {
          preWeekboxBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder addPreWeekbox(
          int index, protocol.CrossArena.CrossArenaTaskWeekBox value) {
        if (preWeekboxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePreWeekboxIsMutable();
          preWeekbox_.add(index, value);
          onChanged();
        } else {
          preWeekboxBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder addPreWeekbox(
          protocol.CrossArena.CrossArenaTaskWeekBox.Builder builderForValue) {
        if (preWeekboxBuilder_ == null) {
          ensurePreWeekboxIsMutable();
          preWeekbox_.add(builderForValue.build());
          onChanged();
        } else {
          preWeekboxBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder addPreWeekbox(
          int index, protocol.CrossArena.CrossArenaTaskWeekBox.Builder builderForValue) {
        if (preWeekboxBuilder_ == null) {
          ensurePreWeekboxIsMutable();
          preWeekbox_.add(index, builderForValue.build());
          onChanged();
        } else {
          preWeekboxBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder addAllPreWeekbox(
          java.lang.Iterable<? extends protocol.CrossArena.CrossArenaTaskWeekBox> values) {
        if (preWeekboxBuilder_ == null) {
          ensurePreWeekboxIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, preWeekbox_);
          onChanged();
        } else {
          preWeekboxBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder clearPreWeekbox() {
        if (preWeekboxBuilder_ == null) {
          preWeekbox_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          preWeekboxBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public Builder removePreWeekbox(int index) {
        if (preWeekboxBuilder_ == null) {
          ensurePreWeekboxIsMutable();
          preWeekbox_.remove(index);
          onChanged();
        } else {
          preWeekboxBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public protocol.CrossArena.CrossArenaTaskWeekBox.Builder getPreWeekboxBuilder(
          int index) {
        return getPreWeekboxFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder getPreWeekboxOrBuilder(
          int index) {
        if (preWeekboxBuilder_ == null) {
          return preWeekbox_.get(index);  } else {
          return preWeekboxBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public java.util.List<? extends protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder> 
           getPreWeekboxOrBuilderList() {
        if (preWeekboxBuilder_ != null) {
          return preWeekboxBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(preWeekbox_);
        }
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public protocol.CrossArena.CrossArenaTaskWeekBox.Builder addPreWeekboxBuilder() {
        return getPreWeekboxFieldBuilder().addBuilder(
            protocol.CrossArena.CrossArenaTaskWeekBox.getDefaultInstance());
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public protocol.CrossArena.CrossArenaTaskWeekBox.Builder addPreWeekboxBuilder(
          int index) {
        return getPreWeekboxFieldBuilder().addBuilder(
            index, protocol.CrossArena.CrossArenaTaskWeekBox.getDefaultInstance());
      }
      /**
       * <pre>
       *周宝箱上周数据
       * </pre>
       *
       * <code>repeated .CrossArenaTaskWeekBox preWeekbox = 19;</code>
       */
      public java.util.List<protocol.CrossArena.CrossArenaTaskWeekBox.Builder> 
           getPreWeekboxBuilderList() {
        return getPreWeekboxFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArena.CrossArenaTaskWeekBox, protocol.CrossArena.CrossArenaTaskWeekBox.Builder, protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder> 
          getPreWeekboxFieldBuilder() {
        if (preWeekboxBuilder_ == null) {
          preWeekboxBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.CrossArena.CrossArenaTaskWeekBox, protocol.CrossArena.CrossArenaTaskWeekBox.Builder, protocol.CrossArena.CrossArenaTaskWeekBoxOrBuilder>(
                  preWeekbox_,
                  ((bitField0_ & 0x00040000) == 0x00040000),
                  getParentForChildren(),
                  isClean());
          preWeekbox_ = null;
        }
        return preWeekboxBuilder_;
      }

      private long firstJoinTime_ ;
      /**
       * <pre>
       *第一次进入擂台时间
       * </pre>
       *
       * <code>int64 firstJoinTime = 20;</code>
       */
      public long getFirstJoinTime() {
        return firstJoinTime_;
      }
      /**
       * <pre>
       *第一次进入擂台时间
       * </pre>
       *
       * <code>int64 firstJoinTime = 20;</code>
       */
      public Builder setFirstJoinTime(long value) {
        
        firstJoinTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *第一次进入擂台时间
       * </pre>
       *
       * <code>int64 firstJoinTime = 20;</code>
       */
      public Builder clearFirstJoinTime() {
        
        firstJoinTime_ = 0L;
        onChanged();
        return this;
      }

      private int todayUseWinProtect_ ;
      /**
       * <pre>
       *今天使用连胜保护卡次数
       * </pre>
       *
       * <code>int32 todayUseWinProtect = 21;</code>
       */
      public int getTodayUseWinProtect() {
        return todayUseWinProtect_;
      }
      /**
       * <pre>
       *今天使用连胜保护卡次数
       * </pre>
       *
       * <code>int32 todayUseWinProtect = 21;</code>
       */
      public Builder setTodayUseWinProtect(int value) {
        
        todayUseWinProtect_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *今天使用连胜保护卡次数
       * </pre>
       *
       * <code>int32 todayUseWinProtect = 21;</code>
       */
      public Builder clearTodayUseWinProtect() {
        
        todayUseWinProtect_ = 0;
        onChanged();
        return this;
      }

      private int curFreeLtAttTimes_ ;
      /**
       * <pre>
       *当前免费上擂使用次数
       * </pre>
       *
       * <code>int32 curFreeLtAttTimes = 22;</code>
       */
      public int getCurFreeLtAttTimes() {
        return curFreeLtAttTimes_;
      }
      /**
       * <pre>
       *当前免费上擂使用次数
       * </pre>
       *
       * <code>int32 curFreeLtAttTimes = 22;</code>
       */
      public Builder setCurFreeLtAttTimes(int value) {
        
        curFreeLtAttTimes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *当前免费上擂使用次数
       * </pre>
       *
       * <code>int32 curFreeLtAttTimes = 22;</code>
       */
      public Builder clearCurFreeLtAttTimes() {
        
        curFreeLtAttTimes_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> serialWinData_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
      internalGetSerialWinData() {
        if (serialWinData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SerialWinDataDefaultEntryHolder.defaultEntry);
        }
        return serialWinData_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
      internalGetMutableSerialWinData() {
        onChanged();;
        if (serialWinData_ == null) {
          serialWinData_ = com.google.protobuf.MapField.newMapField(
              SerialWinDataDefaultEntryHolder.defaultEntry);
        }
        if (!serialWinData_.isMutable()) {
          serialWinData_ = serialWinData_.copy();
        }
        return serialWinData_;
      }

      public int getSerialWinDataCount() {
        return internalGetSerialWinData().getMap().size();
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public boolean containsSerialWinData(
          int key) {
        
        return internalGetSerialWinData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSerialWinDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> getSerialWinData() {
        return getSerialWinDataMap();
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> getSerialWinDataMap() {
        return internalGetSerialWinData().getMap();
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrDefault(
          int key,
          protocol.CrossArenaDB.DB_LTSerialWin defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> map =
            internalGetSerialWinData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public protocol.CrossArenaDB.DB_LTSerialWin getSerialWinDataOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> map =
            internalGetSerialWinData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSerialWinData() {
        internalGetMutableSerialWinData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public Builder removeSerialWinData(
          int key) {
        
        internalGetMutableSerialWinData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin>
      getMutableSerialWinData() {
        return internalGetMutableSerialWinData().getMutableMap();
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */
      public Builder putSerialWinData(
          int key,
          protocol.CrossArenaDB.DB_LTSerialWin value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableSerialWinData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *连胜记录  (&lt;道场id,连胜db&gt;)
       * </pre>
       *
       * <code>map&lt;int32, .DB_LTSerialWin&gt; serialWinData = 23;</code>
       */

      public Builder putAllSerialWinData(
          java.util.Map<java.lang.Integer, protocol.CrossArenaDB.DB_LTSerialWin> values) {
        internalGetMutableSerialWinData().getMutableMap()
            .putAll(values);
        return this;
      }

      private int dailyWinTaskScienceId_ ;
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 dailyWinTaskScienceId = 24;</code>
       */
      public int getDailyWinTaskScienceId() {
        return dailyWinTaskScienceId_;
      }
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 dailyWinTaskScienceId = 24;</code>
       */
      public Builder setDailyWinTaskScienceId(int value) {
        
        dailyWinTaskScienceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 dailyWinTaskScienceId = 24;</code>
       */
      public Builder clearDailyWinTaskScienceId() {
        
        dailyWinTaskScienceId_ = 0;
        onChanged();
        return this;
      }

      private int weeklyWinTaskScienceId_ ;
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 weeklyWinTaskScienceId = 25;</code>
       */
      public int getWeeklyWinTaskScienceId() {
        return weeklyWinTaskScienceId_;
      }
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 weeklyWinTaskScienceId = 25;</code>
       */
      public Builder setWeeklyWinTaskScienceId(int value) {
        
        weeklyWinTaskScienceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *选择连胜奖励的道场
       * </pre>
       *
       * <code>int32 weeklyWinTaskScienceId = 25;</code>
       */
      public Builder clearWeeklyWinTaskScienceId() {
        
        weeklyWinTaskScienceId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CrossArenaPlayerDB)
    }

    // @@protoc_insertion_point(class_scope:CrossArenaPlayerDB)
    private static final protocol.CrossArenaDB.CrossArenaPlayerDB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.CrossArenaPlayerDB();
    }

    public static protocol.CrossArenaDB.CrossArenaPlayerDB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CrossArenaPlayerDB>
        PARSER = new com.google.protobuf.AbstractParser<CrossArenaPlayerDB>() {
      public CrossArenaPlayerDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CrossArenaPlayerDB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CrossArenaPlayerDB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrossArenaPlayerDB> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.CrossArenaPlayerDB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DB_LTSerialWinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_LTSerialWin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */
    int getWinDataCount();
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */
    boolean containsWinData(
        int key);
    /**
     * Use {@link #getWinDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWinData();
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWinDataMap();
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    int getWinDataOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    int getWinDataOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code DB_LTSerialWin}
   */
  public  static final class DB_LTSerialWin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_LTSerialWin)
      DB_LTSerialWinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_LTSerialWin.newBuilder() to construct.
    private DB_LTSerialWin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_LTSerialWin() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_LTSerialWin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                winData_ = com.google.protobuf.MapField.newMapField(
                    WinDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              winData__ = input.readMessage(
                  WinDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              winData_.getMutableMap().put(
                  winData__.getKey(), winData__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_DB_LTSerialWin_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetWinData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_DB_LTSerialWin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.DB_LTSerialWin.class, protocol.CrossArenaDB.DB_LTSerialWin.Builder.class);
    }

    public static final int WINDATA_FIELD_NUMBER = 1;
    private static final class WinDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_DB_LTSerialWin_WinDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> winData_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWinData() {
      if (winData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WinDataDefaultEntryHolder.defaultEntry);
      }
      return winData_;
    }

    public int getWinDataCount() {
      return internalGetWinData().getMap().size();
    }
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    public boolean containsWinData(
        int key) {
      
      return internalGetWinData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWinDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWinData() {
      return getWinDataMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWinDataMap() {
      return internalGetWinData().getMap();
    }
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    public int getWinDataOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWinData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, int32&gt; winData = 1;</code>
     */

    public int getWinDataOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWinData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWinData(),
          WinDataDefaultEntryHolder.defaultEntry,
          1);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWinData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        winData__ = WinDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, winData__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.DB_LTSerialWin)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.DB_LTSerialWin other = (protocol.CrossArenaDB.DB_LTSerialWin) obj;

      boolean result = true;
      result = result && internalGetWinData().equals(
          other.internalGetWinData());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetWinData().getMap().isEmpty()) {
        hash = (37 * hash) + WINDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWinData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.DB_LTSerialWin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.DB_LTSerialWin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_LTSerialWin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_LTSerialWin)
        protocol.CrossArenaDB.DB_LTSerialWinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_DB_LTSerialWin_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetWinData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableWinData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_DB_LTSerialWin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.DB_LTSerialWin.class, protocol.CrossArenaDB.DB_LTSerialWin.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.DB_LTSerialWin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        internalGetMutableWinData().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_DB_LTSerialWin_descriptor;
      }

      public protocol.CrossArenaDB.DB_LTSerialWin getDefaultInstanceForType() {
        return protocol.CrossArenaDB.DB_LTSerialWin.getDefaultInstance();
      }

      public protocol.CrossArenaDB.DB_LTSerialWin build() {
        protocol.CrossArenaDB.DB_LTSerialWin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.DB_LTSerialWin buildPartial() {
        protocol.CrossArenaDB.DB_LTSerialWin result = new protocol.CrossArenaDB.DB_LTSerialWin(this);
        int from_bitField0_ = bitField0_;
        result.winData_ = internalGetWinData();
        result.winData_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.DB_LTSerialWin) {
          return mergeFrom((protocol.CrossArenaDB.DB_LTSerialWin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.DB_LTSerialWin other) {
        if (other == protocol.CrossArenaDB.DB_LTSerialWin.getDefaultInstance()) return this;
        internalGetMutableWinData().mergeFrom(
            other.internalGetWinData());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.DB_LTSerialWin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.DB_LTSerialWin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> winData_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWinData() {
        if (winData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WinDataDefaultEntryHolder.defaultEntry);
        }
        return winData_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWinData() {
        onChanged();;
        if (winData_ == null) {
          winData_ = com.google.protobuf.MapField.newMapField(
              WinDataDefaultEntryHolder.defaultEntry);
        }
        if (!winData_.isMutable()) {
          winData_ = winData_.copy();
        }
        return winData_;
      }

      public int getWinDataCount() {
        return internalGetWinData().getMap().size();
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public boolean containsWinData(
          int key) {
        
        return internalGetWinData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWinDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWinData() {
        return getWinDataMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWinDataMap() {
        return internalGetWinData().getMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public int getWinDataOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWinData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public int getWinDataOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWinData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWinData() {
        internalGetMutableWinData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public Builder removeWinData(
          int key) {
        
        internalGetMutableWinData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWinData() {
        return internalGetMutableWinData().getMutableMap();
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */
      public Builder putWinData(
          int key,
          int value) {
        
        
        internalGetMutableWinData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;int32, int32&gt; winData = 1;</code>
       */

      public Builder putAllWinData(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWinData().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_LTSerialWin)
    }

    // @@protoc_insertion_point(class_scope:DB_LTSerialWin)
    private static final protocol.CrossArenaDB.DB_LTSerialWin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.DB_LTSerialWin();
    }

    public static protocol.CrossArenaDB.DB_LTSerialWin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_LTSerialWin>
        PARSER = new com.google.protobuf.AbstractParser<DB_LTSerialWin>() {
      public DB_LTSerialWin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_LTSerialWin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_LTSerialWin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_LTSerialWin> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.DB_LTSerialWin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaTableDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaTableDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 擂台ID
     * </pre>
     *
     * <code>int32 leitaiId = 1;</code>
     */
    int getLeitaiId();

    /**
     * <pre>
     * 擂台状态
     * </pre>
     *
     * <code>int32 state = 2;</code>
     */
    int getState();

    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    boolean hasDefPlayer();
    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayer getDefPlayer();
    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDefPlayerOrBuilder();

    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    boolean hasAttPlayer();
    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayer getAttPlayer();
    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getAttPlayerOrBuilder();

    /**
     * <pre>
     * 守擂持续时间
     * </pre>
     *
     * <code>int64 defTime = 5;</code>
     */
    long getDefTime();

    /**
     * <pre>
     * 连胜次数
     * </pre>
     *
     * <code>int32 defWinNum = 6;</code>
     */
    int getDefWinNum();

    /**
     * <pre>
     * 战斗ID
     * </pre>
     *
     * <code>int64 battleId = 7;</code>
     */
    long getBattleId();

    /**
     * <code>int64 settleTime = 8;</code>
     */
    long getSettleTime();

    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */
    int getGuessDefSvrDataCount();
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */
    boolean containsGuessDefSvrData(
        java.lang.String key);
    /**
     * Use {@link #getGuessDefSvrDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getGuessDefSvrData();
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getGuessDefSvrDataMap();
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    java.lang.String getGuessDefSvrDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    java.lang.String getGuessDefSvrDataOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */
    int getGuessAttSvrDataCount();
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */
    boolean containsGuessAttSvrData(
        java.lang.String key);
    /**
     * Use {@link #getGuessAttSvrDataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getGuessAttSvrData();
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getGuessAttSvrDataMap();
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    java.lang.String getGuessAttSvrDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    java.lang.String getGuessAttSvrDataOrThrow(
        java.lang.String key);

    /**
     * <code>int64 lastBattleTime = 11;</code>
     */
    long getLastBattleTime();

    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer> 
        getDuiList();
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayer getDui(int index);
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    int getDuiCount();
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
        getDuiOrBuilderList();
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDuiOrBuilder(
        int index);

    /**
     * <pre>
     * 状态结束时间
     * </pre>
     *
     * <code>int64 stateEndTime = 13;</code>
     */
    long getStateEndTime();

    /**
     * <code>int32 isAIBattle = 14;</code>
     */
    int getIsAIBattle();

    /**
     * <code>int32 aiWin = 15;</code>
     */
    int getAiWin();

    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    java.util.List<java.lang.Integer> getReadyStateList();
    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    int getReadyStateCount();
    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    int getReadyState(int index);

    /**
     * <pre>
     *1临时擂台
     * </pre>
     *
     * <code>int32 type = 17;</code>
     */
    int getType();
  }
  /**
   * <pre>
   * 单个擂台数据,分别存储
   * </pre>
   *
   * Protobuf type {@code RedisCrossArenaTableDB}
   */
  public  static final class RedisCrossArenaTableDB extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaTableDB)
      RedisCrossArenaTableDBOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaTableDB.newBuilder() to construct.
    private RedisCrossArenaTableDB(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaTableDB() {
      leitaiId_ = 0;
      state_ = 0;
      defTime_ = 0L;
      defWinNum_ = 0;
      battleId_ = 0L;
      settleTime_ = 0L;
      lastBattleTime_ = 0L;
      dui_ = java.util.Collections.emptyList();
      stateEndTime_ = 0L;
      isAIBattle_ = 0;
      aiWin_ = 0;
      readyState_ = java.util.Collections.emptyList();
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaTableDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              leitaiId_ = input.readInt32();
              break;
            }
            case 16: {

              state_ = input.readInt32();
              break;
            }
            case 26: {
              protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder subBuilder = null;
              if (defPlayer_ != null) {
                subBuilder = defPlayer_.toBuilder();
              }
              defPlayer_ = input.readMessage(protocol.CrossArenaDB.RedisCrossArenaPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(defPlayer_);
                defPlayer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder subBuilder = null;
              if (attPlayer_ != null) {
                subBuilder = attPlayer_.toBuilder();
              }
              attPlayer_ = input.readMessage(protocol.CrossArenaDB.RedisCrossArenaPlayer.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(attPlayer_);
                attPlayer_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              defTime_ = input.readInt64();
              break;
            }
            case 48: {

              defWinNum_ = input.readInt32();
              break;
            }
            case 56: {

              battleId_ = input.readInt64();
              break;
            }
            case 64: {

              settleTime_ = input.readInt64();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                guessDefSvrData_ = com.google.protobuf.MapField.newMapField(
                    GuessDefSvrDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000100;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              guessDefSvrData__ = input.readMessage(
                  GuessDefSvrDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              guessDefSvrData_.getMutableMap().put(
                  guessDefSvrData__.getKey(), guessDefSvrData__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                guessAttSvrData_ = com.google.protobuf.MapField.newMapField(
                    GuessAttSvrDataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000200;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              guessAttSvrData__ = input.readMessage(
                  GuessAttSvrDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              guessAttSvrData_.getMutableMap().put(
                  guessAttSvrData__.getKey(), guessAttSvrData__.getValue());
              break;
            }
            case 88: {

              lastBattleTime_ = input.readInt64();
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                dui_ = new java.util.ArrayList<protocol.CrossArenaDB.RedisCrossArenaPlayer>();
                mutable_bitField0_ |= 0x00000800;
              }
              dui_.add(
                  input.readMessage(protocol.CrossArenaDB.RedisCrossArenaPlayer.parser(), extensionRegistry));
              break;
            }
            case 104: {

              stateEndTime_ = input.readInt64();
              break;
            }
            case 112: {

              isAIBattle_ = input.readInt32();
              break;
            }
            case 120: {

              aiWin_ = input.readInt32();
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                readyState_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              readyState_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                readyState_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                readyState_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {

              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          dui_ = java.util.Collections.unmodifiableList(dui_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          readyState_ = java.util.Collections.unmodifiableList(readyState_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetGuessDefSvrData();
        case 10:
          return internalGetGuessAttSvrData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaTableDB.class, protocol.CrossArenaDB.RedisCrossArenaTableDB.Builder.class);
    }

    private int bitField0_;
    public static final int LEITAIID_FIELD_NUMBER = 1;
    private int leitaiId_;
    /**
     * <pre>
     * 擂台ID
     * </pre>
     *
     * <code>int32 leitaiId = 1;</code>
     */
    public int getLeitaiId() {
      return leitaiId_;
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private int state_;
    /**
     * <pre>
     * 擂台状态
     * </pre>
     *
     * <code>int32 state = 2;</code>
     */
    public int getState() {
      return state_;
    }

    public static final int DEFPLAYER_FIELD_NUMBER = 3;
    private protocol.CrossArenaDB.RedisCrossArenaPlayer defPlayer_;
    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    public boolean hasDefPlayer() {
      return defPlayer_ != null;
    }
    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayer getDefPlayer() {
      return defPlayer_ == null ? protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : defPlayer_;
    }
    /**
     * <pre>
     * 守擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDefPlayerOrBuilder() {
      return getDefPlayer();
    }

    public static final int ATTPLAYER_FIELD_NUMBER = 4;
    private protocol.CrossArenaDB.RedisCrossArenaPlayer attPlayer_;
    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    public boolean hasAttPlayer() {
      return attPlayer_ != null;
    }
    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayer getAttPlayer() {
      return attPlayer_ == null ? protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : attPlayer_;
    }
    /**
     * <pre>
     * 攻擂玩家
     * </pre>
     *
     * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getAttPlayerOrBuilder() {
      return getAttPlayer();
    }

    public static final int DEFTIME_FIELD_NUMBER = 5;
    private long defTime_;
    /**
     * <pre>
     * 守擂持续时间
     * </pre>
     *
     * <code>int64 defTime = 5;</code>
     */
    public long getDefTime() {
      return defTime_;
    }

    public static final int DEFWINNUM_FIELD_NUMBER = 6;
    private int defWinNum_;
    /**
     * <pre>
     * 连胜次数
     * </pre>
     *
     * <code>int32 defWinNum = 6;</code>
     */
    public int getDefWinNum() {
      return defWinNum_;
    }

    public static final int BATTLEID_FIELD_NUMBER = 7;
    private long battleId_;
    /**
     * <pre>
     * 战斗ID
     * </pre>
     *
     * <code>int64 battleId = 7;</code>
     */
    public long getBattleId() {
      return battleId_;
    }

    public static final int SETTLETIME_FIELD_NUMBER = 8;
    private long settleTime_;
    /**
     * <code>int64 settleTime = 8;</code>
     */
    public long getSettleTime() {
      return settleTime_;
    }

    public static final int GUESSDEFSVRDATA_FIELD_NUMBER = 9;
    private static final class GuessDefSvrDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> guessDefSvrData_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetGuessDefSvrData() {
      if (guessDefSvrData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GuessDefSvrDataDefaultEntryHolder.defaultEntry);
      }
      return guessDefSvrData_;
    }

    public int getGuessDefSvrDataCount() {
      return internalGetGuessDefSvrData().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    public boolean containsGuessDefSvrData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetGuessDefSvrData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGuessDefSvrDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getGuessDefSvrData() {
      return getGuessDefSvrDataMap();
    }
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getGuessDefSvrDataMap() {
      return internalGetGuessDefSvrData().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    public java.lang.String getGuessDefSvrDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGuessDefSvrData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
     */

    public java.lang.String getGuessDefSvrDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGuessDefSvrData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int GUESSATTSVRDATA_FIELD_NUMBER = 10;
    private static final class GuessAttSvrDataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> guessAttSvrData_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetGuessAttSvrData() {
      if (guessAttSvrData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GuessAttSvrDataDefaultEntryHolder.defaultEntry);
      }
      return guessAttSvrData_;
    }

    public int getGuessAttSvrDataCount() {
      return internalGetGuessAttSvrData().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    public boolean containsGuessAttSvrData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetGuessAttSvrData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGuessAttSvrDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getGuessAttSvrData() {
      return getGuessAttSvrDataMap();
    }
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getGuessAttSvrDataMap() {
      return internalGetGuessAttSvrData().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    public java.lang.String getGuessAttSvrDataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGuessAttSvrData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
     */

    public java.lang.String getGuessAttSvrDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGuessAttSvrData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LASTBATTLETIME_FIELD_NUMBER = 11;
    private long lastBattleTime_;
    /**
     * <code>int64 lastBattleTime = 11;</code>
     */
    public long getLastBattleTime() {
      return lastBattleTime_;
    }

    public static final int DUI_FIELD_NUMBER = 12;
    private java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer> dui_;
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    public java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer> getDuiList() {
      return dui_;
    }
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    public java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
        getDuiOrBuilderList() {
      return dui_;
    }
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    public int getDuiCount() {
      return dui_.size();
    }
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayer getDui(int index) {
      return dui_.get(index);
    }
    /**
     * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDuiOrBuilder(
        int index) {
      return dui_.get(index);
    }

    public static final int STATEENDTIME_FIELD_NUMBER = 13;
    private long stateEndTime_;
    /**
     * <pre>
     * 状态结束时间
     * </pre>
     *
     * <code>int64 stateEndTime = 13;</code>
     */
    public long getStateEndTime() {
      return stateEndTime_;
    }

    public static final int ISAIBATTLE_FIELD_NUMBER = 14;
    private int isAIBattle_;
    /**
     * <code>int32 isAIBattle = 14;</code>
     */
    public int getIsAIBattle() {
      return isAIBattle_;
    }

    public static final int AIWIN_FIELD_NUMBER = 15;
    private int aiWin_;
    /**
     * <code>int32 aiWin = 15;</code>
     */
    public int getAiWin() {
      return aiWin_;
    }

    public static final int READYSTATE_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> readyState_;
    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    public java.util.List<java.lang.Integer>
        getReadyStateList() {
      return readyState_;
    }
    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    public int getReadyStateCount() {
      return readyState_.size();
    }
    /**
     * <code>repeated int32 readyState = 16;</code>
     */
    public int getReadyState(int index) {
      return readyState_.get(index);
    }
    private int readyStateMemoizedSerializedSize = -1;

    public static final int TYPE_FIELD_NUMBER = 17;
    private int type_;
    /**
     * <pre>
     *1临时擂台
     * </pre>
     *
     * <code>int32 type = 17;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (leitaiId_ != 0) {
        output.writeInt32(1, leitaiId_);
      }
      if (state_ != 0) {
        output.writeInt32(2, state_);
      }
      if (defPlayer_ != null) {
        output.writeMessage(3, getDefPlayer());
      }
      if (attPlayer_ != null) {
        output.writeMessage(4, getAttPlayer());
      }
      if (defTime_ != 0L) {
        output.writeInt64(5, defTime_);
      }
      if (defWinNum_ != 0) {
        output.writeInt32(6, defWinNum_);
      }
      if (battleId_ != 0L) {
        output.writeInt64(7, battleId_);
      }
      if (settleTime_ != 0L) {
        output.writeInt64(8, settleTime_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetGuessDefSvrData(),
          GuessDefSvrDataDefaultEntryHolder.defaultEntry,
          9);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetGuessAttSvrData(),
          GuessAttSvrDataDefaultEntryHolder.defaultEntry,
          10);
      if (lastBattleTime_ != 0L) {
        output.writeInt64(11, lastBattleTime_);
      }
      for (int i = 0; i < dui_.size(); i++) {
        output.writeMessage(12, dui_.get(i));
      }
      if (stateEndTime_ != 0L) {
        output.writeInt64(13, stateEndTime_);
      }
      if (isAIBattle_ != 0) {
        output.writeInt32(14, isAIBattle_);
      }
      if (aiWin_ != 0) {
        output.writeInt32(15, aiWin_);
      }
      if (getReadyStateList().size() > 0) {
        output.writeUInt32NoTag(130);
        output.writeUInt32NoTag(readyStateMemoizedSerializedSize);
      }
      for (int i = 0; i < readyState_.size(); i++) {
        output.writeInt32NoTag(readyState_.get(i));
      }
      if (type_ != 0) {
        output.writeInt32(17, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leitaiId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, leitaiId_);
      }
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, state_);
      }
      if (defPlayer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getDefPlayer());
      }
      if (attPlayer_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAttPlayer());
      }
      if (defTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, defTime_);
      }
      if (defWinNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, defWinNum_);
      }
      if (battleId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, battleId_);
      }
      if (settleTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, settleTime_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetGuessDefSvrData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        guessDefSvrData__ = GuessDefSvrDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, guessDefSvrData__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetGuessAttSvrData().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        guessAttSvrData__ = GuessAttSvrDataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, guessAttSvrData__);
      }
      if (lastBattleTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, lastBattleTime_);
      }
      for (int i = 0; i < dui_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, dui_.get(i));
      }
      if (stateEndTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, stateEndTime_);
      }
      if (isAIBattle_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isAIBattle_);
      }
      if (aiWin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, aiWin_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < readyState_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(readyState_.get(i));
        }
        size += dataSize;
        if (!getReadyStateList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        readyStateMemoizedSerializedSize = dataSize;
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaTableDB)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaTableDB other = (protocol.CrossArenaDB.RedisCrossArenaTableDB) obj;

      boolean result = true;
      result = result && (getLeitaiId()
          == other.getLeitaiId());
      result = result && (getState()
          == other.getState());
      result = result && (hasDefPlayer() == other.hasDefPlayer());
      if (hasDefPlayer()) {
        result = result && getDefPlayer()
            .equals(other.getDefPlayer());
      }
      result = result && (hasAttPlayer() == other.hasAttPlayer());
      if (hasAttPlayer()) {
        result = result && getAttPlayer()
            .equals(other.getAttPlayer());
      }
      result = result && (getDefTime()
          == other.getDefTime());
      result = result && (getDefWinNum()
          == other.getDefWinNum());
      result = result && (getBattleId()
          == other.getBattleId());
      result = result && (getSettleTime()
          == other.getSettleTime());
      result = result && internalGetGuessDefSvrData().equals(
          other.internalGetGuessDefSvrData());
      result = result && internalGetGuessAttSvrData().equals(
          other.internalGetGuessAttSvrData());
      result = result && (getLastBattleTime()
          == other.getLastBattleTime());
      result = result && getDuiList()
          .equals(other.getDuiList());
      result = result && (getStateEndTime()
          == other.getStateEndTime());
      result = result && (getIsAIBattle()
          == other.getIsAIBattle());
      result = result && (getAiWin()
          == other.getAiWin());
      result = result && getReadyStateList()
          .equals(other.getReadyStateList());
      result = result && (getType()
          == other.getType());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEITAIID_FIELD_NUMBER;
      hash = (53 * hash) + getLeitaiId();
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      if (hasDefPlayer()) {
        hash = (37 * hash) + DEFPLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getDefPlayer().hashCode();
      }
      if (hasAttPlayer()) {
        hash = (37 * hash) + ATTPLAYER_FIELD_NUMBER;
        hash = (53 * hash) + getAttPlayer().hashCode();
      }
      hash = (37 * hash) + DEFTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDefTime());
      hash = (37 * hash) + DEFWINNUM_FIELD_NUMBER;
      hash = (53 * hash) + getDefWinNum();
      hash = (37 * hash) + BATTLEID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBattleId());
      hash = (37 * hash) + SETTLETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSettleTime());
      if (!internalGetGuessDefSvrData().getMap().isEmpty()) {
        hash = (37 * hash) + GUESSDEFSVRDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetGuessDefSvrData().hashCode();
      }
      if (!internalGetGuessAttSvrData().getMap().isEmpty()) {
        hash = (37 * hash) + GUESSATTSVRDATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetGuessAttSvrData().hashCode();
      }
      hash = (37 * hash) + LASTBATTLETIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLastBattleTime());
      if (getDuiCount() > 0) {
        hash = (37 * hash) + DUI_FIELD_NUMBER;
        hash = (53 * hash) + getDuiList().hashCode();
      }
      hash = (37 * hash) + STATEENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStateEndTime());
      hash = (37 * hash) + ISAIBATTLE_FIELD_NUMBER;
      hash = (53 * hash) + getIsAIBattle();
      hash = (37 * hash) + AIWIN_FIELD_NUMBER;
      hash = (53 * hash) + getAiWin();
      if (getReadyStateCount() > 0) {
        hash = (37 * hash) + READYSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getReadyStateList().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTableDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaTableDB prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 单个擂台数据,分别存储
     * </pre>
     *
     * Protobuf type {@code RedisCrossArenaTableDB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaTableDB)
        protocol.CrossArenaDB.RedisCrossArenaTableDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetGuessDefSvrData();
          case 10:
            return internalGetGuessAttSvrData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMutableGuessDefSvrData();
          case 10:
            return internalGetMutableGuessAttSvrData();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaTableDB.class, protocol.CrossArenaDB.RedisCrossArenaTableDB.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaTableDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDuiFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        leitaiId_ = 0;

        state_ = 0;

        if (defPlayerBuilder_ == null) {
          defPlayer_ = null;
        } else {
          defPlayer_ = null;
          defPlayerBuilder_ = null;
        }
        if (attPlayerBuilder_ == null) {
          attPlayer_ = null;
        } else {
          attPlayer_ = null;
          attPlayerBuilder_ = null;
        }
        defTime_ = 0L;

        defWinNum_ = 0;

        battleId_ = 0L;

        settleTime_ = 0L;

        internalGetMutableGuessDefSvrData().clear();
        internalGetMutableGuessAttSvrData().clear();
        lastBattleTime_ = 0L;

        if (duiBuilder_ == null) {
          dui_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          duiBuilder_.clear();
        }
        stateEndTime_ = 0L;

        isAIBattle_ = 0;

        aiWin_ = 0;

        readyState_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTableDB_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTableDB getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaTableDB.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaTableDB build() {
        protocol.CrossArenaDB.RedisCrossArenaTableDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTableDB buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaTableDB result = new protocol.CrossArenaDB.RedisCrossArenaTableDB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.leitaiId_ = leitaiId_;
        result.state_ = state_;
        if (defPlayerBuilder_ == null) {
          result.defPlayer_ = defPlayer_;
        } else {
          result.defPlayer_ = defPlayerBuilder_.build();
        }
        if (attPlayerBuilder_ == null) {
          result.attPlayer_ = attPlayer_;
        } else {
          result.attPlayer_ = attPlayerBuilder_.build();
        }
        result.defTime_ = defTime_;
        result.defWinNum_ = defWinNum_;
        result.battleId_ = battleId_;
        result.settleTime_ = settleTime_;
        result.guessDefSvrData_ = internalGetGuessDefSvrData();
        result.guessDefSvrData_.makeImmutable();
        result.guessAttSvrData_ = internalGetGuessAttSvrData();
        result.guessAttSvrData_.makeImmutable();
        result.lastBattleTime_ = lastBattleTime_;
        if (duiBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            dui_ = java.util.Collections.unmodifiableList(dui_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.dui_ = dui_;
        } else {
          result.dui_ = duiBuilder_.build();
        }
        result.stateEndTime_ = stateEndTime_;
        result.isAIBattle_ = isAIBattle_;
        result.aiWin_ = aiWin_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          readyState_ = java.util.Collections.unmodifiableList(readyState_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.readyState_ = readyState_;
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaTableDB) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaTableDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaTableDB other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaTableDB.getDefaultInstance()) return this;
        if (other.getLeitaiId() != 0) {
          setLeitaiId(other.getLeitaiId());
        }
        if (other.getState() != 0) {
          setState(other.getState());
        }
        if (other.hasDefPlayer()) {
          mergeDefPlayer(other.getDefPlayer());
        }
        if (other.hasAttPlayer()) {
          mergeAttPlayer(other.getAttPlayer());
        }
        if (other.getDefTime() != 0L) {
          setDefTime(other.getDefTime());
        }
        if (other.getDefWinNum() != 0) {
          setDefWinNum(other.getDefWinNum());
        }
        if (other.getBattleId() != 0L) {
          setBattleId(other.getBattleId());
        }
        if (other.getSettleTime() != 0L) {
          setSettleTime(other.getSettleTime());
        }
        internalGetMutableGuessDefSvrData().mergeFrom(
            other.internalGetGuessDefSvrData());
        internalGetMutableGuessAttSvrData().mergeFrom(
            other.internalGetGuessAttSvrData());
        if (other.getLastBattleTime() != 0L) {
          setLastBattleTime(other.getLastBattleTime());
        }
        if (duiBuilder_ == null) {
          if (!other.dui_.isEmpty()) {
            if (dui_.isEmpty()) {
              dui_ = other.dui_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureDuiIsMutable();
              dui_.addAll(other.dui_);
            }
            onChanged();
          }
        } else {
          if (!other.dui_.isEmpty()) {
            if (duiBuilder_.isEmpty()) {
              duiBuilder_.dispose();
              duiBuilder_ = null;
              dui_ = other.dui_;
              bitField0_ = (bitField0_ & ~0x00000800);
              duiBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDuiFieldBuilder() : null;
            } else {
              duiBuilder_.addAllMessages(other.dui_);
            }
          }
        }
        if (other.getStateEndTime() != 0L) {
          setStateEndTime(other.getStateEndTime());
        }
        if (other.getIsAIBattle() != 0) {
          setIsAIBattle(other.getIsAIBattle());
        }
        if (other.getAiWin() != 0) {
          setAiWin(other.getAiWin());
        }
        if (!other.readyState_.isEmpty()) {
          if (readyState_.isEmpty()) {
            readyState_ = other.readyState_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureReadyStateIsMutable();
            readyState_.addAll(other.readyState_);
          }
          onChanged();
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaTableDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaTableDB) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int leitaiId_ ;
      /**
       * <pre>
       * 擂台ID
       * </pre>
       *
       * <code>int32 leitaiId = 1;</code>
       */
      public int getLeitaiId() {
        return leitaiId_;
      }
      /**
       * <pre>
       * 擂台ID
       * </pre>
       *
       * <code>int32 leitaiId = 1;</code>
       */
      public Builder setLeitaiId(int value) {
        
        leitaiId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 擂台ID
       * </pre>
       *
       * <code>int32 leitaiId = 1;</code>
       */
      public Builder clearLeitaiId() {
        
        leitaiId_ = 0;
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <pre>
       * 擂台状态
       * </pre>
       *
       * <code>int32 state = 2;</code>
       */
      public int getState() {
        return state_;
      }
      /**
       * <pre>
       * 擂台状态
       * </pre>
       *
       * <code>int32 state = 2;</code>
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 擂台状态
       * </pre>
       *
       * <code>int32 state = 2;</code>
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private protocol.CrossArenaDB.RedisCrossArenaPlayer defPlayer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> defPlayerBuilder_;
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public boolean hasDefPlayer() {
        return defPlayerBuilder_ != null || defPlayer_ != null;
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer getDefPlayer() {
        if (defPlayerBuilder_ == null) {
          return defPlayer_ == null ? protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : defPlayer_;
        } else {
          return defPlayerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public Builder setDefPlayer(protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (defPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defPlayer_ = value;
          onChanged();
        } else {
          defPlayerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public Builder setDefPlayer(
          protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder builderForValue) {
        if (defPlayerBuilder_ == null) {
          defPlayer_ = builderForValue.build();
          onChanged();
        } else {
          defPlayerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public Builder mergeDefPlayer(protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (defPlayerBuilder_ == null) {
          if (defPlayer_ != null) {
            defPlayer_ =
              protocol.CrossArenaDB.RedisCrossArenaPlayer.newBuilder(defPlayer_).mergeFrom(value).buildPartial();
          } else {
            defPlayer_ = value;
          }
          onChanged();
        } else {
          defPlayerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public Builder clearDefPlayer() {
        if (defPlayerBuilder_ == null) {
          defPlayer_ = null;
          onChanged();
        } else {
          defPlayer_ = null;
          defPlayerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder getDefPlayerBuilder() {
        
        onChanged();
        return getDefPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDefPlayerOrBuilder() {
        if (defPlayerBuilder_ != null) {
          return defPlayerBuilder_.getMessageOrBuilder();
        } else {
          return defPlayer_ == null ?
              protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : defPlayer_;
        }
      }
      /**
       * <pre>
       * 守擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer defPlayer = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
          getDefPlayerFieldBuilder() {
        if (defPlayerBuilder_ == null) {
          defPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder>(
                  getDefPlayer(),
                  getParentForChildren(),
                  isClean());
          defPlayer_ = null;
        }
        return defPlayerBuilder_;
      }

      private protocol.CrossArenaDB.RedisCrossArenaPlayer attPlayer_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> attPlayerBuilder_;
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public boolean hasAttPlayer() {
        return attPlayerBuilder_ != null || attPlayer_ != null;
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer getAttPlayer() {
        if (attPlayerBuilder_ == null) {
          return attPlayer_ == null ? protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : attPlayer_;
        } else {
          return attPlayerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public Builder setAttPlayer(protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (attPlayerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          attPlayer_ = value;
          onChanged();
        } else {
          attPlayerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public Builder setAttPlayer(
          protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder builderForValue) {
        if (attPlayerBuilder_ == null) {
          attPlayer_ = builderForValue.build();
          onChanged();
        } else {
          attPlayerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public Builder mergeAttPlayer(protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (attPlayerBuilder_ == null) {
          if (attPlayer_ != null) {
            attPlayer_ =
              protocol.CrossArenaDB.RedisCrossArenaPlayer.newBuilder(attPlayer_).mergeFrom(value).buildPartial();
          } else {
            attPlayer_ = value;
          }
          onChanged();
        } else {
          attPlayerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public Builder clearAttPlayer() {
        if (attPlayerBuilder_ == null) {
          attPlayer_ = null;
          onChanged();
        } else {
          attPlayer_ = null;
          attPlayerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder getAttPlayerBuilder() {
        
        onChanged();
        return getAttPlayerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getAttPlayerOrBuilder() {
        if (attPlayerBuilder_ != null) {
          return attPlayerBuilder_.getMessageOrBuilder();
        } else {
          return attPlayer_ == null ?
              protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance() : attPlayer_;
        }
      }
      /**
       * <pre>
       * 攻擂玩家
       * </pre>
       *
       * <code>.RedisCrossArenaPlayer attPlayer = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
          getAttPlayerFieldBuilder() {
        if (attPlayerBuilder_ == null) {
          attPlayerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder>(
                  getAttPlayer(),
                  getParentForChildren(),
                  isClean());
          attPlayer_ = null;
        }
        return attPlayerBuilder_;
      }

      private long defTime_ ;
      /**
       * <pre>
       * 守擂持续时间
       * </pre>
       *
       * <code>int64 defTime = 5;</code>
       */
      public long getDefTime() {
        return defTime_;
      }
      /**
       * <pre>
       * 守擂持续时间
       * </pre>
       *
       * <code>int64 defTime = 5;</code>
       */
      public Builder setDefTime(long value) {
        
        defTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 守擂持续时间
       * </pre>
       *
       * <code>int64 defTime = 5;</code>
       */
      public Builder clearDefTime() {
        
        defTime_ = 0L;
        onChanged();
        return this;
      }

      private int defWinNum_ ;
      /**
       * <pre>
       * 连胜次数
       * </pre>
       *
       * <code>int32 defWinNum = 6;</code>
       */
      public int getDefWinNum() {
        return defWinNum_;
      }
      /**
       * <pre>
       * 连胜次数
       * </pre>
       *
       * <code>int32 defWinNum = 6;</code>
       */
      public Builder setDefWinNum(int value) {
        
        defWinNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 连胜次数
       * </pre>
       *
       * <code>int32 defWinNum = 6;</code>
       */
      public Builder clearDefWinNum() {
        
        defWinNum_ = 0;
        onChanged();
        return this;
      }

      private long battleId_ ;
      /**
       * <pre>
       * 战斗ID
       * </pre>
       *
       * <code>int64 battleId = 7;</code>
       */
      public long getBattleId() {
        return battleId_;
      }
      /**
       * <pre>
       * 战斗ID
       * </pre>
       *
       * <code>int64 battleId = 7;</code>
       */
      public Builder setBattleId(long value) {
        
        battleId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 战斗ID
       * </pre>
       *
       * <code>int64 battleId = 7;</code>
       */
      public Builder clearBattleId() {
        
        battleId_ = 0L;
        onChanged();
        return this;
      }

      private long settleTime_ ;
      /**
       * <code>int64 settleTime = 8;</code>
       */
      public long getSettleTime() {
        return settleTime_;
      }
      /**
       * <code>int64 settleTime = 8;</code>
       */
      public Builder setSettleTime(long value) {
        
        settleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 settleTime = 8;</code>
       */
      public Builder clearSettleTime() {
        
        settleTime_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> guessDefSvrData_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetGuessDefSvrData() {
        if (guessDefSvrData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              GuessDefSvrDataDefaultEntryHolder.defaultEntry);
        }
        return guessDefSvrData_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableGuessDefSvrData() {
        onChanged();;
        if (guessDefSvrData_ == null) {
          guessDefSvrData_ = com.google.protobuf.MapField.newMapField(
              GuessDefSvrDataDefaultEntryHolder.defaultEntry);
        }
        if (!guessDefSvrData_.isMutable()) {
          guessDefSvrData_ = guessDefSvrData_.copy();
        }
        return guessDefSvrData_;
      }

      public int getGuessDefSvrDataCount() {
        return internalGetGuessDefSvrData().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public boolean containsGuessDefSvrData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetGuessDefSvrData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getGuessDefSvrDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getGuessDefSvrData() {
        return getGuessDefSvrDataMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getGuessDefSvrDataMap() {
        return internalGetGuessDefSvrData().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public java.lang.String getGuessDefSvrDataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGuessDefSvrData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public java.lang.String getGuessDefSvrDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGuessDefSvrData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearGuessDefSvrData() {
        internalGetMutableGuessDefSvrData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public Builder removeGuessDefSvrData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGuessDefSvrData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableGuessDefSvrData() {
        return internalGetMutableGuessDefSvrData().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */
      public Builder putGuessDefSvrData(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGuessDefSvrData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; guessDefSvrData = 9;</code>
       */

      public Builder putAllGuessDefSvrData(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableGuessDefSvrData().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> guessAttSvrData_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetGuessAttSvrData() {
        if (guessAttSvrData_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              GuessAttSvrDataDefaultEntryHolder.defaultEntry);
        }
        return guessAttSvrData_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableGuessAttSvrData() {
        onChanged();;
        if (guessAttSvrData_ == null) {
          guessAttSvrData_ = com.google.protobuf.MapField.newMapField(
              GuessAttSvrDataDefaultEntryHolder.defaultEntry);
        }
        if (!guessAttSvrData_.isMutable()) {
          guessAttSvrData_ = guessAttSvrData_.copy();
        }
        return guessAttSvrData_;
      }

      public int getGuessAttSvrDataCount() {
        return internalGetGuessAttSvrData().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public boolean containsGuessAttSvrData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetGuessAttSvrData().getMap().containsKey(key);
      }
      /**
       * Use {@link #getGuessAttSvrDataMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getGuessAttSvrData() {
        return getGuessAttSvrDataMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getGuessAttSvrDataMap() {
        return internalGetGuessAttSvrData().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public java.lang.String getGuessAttSvrDataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGuessAttSvrData().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public java.lang.String getGuessAttSvrDataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGuessAttSvrData().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearGuessAttSvrData() {
        internalGetMutableGuessAttSvrData().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public Builder removeGuessAttSvrData(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGuessAttSvrData().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableGuessAttSvrData() {
        return internalGetMutableGuessAttSvrData().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */
      public Builder putGuessAttSvrData(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGuessAttSvrData().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; guessAttSvrData = 10;</code>
       */

      public Builder putAllGuessAttSvrData(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableGuessAttSvrData().getMutableMap()
            .putAll(values);
        return this;
      }

      private long lastBattleTime_ ;
      /**
       * <code>int64 lastBattleTime = 11;</code>
       */
      public long getLastBattleTime() {
        return lastBattleTime_;
      }
      /**
       * <code>int64 lastBattleTime = 11;</code>
       */
      public Builder setLastBattleTime(long value) {
        
        lastBattleTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 lastBattleTime = 11;</code>
       */
      public Builder clearLastBattleTime() {
        
        lastBattleTime_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer> dui_ =
        java.util.Collections.emptyList();
      private void ensureDuiIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          dui_ = new java.util.ArrayList<protocol.CrossArenaDB.RedisCrossArenaPlayer>(dui_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> duiBuilder_;

      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer> getDuiList() {
        if (duiBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dui_);
        } else {
          return duiBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public int getDuiCount() {
        if (duiBuilder_ == null) {
          return dui_.size();
        } else {
          return duiBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer getDui(int index) {
        if (duiBuilder_ == null) {
          return dui_.get(index);
        } else {
          return duiBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder setDui(
          int index, protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (duiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDuiIsMutable();
          dui_.set(index, value);
          onChanged();
        } else {
          duiBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder setDui(
          int index, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder builderForValue) {
        if (duiBuilder_ == null) {
          ensureDuiIsMutable();
          dui_.set(index, builderForValue.build());
          onChanged();
        } else {
          duiBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder addDui(protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (duiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDuiIsMutable();
          dui_.add(value);
          onChanged();
        } else {
          duiBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder addDui(
          int index, protocol.CrossArenaDB.RedisCrossArenaPlayer value) {
        if (duiBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDuiIsMutable();
          dui_.add(index, value);
          onChanged();
        } else {
          duiBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder addDui(
          protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder builderForValue) {
        if (duiBuilder_ == null) {
          ensureDuiIsMutable();
          dui_.add(builderForValue.build());
          onChanged();
        } else {
          duiBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder addDui(
          int index, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder builderForValue) {
        if (duiBuilder_ == null) {
          ensureDuiIsMutable();
          dui_.add(index, builderForValue.build());
          onChanged();
        } else {
          duiBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder addAllDui(
          java.lang.Iterable<? extends protocol.CrossArenaDB.RedisCrossArenaPlayer> values) {
        if (duiBuilder_ == null) {
          ensureDuiIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dui_);
          onChanged();
        } else {
          duiBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder clearDui() {
        if (duiBuilder_ == null) {
          dui_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          duiBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public Builder removeDui(int index) {
        if (duiBuilder_ == null) {
          ensureDuiIsMutable();
          dui_.remove(index);
          onChanged();
        } else {
          duiBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder getDuiBuilder(
          int index) {
        return getDuiFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder getDuiOrBuilder(
          int index) {
        if (duiBuilder_ == null) {
          return dui_.get(index);  } else {
          return duiBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
           getDuiOrBuilderList() {
        if (duiBuilder_ != null) {
          return duiBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dui_);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder addDuiBuilder() {
        return getDuiFieldBuilder().addBuilder(
            protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder addDuiBuilder(
          int index) {
        return getDuiFieldBuilder().addBuilder(
            index, protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .RedisCrossArenaPlayer dui = 12;</code>
       */
      public java.util.List<protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder> 
           getDuiBuilderList() {
        return getDuiFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder> 
          getDuiFieldBuilder() {
        if (duiBuilder_ == null) {
          duiBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.CrossArenaDB.RedisCrossArenaPlayer, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder, protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder>(
                  dui_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          dui_ = null;
        }
        return duiBuilder_;
      }

      private long stateEndTime_ ;
      /**
       * <pre>
       * 状态结束时间
       * </pre>
       *
       * <code>int64 stateEndTime = 13;</code>
       */
      public long getStateEndTime() {
        return stateEndTime_;
      }
      /**
       * <pre>
       * 状态结束时间
       * </pre>
       *
       * <code>int64 stateEndTime = 13;</code>
       */
      public Builder setStateEndTime(long value) {
        
        stateEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 状态结束时间
       * </pre>
       *
       * <code>int64 stateEndTime = 13;</code>
       */
      public Builder clearStateEndTime() {
        
        stateEndTime_ = 0L;
        onChanged();
        return this;
      }

      private int isAIBattle_ ;
      /**
       * <code>int32 isAIBattle = 14;</code>
       */
      public int getIsAIBattle() {
        return isAIBattle_;
      }
      /**
       * <code>int32 isAIBattle = 14;</code>
       */
      public Builder setIsAIBattle(int value) {
        
        isAIBattle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAIBattle = 14;</code>
       */
      public Builder clearIsAIBattle() {
        
        isAIBattle_ = 0;
        onChanged();
        return this;
      }

      private int aiWin_ ;
      /**
       * <code>int32 aiWin = 15;</code>
       */
      public int getAiWin() {
        return aiWin_;
      }
      /**
       * <code>int32 aiWin = 15;</code>
       */
      public Builder setAiWin(int value) {
        
        aiWin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 aiWin = 15;</code>
       */
      public Builder clearAiWin() {
        
        aiWin_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> readyState_ = java.util.Collections.emptyList();
      private void ensureReadyStateIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          readyState_ = new java.util.ArrayList<java.lang.Integer>(readyState_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public java.util.List<java.lang.Integer>
          getReadyStateList() {
        return java.util.Collections.unmodifiableList(readyState_);
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public int getReadyStateCount() {
        return readyState_.size();
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public int getReadyState(int index) {
        return readyState_.get(index);
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public Builder setReadyState(
          int index, int value) {
        ensureReadyStateIsMutable();
        readyState_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public Builder addReadyState(int value) {
        ensureReadyStateIsMutable();
        readyState_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public Builder addAllReadyState(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReadyStateIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, readyState_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 readyState = 16;</code>
       */
      public Builder clearReadyState() {
        readyState_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       *1临时擂台
       * </pre>
       *
       * <code>int32 type = 17;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       *1临时擂台
       * </pre>
       *
       * <code>int32 type = 17;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *1临时擂台
       * </pre>
       *
       * <code>int32 type = 17;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaTableDB)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaTableDB)
    private static final protocol.CrossArenaDB.RedisCrossArenaTableDB DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaTableDB();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTableDB getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaTableDB>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaTableDB>() {
      public RedisCrossArenaTableDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaTableDB(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaTableDB> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaTableDB> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaTableDB getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaGuessInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaGuessInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string playerIdx = 1;</code>
     */
    java.lang.String getPlayerIdx();
    /**
     * <code>string playerIdx = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdxBytes();

    /**
     * <code>int32 isWin = 2;</code>
     */
    int getIsWin();

    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string ip = 3;</code>
     */
    java.lang.String getIp();
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string ip = 3;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <code>int32 svrIndex = 4;</code>
     */
    int getSvrIndex();
  }
  /**
   * <pre>
   * 竞猜数据，结算需要通知结果
   * </pre>
   *
   * Protobuf type {@code RedisCrossArenaGuessInfo}
   */
  public  static final class RedisCrossArenaGuessInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaGuessInfo)
      RedisCrossArenaGuessInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaGuessInfo.newBuilder() to construct.
    private RedisCrossArenaGuessInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaGuessInfo() {
      playerIdx_ = "";
      isWin_ = 0;
      ip_ = "";
      svrIndex_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaGuessInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              playerIdx_ = s;
              break;
            }
            case 16: {

              isWin_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              ip_ = s;
              break;
            }
            case 32: {

              svrIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaGuessInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaGuessInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaGuessInfo.class, protocol.CrossArenaDB.RedisCrossArenaGuessInfo.Builder.class);
    }

    public static final int PLAYERIDX_FIELD_NUMBER = 1;
    private volatile java.lang.Object playerIdx_;
    /**
     * <code>string playerIdx = 1;</code>
     */
    public java.lang.String getPlayerIdx() {
      java.lang.Object ref = playerIdx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playerIdx_ = s;
        return s;
      }
    }
    /**
     * <code>string playerIdx = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdxBytes() {
      java.lang.Object ref = playerIdx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerIdx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISWIN_FIELD_NUMBER = 2;
    private int isWin_;
    /**
     * <code>int32 isWin = 2;</code>
     */
    public int getIsWin() {
      return isWin_;
    }

    public static final int IP_FIELD_NUMBER = 3;
    private volatile java.lang.Object ip_;
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string ip = 3;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        ip_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string ip = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SVRINDEX_FIELD_NUMBER = 4;
    private int svrIndex_;
    /**
     * <code>int32 svrIndex = 4;</code>
     */
    public int getSvrIndex() {
      return svrIndex_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPlayerIdxBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, playerIdx_);
      }
      if (isWin_ != 0) {
        output.writeInt32(2, isWin_);
      }
      if (!getIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ip_);
      }
      if (svrIndex_ != 0) {
        output.writeInt32(4, svrIndex_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlayerIdxBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, playerIdx_);
      }
      if (isWin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isWin_);
      }
      if (!getIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ip_);
      }
      if (svrIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, svrIndex_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaGuessInfo)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaGuessInfo other = (protocol.CrossArenaDB.RedisCrossArenaGuessInfo) obj;

      boolean result = true;
      result = result && getPlayerIdx()
          .equals(other.getPlayerIdx());
      result = result && (getIsWin()
          == other.getIsWin());
      result = result && getIp()
          .equals(other.getIp());
      result = result && (getSvrIndex()
          == other.getSvrIndex());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYERIDX_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerIdx().hashCode();
      hash = (37 * hash) + ISWIN_FIELD_NUMBER;
      hash = (53 * hash) + getIsWin();
      hash = (37 * hash) + IP_FIELD_NUMBER;
      hash = (53 * hash) + getIp().hashCode();
      hash = (37 * hash) + SVRINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getSvrIndex();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaGuessInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 竞猜数据，结算需要通知结果
     * </pre>
     *
     * Protobuf type {@code RedisCrossArenaGuessInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaGuessInfo)
        protocol.CrossArenaDB.RedisCrossArenaGuessInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGuessInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGuessInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaGuessInfo.class, protocol.CrossArenaDB.RedisCrossArenaGuessInfo.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaGuessInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        playerIdx_ = "";

        isWin_ = 0;

        ip_ = "";

        svrIndex_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGuessInfo_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaGuessInfo getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaGuessInfo.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaGuessInfo build() {
        protocol.CrossArenaDB.RedisCrossArenaGuessInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaGuessInfo buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaGuessInfo result = new protocol.CrossArenaDB.RedisCrossArenaGuessInfo(this);
        result.playerIdx_ = playerIdx_;
        result.isWin_ = isWin_;
        result.ip_ = ip_;
        result.svrIndex_ = svrIndex_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaGuessInfo) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaGuessInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaGuessInfo other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaGuessInfo.getDefaultInstance()) return this;
        if (!other.getPlayerIdx().isEmpty()) {
          playerIdx_ = other.playerIdx_;
          onChanged();
        }
        if (other.getIsWin() != 0) {
          setIsWin(other.getIsWin());
        }
        if (!other.getIp().isEmpty()) {
          ip_ = other.ip_;
          onChanged();
        }
        if (other.getSvrIndex() != 0) {
          setSvrIndex(other.getSvrIndex());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaGuessInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaGuessInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object playerIdx_ = "";
      /**
       * <code>string playerIdx = 1;</code>
       */
      public java.lang.String getPlayerIdx() {
        java.lang.Object ref = playerIdx_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          playerIdx_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string playerIdx = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdxBytes() {
        java.lang.Object ref = playerIdx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerIdx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string playerIdx = 1;</code>
       */
      public Builder setPlayerIdx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerIdx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string playerIdx = 1;</code>
       */
      public Builder clearPlayerIdx() {
        
        playerIdx_ = getDefaultInstance().getPlayerIdx();
        onChanged();
        return this;
      }
      /**
       * <code>string playerIdx = 1;</code>
       */
      public Builder setPlayerIdxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerIdx_ = value;
        onChanged();
        return this;
      }

      private int isWin_ ;
      /**
       * <code>int32 isWin = 2;</code>
       */
      public int getIsWin() {
        return isWin_;
      }
      /**
       * <code>int32 isWin = 2;</code>
       */
      public Builder setIsWin(int value) {
        
        isWin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isWin = 2;</code>
       */
      public Builder clearIsWin() {
        
        isWin_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ip_ = "";
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string ip = 3;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string ip = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string ip = 3;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string ip = 3;</code>
       */
      public Builder clearIp() {
        
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string ip = 3;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        ip_ = value;
        onChanged();
        return this;
      }

      private int svrIndex_ ;
      /**
       * <code>int32 svrIndex = 4;</code>
       */
      public int getSvrIndex() {
        return svrIndex_;
      }
      /**
       * <code>int32 svrIndex = 4;</code>
       */
      public Builder setSvrIndex(int value) {
        
        svrIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 svrIndex = 4;</code>
       */
      public Builder clearSvrIndex() {
        
        svrIndex_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaGuessInfo)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaGuessInfo)
    private static final protocol.CrossArenaDB.RedisCrossArenaGuessInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaGuessInfo();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaGuessInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaGuessInfo>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaGuessInfo>() {
      public RedisCrossArenaGuessInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaGuessInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaGuessInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaGuessInfo> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaGuessInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 玩家名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * 玩家名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 2;</code>
     */
    java.lang.String getPlayerId();
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    /**
     * <pre>
     * 玩家idx
     * </pre>
     *
     * <code>int32 svrIndex = 3;</code>
     */
    int getSvrIndex();

    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string formIpPort = 4;</code>
     */
    java.lang.String getFormIpPort();
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string formIpPort = 4;</code>
     */
    com.google.protobuf.ByteString
        getFormIpPortBytes();

    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    boolean hasTeamInfo();
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    protocol.Battle.BattlePlayerInfo getTeamInfo();
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder();

    /**
     * <pre>
     * 展示宠物ID
     * </pre>
     *
     * <code>int32 showPetId = 6;</code>
     */
    int getShowPetId();

    /**
     * <code>int64 jionTime = 7;</code>
     */
    long getJionTime();

    /**
     * <pre>
     * 处理手动下擂问题，带着连胜纪录战斗，战斗胜利维持连胜数据
     * </pre>
     *
     * <code>int32 defNum = 8;</code>
     */
    int getDefNum();

    /**
     * <code>int64 power = 9;</code>
     */
    long getPower();

    /**
     * <code>int32 isAI = 10;</code>
     */
    int getIsAI();

    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    java.util.List<protocol.Battle.ExtendProperty> 
        getExtendPropList();
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    protocol.Battle.ExtendProperty getExtendProp(int index);
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    int getExtendPropCount();
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    java.util.List<? extends protocol.Battle.ExtendPropertyOrBuilder> 
        getExtendPropOrBuilderList();
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    protocol.Battle.ExtendPropertyOrBuilder getExtendPropOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code RedisCrossArenaPlayer}
   */
  public  static final class RedisCrossArenaPlayer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaPlayer)
      RedisCrossArenaPlayerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaPlayer.newBuilder() to construct.
    private RedisCrossArenaPlayer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaPlayer() {
      name_ = "";
      playerId_ = "";
      svrIndex_ = 0;
      formIpPort_ = "";
      showPetId_ = 0;
      jionTime_ = 0L;
      defNum_ = 0;
      power_ = 0L;
      isAI_ = 0;
      extendProp_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              playerId_ = s;
              break;
            }
            case 24: {

              svrIndex_ = input.readInt32();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              formIpPort_ = s;
              break;
            }
            case 42: {
              protocol.Battle.BattlePlayerInfo.Builder subBuilder = null;
              if (teamInfo_ != null) {
                subBuilder = teamInfo_.toBuilder();
              }
              teamInfo_ = input.readMessage(protocol.Battle.BattlePlayerInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teamInfo_);
                teamInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              showPetId_ = input.readInt32();
              break;
            }
            case 56: {

              jionTime_ = input.readInt64();
              break;
            }
            case 64: {

              defNum_ = input.readInt32();
              break;
            }
            case 72: {

              power_ = input.readInt64();
              break;
            }
            case 80: {

              isAI_ = input.readInt32();
              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                extendProp_ = new java.util.ArrayList<protocol.Battle.ExtendProperty>();
                mutable_bitField0_ |= 0x00000400;
              }
              extendProp_.add(
                  input.readMessage(protocol.Battle.ExtendProperty.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          extendProp_ = java.util.Collections.unmodifiableList(extendProp_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaPlayer.class, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * 玩家名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 玩家名字
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERID_FIELD_NUMBER = 2;
    private volatile java.lang.Object playerId_;
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 2;</code>
     */
    public java.lang.String getPlayerId() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SVRINDEX_FIELD_NUMBER = 3;
    private int svrIndex_;
    /**
     * <pre>
     * 玩家idx
     * </pre>
     *
     * <code>int32 svrIndex = 3;</code>
     */
    public int getSvrIndex() {
      return svrIndex_;
    }

    public static final int FORMIPPORT_FIELD_NUMBER = 4;
    private volatile java.lang.Object formIpPort_;
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string formIpPort = 4;</code>
     */
    public java.lang.String getFormIpPort() {
      java.lang.Object ref = formIpPort_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        formIpPort_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *(即将废弃)
     * </pre>
     *
     * <code>string formIpPort = 4;</code>
     */
    public com.google.protobuf.ByteString
        getFormIpPortBytes() {
      java.lang.Object ref = formIpPort_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formIpPort_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAMINFO_FIELD_NUMBER = 5;
    private protocol.Battle.BattlePlayerInfo teamInfo_;
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    public boolean hasTeamInfo() {
      return teamInfo_ != null;
    }
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    public protocol.Battle.BattlePlayerInfo getTeamInfo() {
      return teamInfo_ == null ? protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
    }
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 5;</code>
     */
    public protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder() {
      return getTeamInfo();
    }

    public static final int SHOWPETID_FIELD_NUMBER = 6;
    private int showPetId_;
    /**
     * <pre>
     * 展示宠物ID
     * </pre>
     *
     * <code>int32 showPetId = 6;</code>
     */
    public int getShowPetId() {
      return showPetId_;
    }

    public static final int JIONTIME_FIELD_NUMBER = 7;
    private long jionTime_;
    /**
     * <code>int64 jionTime = 7;</code>
     */
    public long getJionTime() {
      return jionTime_;
    }

    public static final int DEFNUM_FIELD_NUMBER = 8;
    private int defNum_;
    /**
     * <pre>
     * 处理手动下擂问题，带着连胜纪录战斗，战斗胜利维持连胜数据
     * </pre>
     *
     * <code>int32 defNum = 8;</code>
     */
    public int getDefNum() {
      return defNum_;
    }

    public static final int POWER_FIELD_NUMBER = 9;
    private long power_;
    /**
     * <code>int64 power = 9;</code>
     */
    public long getPower() {
      return power_;
    }

    public static final int ISAI_FIELD_NUMBER = 10;
    private int isAI_;
    /**
     * <code>int32 isAI = 10;</code>
     */
    public int getIsAI() {
      return isAI_;
    }

    public static final int EXTENDPROP_FIELD_NUMBER = 11;
    private java.util.List<protocol.Battle.ExtendProperty> extendProp_;
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    public java.util.List<protocol.Battle.ExtendProperty> getExtendPropList() {
      return extendProp_;
    }
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    public java.util.List<? extends protocol.Battle.ExtendPropertyOrBuilder> 
        getExtendPropOrBuilderList() {
      return extendProp_;
    }
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    public int getExtendPropCount() {
      return extendProp_.size();
    }
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    public protocol.Battle.ExtendProperty getExtendProp(int index) {
      return extendProp_.get(index);
    }
    /**
     * <code>repeated .ExtendProperty extendProp = 11;</code>
     */
    public protocol.Battle.ExtendPropertyOrBuilder getExtendPropOrBuilder(
        int index) {
      return extendProp_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!getPlayerIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, playerId_);
      }
      if (svrIndex_ != 0) {
        output.writeInt32(3, svrIndex_);
      }
      if (!getFormIpPortBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, formIpPort_);
      }
      if (teamInfo_ != null) {
        output.writeMessage(5, getTeamInfo());
      }
      if (showPetId_ != 0) {
        output.writeInt32(6, showPetId_);
      }
      if (jionTime_ != 0L) {
        output.writeInt64(7, jionTime_);
      }
      if (defNum_ != 0) {
        output.writeInt32(8, defNum_);
      }
      if (power_ != 0L) {
        output.writeInt64(9, power_);
      }
      if (isAI_ != 0) {
        output.writeInt32(10, isAI_);
      }
      for (int i = 0; i < extendProp_.size(); i++) {
        output.writeMessage(11, extendProp_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!getPlayerIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, playerId_);
      }
      if (svrIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, svrIndex_);
      }
      if (!getFormIpPortBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, formIpPort_);
      }
      if (teamInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getTeamInfo());
      }
      if (showPetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, showPetId_);
      }
      if (jionTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, jionTime_);
      }
      if (defNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, defNum_);
      }
      if (power_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, power_);
      }
      if (isAI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, isAI_);
      }
      for (int i = 0; i < extendProp_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, extendProp_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaPlayer)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaPlayer other = (protocol.CrossArenaDB.RedisCrossArenaPlayer) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getPlayerId()
          .equals(other.getPlayerId());
      result = result && (getSvrIndex()
          == other.getSvrIndex());
      result = result && getFormIpPort()
          .equals(other.getFormIpPort());
      result = result && (hasTeamInfo() == other.hasTeamInfo());
      if (hasTeamInfo()) {
        result = result && getTeamInfo()
            .equals(other.getTeamInfo());
      }
      result = result && (getShowPetId()
          == other.getShowPetId());
      result = result && (getJionTime()
          == other.getJionTime());
      result = result && (getDefNum()
          == other.getDefNum());
      result = result && (getPower()
          == other.getPower());
      result = result && (getIsAI()
          == other.getIsAI());
      result = result && getExtendPropList()
          .equals(other.getExtendPropList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId().hashCode();
      hash = (37 * hash) + SVRINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getSvrIndex();
      hash = (37 * hash) + FORMIPPORT_FIELD_NUMBER;
      hash = (53 * hash) + getFormIpPort().hashCode();
      if (hasTeamInfo()) {
        hash = (37 * hash) + TEAMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getTeamInfo().hashCode();
      }
      hash = (37 * hash) + SHOWPETID_FIELD_NUMBER;
      hash = (53 * hash) + getShowPetId();
      hash = (37 * hash) + JIONTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getJionTime());
      hash = (37 * hash) + DEFNUM_FIELD_NUMBER;
      hash = (53 * hash) + getDefNum();
      hash = (37 * hash) + POWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPower());
      hash = (37 * hash) + ISAI_FIELD_NUMBER;
      hash = (53 * hash) + getIsAI();
      if (getExtendPropCount() > 0) {
        hash = (37 * hash) + EXTENDPROP_FIELD_NUMBER;
        hash = (53 * hash) + getExtendPropList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaPlayer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedisCrossArenaPlayer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaPlayer)
        protocol.CrossArenaDB.RedisCrossArenaPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaPlayer.class, protocol.CrossArenaDB.RedisCrossArenaPlayer.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getExtendPropFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        playerId_ = "";

        svrIndex_ = 0;

        formIpPort_ = "";

        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }
        showPetId_ = 0;

        jionTime_ = 0L;

        defNum_ = 0;

        power_ = 0L;

        isAI_ = 0;

        if (extendPropBuilder_ == null) {
          extendProp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          extendPropBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaPlayer_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaPlayer getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaPlayer build() {
        protocol.CrossArenaDB.RedisCrossArenaPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaPlayer buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaPlayer result = new protocol.CrossArenaDB.RedisCrossArenaPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.playerId_ = playerId_;
        result.svrIndex_ = svrIndex_;
        result.formIpPort_ = formIpPort_;
        if (teamInfoBuilder_ == null) {
          result.teamInfo_ = teamInfo_;
        } else {
          result.teamInfo_ = teamInfoBuilder_.build();
        }
        result.showPetId_ = showPetId_;
        result.jionTime_ = jionTime_;
        result.defNum_ = defNum_;
        result.power_ = power_;
        result.isAI_ = isAI_;
        if (extendPropBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            extendProp_ = java.util.Collections.unmodifiableList(extendProp_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.extendProp_ = extendProp_;
        } else {
          result.extendProp_ = extendPropBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaPlayer) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaPlayer other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaPlayer.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getPlayerId().isEmpty()) {
          playerId_ = other.playerId_;
          onChanged();
        }
        if (other.getSvrIndex() != 0) {
          setSvrIndex(other.getSvrIndex());
        }
        if (!other.getFormIpPort().isEmpty()) {
          formIpPort_ = other.formIpPort_;
          onChanged();
        }
        if (other.hasTeamInfo()) {
          mergeTeamInfo(other.getTeamInfo());
        }
        if (other.getShowPetId() != 0) {
          setShowPetId(other.getShowPetId());
        }
        if (other.getJionTime() != 0L) {
          setJionTime(other.getJionTime());
        }
        if (other.getDefNum() != 0) {
          setDefNum(other.getDefNum());
        }
        if (other.getPower() != 0L) {
          setPower(other.getPower());
        }
        if (other.getIsAI() != 0) {
          setIsAI(other.getIsAI());
        }
        if (extendPropBuilder_ == null) {
          if (!other.extendProp_.isEmpty()) {
            if (extendProp_.isEmpty()) {
              extendProp_ = other.extendProp_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureExtendPropIsMutable();
              extendProp_.addAll(other.extendProp_);
            }
            onChanged();
          }
        } else {
          if (!other.extendProp_.isEmpty()) {
            if (extendPropBuilder_.isEmpty()) {
              extendPropBuilder_.dispose();
              extendPropBuilder_ = null;
              extendProp_ = other.extendProp_;
              bitField0_ = (bitField0_ & ~0x00000400);
              extendPropBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getExtendPropFieldBuilder() : null;
            } else {
              extendPropBuilder_.addAllMessages(other.extendProp_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaPlayer) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * 玩家名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * 玩家名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 玩家名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家名字
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object playerId_ = "";
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 2;</code>
       */
      public java.lang.String getPlayerId() {
        java.lang.Object ref = playerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        java.lang.Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 2;</code>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 2;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 2;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerId_ = value;
        onChanged();
        return this;
      }

      private int svrIndex_ ;
      /**
       * <pre>
       * 玩家idx
       * </pre>
       *
       * <code>int32 svrIndex = 3;</code>
       */
      public int getSvrIndex() {
        return svrIndex_;
      }
      /**
       * <pre>
       * 玩家idx
       * </pre>
       *
       * <code>int32 svrIndex = 3;</code>
       */
      public Builder setSvrIndex(int value) {
        
        svrIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 玩家idx
       * </pre>
       *
       * <code>int32 svrIndex = 3;</code>
       */
      public Builder clearSvrIndex() {
        
        svrIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object formIpPort_ = "";
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string formIpPort = 4;</code>
       */
      public java.lang.String getFormIpPort() {
        java.lang.Object ref = formIpPort_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          formIpPort_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string formIpPort = 4;</code>
       */
      public com.google.protobuf.ByteString
          getFormIpPortBytes() {
        java.lang.Object ref = formIpPort_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formIpPort_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string formIpPort = 4;</code>
       */
      public Builder setFormIpPort(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        formIpPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string formIpPort = 4;</code>
       */
      public Builder clearFormIpPort() {
        
        formIpPort_ = getDefaultInstance().getFormIpPort();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *(即将废弃)
       * </pre>
       *
       * <code>string formIpPort = 4;</code>
       */
      public Builder setFormIpPortBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        formIpPort_ = value;
        onChanged();
        return this;
      }

      private protocol.Battle.BattlePlayerInfo teamInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder> teamInfoBuilder_;
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public boolean hasTeamInfo() {
        return teamInfoBuilder_ != null || teamInfo_ != null;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public protocol.Battle.BattlePlayerInfo getTeamInfo() {
        if (teamInfoBuilder_ == null) {
          return teamInfo_ == null ? protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
        } else {
          return teamInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public Builder setTeamInfo(protocol.Battle.BattlePlayerInfo value) {
        if (teamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teamInfo_ = value;
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public Builder setTeamInfo(
          protocol.Battle.BattlePlayerInfo.Builder builderForValue) {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = builderForValue.build();
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public Builder mergeTeamInfo(protocol.Battle.BattlePlayerInfo value) {
        if (teamInfoBuilder_ == null) {
          if (teamInfo_ != null) {
            teamInfo_ =
              protocol.Battle.BattlePlayerInfo.newBuilder(teamInfo_).mergeFrom(value).buildPartial();
          } else {
            teamInfo_ = value;
          }
          onChanged();
        } else {
          teamInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public Builder clearTeamInfo() {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
          onChanged();
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public protocol.Battle.BattlePlayerInfo.Builder getTeamInfoBuilder() {
        
        onChanged();
        return getTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      public protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder() {
        if (teamInfoBuilder_ != null) {
          return teamInfoBuilder_.getMessageOrBuilder();
        } else {
          return teamInfo_ == null ?
              protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
        }
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder> 
          getTeamInfoFieldBuilder() {
        if (teamInfoBuilder_ == null) {
          teamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder>(
                  getTeamInfo(),
                  getParentForChildren(),
                  isClean());
          teamInfo_ = null;
        }
        return teamInfoBuilder_;
      }

      private int showPetId_ ;
      /**
       * <pre>
       * 展示宠物ID
       * </pre>
       *
       * <code>int32 showPetId = 6;</code>
       */
      public int getShowPetId() {
        return showPetId_;
      }
      /**
       * <pre>
       * 展示宠物ID
       * </pre>
       *
       * <code>int32 showPetId = 6;</code>
       */
      public Builder setShowPetId(int value) {
        
        showPetId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 展示宠物ID
       * </pre>
       *
       * <code>int32 showPetId = 6;</code>
       */
      public Builder clearShowPetId() {
        
        showPetId_ = 0;
        onChanged();
        return this;
      }

      private long jionTime_ ;
      /**
       * <code>int64 jionTime = 7;</code>
       */
      public long getJionTime() {
        return jionTime_;
      }
      /**
       * <code>int64 jionTime = 7;</code>
       */
      public Builder setJionTime(long value) {
        
        jionTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 jionTime = 7;</code>
       */
      public Builder clearJionTime() {
        
        jionTime_ = 0L;
        onChanged();
        return this;
      }

      private int defNum_ ;
      /**
       * <pre>
       * 处理手动下擂问题，带着连胜纪录战斗，战斗胜利维持连胜数据
       * </pre>
       *
       * <code>int32 defNum = 8;</code>
       */
      public int getDefNum() {
        return defNum_;
      }
      /**
       * <pre>
       * 处理手动下擂问题，带着连胜纪录战斗，战斗胜利维持连胜数据
       * </pre>
       *
       * <code>int32 defNum = 8;</code>
       */
      public Builder setDefNum(int value) {
        
        defNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 处理手动下擂问题，带着连胜纪录战斗，战斗胜利维持连胜数据
       * </pre>
       *
       * <code>int32 defNum = 8;</code>
       */
      public Builder clearDefNum() {
        
        defNum_ = 0;
        onChanged();
        return this;
      }

      private long power_ ;
      /**
       * <code>int64 power = 9;</code>
       */
      public long getPower() {
        return power_;
      }
      /**
       * <code>int64 power = 9;</code>
       */
      public Builder setPower(long value) {
        
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 power = 9;</code>
       */
      public Builder clearPower() {
        
        power_ = 0L;
        onChanged();
        return this;
      }

      private int isAI_ ;
      /**
       * <code>int32 isAI = 10;</code>
       */
      public int getIsAI() {
        return isAI_;
      }
      /**
       * <code>int32 isAI = 10;</code>
       */
      public Builder setIsAI(int value) {
        
        isAI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAI = 10;</code>
       */
      public Builder clearIsAI() {
        
        isAI_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<protocol.Battle.ExtendProperty> extendProp_ =
        java.util.Collections.emptyList();
      private void ensureExtendPropIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          extendProp_ = new java.util.ArrayList<protocol.Battle.ExtendProperty>(extendProp_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder> extendPropBuilder_;

      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public java.util.List<protocol.Battle.ExtendProperty> getExtendPropList() {
        if (extendPropBuilder_ == null) {
          return java.util.Collections.unmodifiableList(extendProp_);
        } else {
          return extendPropBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public int getExtendPropCount() {
        if (extendPropBuilder_ == null) {
          return extendProp_.size();
        } else {
          return extendPropBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public protocol.Battle.ExtendProperty getExtendProp(int index) {
        if (extendPropBuilder_ == null) {
          return extendProp_.get(index);
        } else {
          return extendPropBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder setExtendProp(
          int index, protocol.Battle.ExtendProperty value) {
        if (extendPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtendPropIsMutable();
          extendProp_.set(index, value);
          onChanged();
        } else {
          extendPropBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder setExtendProp(
          int index, protocol.Battle.ExtendProperty.Builder builderForValue) {
        if (extendPropBuilder_ == null) {
          ensureExtendPropIsMutable();
          extendProp_.set(index, builderForValue.build());
          onChanged();
        } else {
          extendPropBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder addExtendProp(protocol.Battle.ExtendProperty value) {
        if (extendPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtendPropIsMutable();
          extendProp_.add(value);
          onChanged();
        } else {
          extendPropBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder addExtendProp(
          int index, protocol.Battle.ExtendProperty value) {
        if (extendPropBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureExtendPropIsMutable();
          extendProp_.add(index, value);
          onChanged();
        } else {
          extendPropBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder addExtendProp(
          protocol.Battle.ExtendProperty.Builder builderForValue) {
        if (extendPropBuilder_ == null) {
          ensureExtendPropIsMutable();
          extendProp_.add(builderForValue.build());
          onChanged();
        } else {
          extendPropBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder addExtendProp(
          int index, protocol.Battle.ExtendProperty.Builder builderForValue) {
        if (extendPropBuilder_ == null) {
          ensureExtendPropIsMutable();
          extendProp_.add(index, builderForValue.build());
          onChanged();
        } else {
          extendPropBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder addAllExtendProp(
          java.lang.Iterable<? extends protocol.Battle.ExtendProperty> values) {
        if (extendPropBuilder_ == null) {
          ensureExtendPropIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, extendProp_);
          onChanged();
        } else {
          extendPropBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder clearExtendProp() {
        if (extendPropBuilder_ == null) {
          extendProp_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          extendPropBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public Builder removeExtendProp(int index) {
        if (extendPropBuilder_ == null) {
          ensureExtendPropIsMutable();
          extendProp_.remove(index);
          onChanged();
        } else {
          extendPropBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public protocol.Battle.ExtendProperty.Builder getExtendPropBuilder(
          int index) {
        return getExtendPropFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public protocol.Battle.ExtendPropertyOrBuilder getExtendPropOrBuilder(
          int index) {
        if (extendPropBuilder_ == null) {
          return extendProp_.get(index);  } else {
          return extendPropBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public java.util.List<? extends protocol.Battle.ExtendPropertyOrBuilder> 
           getExtendPropOrBuilderList() {
        if (extendPropBuilder_ != null) {
          return extendPropBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(extendProp_);
        }
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public protocol.Battle.ExtendProperty.Builder addExtendPropBuilder() {
        return getExtendPropFieldBuilder().addBuilder(
            protocol.Battle.ExtendProperty.getDefaultInstance());
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public protocol.Battle.ExtendProperty.Builder addExtendPropBuilder(
          int index) {
        return getExtendPropFieldBuilder().addBuilder(
            index, protocol.Battle.ExtendProperty.getDefaultInstance());
      }
      /**
       * <code>repeated .ExtendProperty extendProp = 11;</code>
       */
      public java.util.List<protocol.Battle.ExtendProperty.Builder> 
           getExtendPropBuilderList() {
        return getExtendPropFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder> 
          getExtendPropFieldBuilder() {
        if (extendPropBuilder_ == null) {
          extendPropBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Battle.ExtendProperty, protocol.Battle.ExtendProperty.Builder, protocol.Battle.ExtendPropertyOrBuilder>(
                  extendProp_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          extendProp_ = null;
        }
        return extendPropBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaPlayer)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaPlayer)
    private static final protocol.CrossArenaDB.RedisCrossArenaPlayer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaPlayer();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaPlayer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaPlayer>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaPlayer>() {
      public RedisCrossArenaPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaPlayer(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaPlayer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaPlayer> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaPlayer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaTopPlyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaTopPly)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 1;</code>
     */
    java.lang.String getPlayerId();
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 1;</code>
     */
    com.google.protobuf.ByteString
        getPlayerIdBytes();

    /**
     * <code>string fromSvrIndex = 2;</code>
     */
    java.lang.String getFromSvrIndex();
    /**
     * <code>string fromSvrIndex = 2;</code>
     */
    com.google.protobuf.ByteString
        getFromSvrIndexBytes();

    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    boolean hasTeamInfo();
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    protocol.Battle.BattlePlayerInfo getTeamInfo();
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder();

    /**
     * <code>string group = 4;</code>
     */
    java.lang.String getGroup();
    /**
     * <code>string group = 4;</code>
     */
    com.google.protobuf.ByteString
        getGroupBytes();

    /**
     * <code>int64 jftime = 5;</code>
     */
    long getJftime();

    /**
     * <code>int32 grade = 6;</code>
     */
    int getGrade();

    /**
     * <code>int32 isAI = 7;</code>
     */
    int getIsAI();

    /**
     * <code>repeated string battleIds = 8;</code>
     */
    java.util.List<java.lang.String>
        getBattleIdsList();
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    int getBattleIdsCount();
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    java.lang.String getBattleIds(int index);
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    com.google.protobuf.ByteString
        getBattleIdsBytes(int index);

    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    boolean hasTeamdb();
    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    protocol.PrepareWar.TeamInfo getTeamdb();
    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    protocol.PrepareWar.TeamInfoOrBuilder getTeamdbOrBuilder();

    /**
     * <code>string otheridx = 10;</code>
     */
    java.lang.String getOtheridx();
    /**
     * <code>string otheridx = 10;</code>
     */
    com.google.protobuf.ByteString
        getOtheridxBytes();

    /**
     * <code>int32 sort = 11;</code>
     */
    int getSort();
  }
  /**
   * <pre>
   * 巅峰赛参赛玩家信息
   * </pre>
   *
   * Protobuf type {@code RedisCrossArenaTopPly}
   */
  public  static final class RedisCrossArenaTopPly extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaTopPly)
      RedisCrossArenaTopPlyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaTopPly.newBuilder() to construct.
    private RedisCrossArenaTopPly(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaTopPly() {
      playerId_ = "";
      fromSvrIndex_ = "";
      group_ = "";
      jftime_ = 0L;
      grade_ = 0;
      isAI_ = 0;
      battleIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      otheridx_ = "";
      sort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaTopPly(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              playerId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              fromSvrIndex_ = s;
              break;
            }
            case 26: {
              protocol.Battle.BattlePlayerInfo.Builder subBuilder = null;
              if (teamInfo_ != null) {
                subBuilder = teamInfo_.toBuilder();
              }
              teamInfo_ = input.readMessage(protocol.Battle.BattlePlayerInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teamInfo_);
                teamInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              group_ = s;
              break;
            }
            case 40: {

              jftime_ = input.readInt64();
              break;
            }
            case 48: {

              grade_ = input.readInt32();
              break;
            }
            case 56: {

              isAI_ = input.readInt32();
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                battleIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000080;
              }
              battleIds_.add(s);
              break;
            }
            case 74: {
              protocol.PrepareWar.TeamInfo.Builder subBuilder = null;
              if (teamdb_ != null) {
                subBuilder = teamdb_.toBuilder();
              }
              teamdb_ = input.readMessage(protocol.PrepareWar.TeamInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(teamdb_);
                teamdb_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              otheridx_ = s;
              break;
            }
            case 88: {

              sort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          battleIds_ = battleIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopPly_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopPly_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaTopPly.class, protocol.CrossArenaDB.RedisCrossArenaTopPly.Builder.class);
    }

    private int bitField0_;
    public static final int PLAYERID_FIELD_NUMBER = 1;
    private volatile java.lang.Object playerId_;
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 1;</code>
     */
    public java.lang.String getPlayerId() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        playerId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *玩家ID
     * </pre>
     *
     * <code>string playerId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerIdBytes() {
      java.lang.Object ref = playerId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FROMSVRINDEX_FIELD_NUMBER = 2;
    private volatile java.lang.Object fromSvrIndex_;
    /**
     * <code>string fromSvrIndex = 2;</code>
     */
    public java.lang.String getFromSvrIndex() {
      java.lang.Object ref = fromSvrIndex_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fromSvrIndex_ = s;
        return s;
      }
    }
    /**
     * <code>string fromSvrIndex = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFromSvrIndexBytes() {
      java.lang.Object ref = fromSvrIndex_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fromSvrIndex_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAMINFO_FIELD_NUMBER = 3;
    private protocol.Battle.BattlePlayerInfo teamInfo_;
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    public boolean hasTeamInfo() {
      return teamInfo_ != null;
    }
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    public protocol.Battle.BattlePlayerInfo getTeamInfo() {
      return teamInfo_ == null ? protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
    }
    /**
     * <pre>
     * 玩家队伍信息
     * </pre>
     *
     * <code>.BattlePlayerInfo teamInfo = 3;</code>
     */
    public protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder() {
      return getTeamInfo();
    }

    public static final int GROUP_FIELD_NUMBER = 4;
    private volatile java.lang.Object group_;
    /**
     * <code>string group = 4;</code>
     */
    public java.lang.String getGroup() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        group_ = s;
        return s;
      }
    }
    /**
     * <code>string group = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGroupBytes() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        group_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int JFTIME_FIELD_NUMBER = 5;
    private long jftime_;
    /**
     * <code>int64 jftime = 5;</code>
     */
    public long getJftime() {
      return jftime_;
    }

    public static final int GRADE_FIELD_NUMBER = 6;
    private int grade_;
    /**
     * <code>int32 grade = 6;</code>
     */
    public int getGrade() {
      return grade_;
    }

    public static final int ISAI_FIELD_NUMBER = 7;
    private int isAI_;
    /**
     * <code>int32 isAI = 7;</code>
     */
    public int getIsAI() {
      return isAI_;
    }

    public static final int BATTLEIDS_FIELD_NUMBER = 8;
    private com.google.protobuf.LazyStringList battleIds_;
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getBattleIdsList() {
      return battleIds_;
    }
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    public int getBattleIdsCount() {
      return battleIds_.size();
    }
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    public java.lang.String getBattleIds(int index) {
      return battleIds_.get(index);
    }
    /**
     * <code>repeated string battleIds = 8;</code>
     */
    public com.google.protobuf.ByteString
        getBattleIdsBytes(int index) {
      return battleIds_.getByteString(index);
    }

    public static final int TEAMDB_FIELD_NUMBER = 9;
    private protocol.PrepareWar.TeamInfo teamdb_;
    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    public boolean hasTeamdb() {
      return teamdb_ != null;
    }
    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    public protocol.PrepareWar.TeamInfo getTeamdb() {
      return teamdb_ == null ? protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamdb_;
    }
    /**
     * <code>.TeamInfo teamdb = 9;</code>
     */
    public protocol.PrepareWar.TeamInfoOrBuilder getTeamdbOrBuilder() {
      return getTeamdb();
    }

    public static final int OTHERIDX_FIELD_NUMBER = 10;
    private volatile java.lang.Object otheridx_;
    /**
     * <code>string otheridx = 10;</code>
     */
    public java.lang.String getOtheridx() {
      java.lang.Object ref = otheridx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        otheridx_ = s;
        return s;
      }
    }
    /**
     * <code>string otheridx = 10;</code>
     */
    public com.google.protobuf.ByteString
        getOtheridxBytes() {
      java.lang.Object ref = otheridx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        otheridx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SORT_FIELD_NUMBER = 11;
    private int sort_;
    /**
     * <code>int32 sort = 11;</code>
     */
    public int getSort() {
      return sort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPlayerIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, playerId_);
      }
      if (!getFromSvrIndexBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fromSvrIndex_);
      }
      if (teamInfo_ != null) {
        output.writeMessage(3, getTeamInfo());
      }
      if (!getGroupBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, group_);
      }
      if (jftime_ != 0L) {
        output.writeInt64(5, jftime_);
      }
      if (grade_ != 0) {
        output.writeInt32(6, grade_);
      }
      if (isAI_ != 0) {
        output.writeInt32(7, isAI_);
      }
      for (int i = 0; i < battleIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, battleIds_.getRaw(i));
      }
      if (teamdb_ != null) {
        output.writeMessage(9, getTeamdb());
      }
      if (!getOtheridxBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, otheridx_);
      }
      if (sort_ != 0) {
        output.writeInt32(11, sort_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPlayerIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, playerId_);
      }
      if (!getFromSvrIndexBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fromSvrIndex_);
      }
      if (teamInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getTeamInfo());
      }
      if (!getGroupBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, group_);
      }
      if (jftime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, jftime_);
      }
      if (grade_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, grade_);
      }
      if (isAI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, isAI_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < battleIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(battleIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getBattleIdsList().size();
      }
      if (teamdb_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getTeamdb());
      }
      if (!getOtheridxBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, otheridx_);
      }
      if (sort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, sort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaTopPly)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaTopPly other = (protocol.CrossArenaDB.RedisCrossArenaTopPly) obj;

      boolean result = true;
      result = result && getPlayerId()
          .equals(other.getPlayerId());
      result = result && getFromSvrIndex()
          .equals(other.getFromSvrIndex());
      result = result && (hasTeamInfo() == other.hasTeamInfo());
      if (hasTeamInfo()) {
        result = result && getTeamInfo()
            .equals(other.getTeamInfo());
      }
      result = result && getGroup()
          .equals(other.getGroup());
      result = result && (getJftime()
          == other.getJftime());
      result = result && (getGrade()
          == other.getGrade());
      result = result && (getIsAI()
          == other.getIsAI());
      result = result && getBattleIdsList()
          .equals(other.getBattleIdsList());
      result = result && (hasTeamdb() == other.hasTeamdb());
      if (hasTeamdb()) {
        result = result && getTeamdb()
            .equals(other.getTeamdb());
      }
      result = result && getOtheridx()
          .equals(other.getOtheridx());
      result = result && (getSort()
          == other.getSort());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAYERID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayerId().hashCode();
      hash = (37 * hash) + FROMSVRINDEX_FIELD_NUMBER;
      hash = (53 * hash) + getFromSvrIndex().hashCode();
      if (hasTeamInfo()) {
        hash = (37 * hash) + TEAMINFO_FIELD_NUMBER;
        hash = (53 * hash) + getTeamInfo().hashCode();
      }
      hash = (37 * hash) + GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getGroup().hashCode();
      hash = (37 * hash) + JFTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getJftime());
      hash = (37 * hash) + GRADE_FIELD_NUMBER;
      hash = (53 * hash) + getGrade();
      hash = (37 * hash) + ISAI_FIELD_NUMBER;
      hash = (53 * hash) + getIsAI();
      if (getBattleIdsCount() > 0) {
        hash = (37 * hash) + BATTLEIDS_FIELD_NUMBER;
        hash = (53 * hash) + getBattleIdsList().hashCode();
      }
      if (hasTeamdb()) {
        hash = (37 * hash) + TEAMDB_FIELD_NUMBER;
        hash = (53 * hash) + getTeamdb().hashCode();
      }
      hash = (37 * hash) + OTHERIDX_FIELD_NUMBER;
      hash = (53 * hash) + getOtheridx().hashCode();
      hash = (37 * hash) + SORT_FIELD_NUMBER;
      hash = (53 * hash) + getSort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopPly parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaTopPly prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 巅峰赛参赛玩家信息
     * </pre>
     *
     * Protobuf type {@code RedisCrossArenaTopPly}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaTopPly)
        protocol.CrossArenaDB.RedisCrossArenaTopPlyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopPly_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopPly_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaTopPly.class, protocol.CrossArenaDB.RedisCrossArenaTopPly.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaTopPly.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        playerId_ = "";

        fromSvrIndex_ = "";

        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }
        group_ = "";

        jftime_ = 0L;

        grade_ = 0;

        isAI_ = 0;

        battleIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (teamdbBuilder_ == null) {
          teamdb_ = null;
        } else {
          teamdb_ = null;
          teamdbBuilder_ = null;
        }
        otheridx_ = "";

        sort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopPly_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopPly getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaTopPly.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopPly build() {
        protocol.CrossArenaDB.RedisCrossArenaTopPly result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopPly buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaTopPly result = new protocol.CrossArenaDB.RedisCrossArenaTopPly(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.playerId_ = playerId_;
        result.fromSvrIndex_ = fromSvrIndex_;
        if (teamInfoBuilder_ == null) {
          result.teamInfo_ = teamInfo_;
        } else {
          result.teamInfo_ = teamInfoBuilder_.build();
        }
        result.group_ = group_;
        result.jftime_ = jftime_;
        result.grade_ = grade_;
        result.isAI_ = isAI_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          battleIds_ = battleIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.battleIds_ = battleIds_;
        if (teamdbBuilder_ == null) {
          result.teamdb_ = teamdb_;
        } else {
          result.teamdb_ = teamdbBuilder_.build();
        }
        result.otheridx_ = otheridx_;
        result.sort_ = sort_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaTopPly) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaTopPly)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaTopPly other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaTopPly.getDefaultInstance()) return this;
        if (!other.getPlayerId().isEmpty()) {
          playerId_ = other.playerId_;
          onChanged();
        }
        if (!other.getFromSvrIndex().isEmpty()) {
          fromSvrIndex_ = other.fromSvrIndex_;
          onChanged();
        }
        if (other.hasTeamInfo()) {
          mergeTeamInfo(other.getTeamInfo());
        }
        if (!other.getGroup().isEmpty()) {
          group_ = other.group_;
          onChanged();
        }
        if (other.getJftime() != 0L) {
          setJftime(other.getJftime());
        }
        if (other.getGrade() != 0) {
          setGrade(other.getGrade());
        }
        if (other.getIsAI() != 0) {
          setIsAI(other.getIsAI());
        }
        if (!other.battleIds_.isEmpty()) {
          if (battleIds_.isEmpty()) {
            battleIds_ = other.battleIds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureBattleIdsIsMutable();
            battleIds_.addAll(other.battleIds_);
          }
          onChanged();
        }
        if (other.hasTeamdb()) {
          mergeTeamdb(other.getTeamdb());
        }
        if (!other.getOtheridx().isEmpty()) {
          otheridx_ = other.otheridx_;
          onChanged();
        }
        if (other.getSort() != 0) {
          setSort(other.getSort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaTopPly parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaTopPly) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object playerId_ = "";
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 1;</code>
       */
      public java.lang.String getPlayerId() {
        java.lang.Object ref = playerId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          playerId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerIdBytes() {
        java.lang.Object ref = playerId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 1;</code>
       */
      public Builder setPlayerId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        playerId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 1;</code>
       */
      public Builder clearPlayerId() {
        
        playerId_ = getDefaultInstance().getPlayerId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *玩家ID
       * </pre>
       *
       * <code>string playerId = 1;</code>
       */
      public Builder setPlayerIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        playerId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fromSvrIndex_ = "";
      /**
       * <code>string fromSvrIndex = 2;</code>
       */
      public java.lang.String getFromSvrIndex() {
        java.lang.Object ref = fromSvrIndex_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fromSvrIndex_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fromSvrIndex = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFromSvrIndexBytes() {
        java.lang.Object ref = fromSvrIndex_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fromSvrIndex_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fromSvrIndex = 2;</code>
       */
      public Builder setFromSvrIndex(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fromSvrIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fromSvrIndex = 2;</code>
       */
      public Builder clearFromSvrIndex() {
        
        fromSvrIndex_ = getDefaultInstance().getFromSvrIndex();
        onChanged();
        return this;
      }
      /**
       * <code>string fromSvrIndex = 2;</code>
       */
      public Builder setFromSvrIndexBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fromSvrIndex_ = value;
        onChanged();
        return this;
      }

      private protocol.Battle.BattlePlayerInfo teamInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder> teamInfoBuilder_;
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public boolean hasTeamInfo() {
        return teamInfoBuilder_ != null || teamInfo_ != null;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public protocol.Battle.BattlePlayerInfo getTeamInfo() {
        if (teamInfoBuilder_ == null) {
          return teamInfo_ == null ? protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
        } else {
          return teamInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public Builder setTeamInfo(protocol.Battle.BattlePlayerInfo value) {
        if (teamInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teamInfo_ = value;
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public Builder setTeamInfo(
          protocol.Battle.BattlePlayerInfo.Builder builderForValue) {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = builderForValue.build();
          onChanged();
        } else {
          teamInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public Builder mergeTeamInfo(protocol.Battle.BattlePlayerInfo value) {
        if (teamInfoBuilder_ == null) {
          if (teamInfo_ != null) {
            teamInfo_ =
              protocol.Battle.BattlePlayerInfo.newBuilder(teamInfo_).mergeFrom(value).buildPartial();
          } else {
            teamInfo_ = value;
          }
          onChanged();
        } else {
          teamInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public Builder clearTeamInfo() {
        if (teamInfoBuilder_ == null) {
          teamInfo_ = null;
          onChanged();
        } else {
          teamInfo_ = null;
          teamInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public protocol.Battle.BattlePlayerInfo.Builder getTeamInfoBuilder() {
        
        onChanged();
        return getTeamInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      public protocol.Battle.BattlePlayerInfoOrBuilder getTeamInfoOrBuilder() {
        if (teamInfoBuilder_ != null) {
          return teamInfoBuilder_.getMessageOrBuilder();
        } else {
          return teamInfo_ == null ?
              protocol.Battle.BattlePlayerInfo.getDefaultInstance() : teamInfo_;
        }
      }
      /**
       * <pre>
       * 玩家队伍信息
       * </pre>
       *
       * <code>.BattlePlayerInfo teamInfo = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder> 
          getTeamInfoFieldBuilder() {
        if (teamInfoBuilder_ == null) {
          teamInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.Battle.BattlePlayerInfo, protocol.Battle.BattlePlayerInfo.Builder, protocol.Battle.BattlePlayerInfoOrBuilder>(
                  getTeamInfo(),
                  getParentForChildren(),
                  isClean());
          teamInfo_ = null;
        }
        return teamInfoBuilder_;
      }

      private java.lang.Object group_ = "";
      /**
       * <code>string group = 4;</code>
       */
      public java.lang.String getGroup() {
        java.lang.Object ref = group_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          group_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string group = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGroupBytes() {
        java.lang.Object ref = group_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          group_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string group = 4;</code>
       */
      public Builder setGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string group = 4;</code>
       */
      public Builder clearGroup() {
        
        group_ = getDefaultInstance().getGroup();
        onChanged();
        return this;
      }
      /**
       * <code>string group = 4;</code>
       */
      public Builder setGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        group_ = value;
        onChanged();
        return this;
      }

      private long jftime_ ;
      /**
       * <code>int64 jftime = 5;</code>
       */
      public long getJftime() {
        return jftime_;
      }
      /**
       * <code>int64 jftime = 5;</code>
       */
      public Builder setJftime(long value) {
        
        jftime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 jftime = 5;</code>
       */
      public Builder clearJftime() {
        
        jftime_ = 0L;
        onChanged();
        return this;
      }

      private int grade_ ;
      /**
       * <code>int32 grade = 6;</code>
       */
      public int getGrade() {
        return grade_;
      }
      /**
       * <code>int32 grade = 6;</code>
       */
      public Builder setGrade(int value) {
        
        grade_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 grade = 6;</code>
       */
      public Builder clearGrade() {
        
        grade_ = 0;
        onChanged();
        return this;
      }

      private int isAI_ ;
      /**
       * <code>int32 isAI = 7;</code>
       */
      public int getIsAI() {
        return isAI_;
      }
      /**
       * <code>int32 isAI = 7;</code>
       */
      public Builder setIsAI(int value) {
        
        isAI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAI = 7;</code>
       */
      public Builder clearIsAI() {
        
        isAI_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList battleIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureBattleIdsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          battleIds_ = new com.google.protobuf.LazyStringArrayList(battleIds_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getBattleIdsList() {
        return battleIds_.getUnmodifiableView();
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public int getBattleIdsCount() {
        return battleIds_.size();
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public java.lang.String getBattleIds(int index) {
        return battleIds_.get(index);
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public com.google.protobuf.ByteString
          getBattleIdsBytes(int index) {
        return battleIds_.getByteString(index);
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public Builder setBattleIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBattleIdsIsMutable();
        battleIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public Builder addBattleIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureBattleIdsIsMutable();
        battleIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public Builder addAllBattleIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureBattleIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, battleIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public Builder clearBattleIds() {
        battleIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string battleIds = 8;</code>
       */
      public Builder addBattleIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureBattleIdsIsMutable();
        battleIds_.add(value);
        onChanged();
        return this;
      }

      private protocol.PrepareWar.TeamInfo teamdb_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder> teamdbBuilder_;
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public boolean hasTeamdb() {
        return teamdbBuilder_ != null || teamdb_ != null;
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public protocol.PrepareWar.TeamInfo getTeamdb() {
        if (teamdbBuilder_ == null) {
          return teamdb_ == null ? protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamdb_;
        } else {
          return teamdbBuilder_.getMessage();
        }
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public Builder setTeamdb(protocol.PrepareWar.TeamInfo value) {
        if (teamdbBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          teamdb_ = value;
          onChanged();
        } else {
          teamdbBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public Builder setTeamdb(
          protocol.PrepareWar.TeamInfo.Builder builderForValue) {
        if (teamdbBuilder_ == null) {
          teamdb_ = builderForValue.build();
          onChanged();
        } else {
          teamdbBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public Builder mergeTeamdb(protocol.PrepareWar.TeamInfo value) {
        if (teamdbBuilder_ == null) {
          if (teamdb_ != null) {
            teamdb_ =
              protocol.PrepareWar.TeamInfo.newBuilder(teamdb_).mergeFrom(value).buildPartial();
          } else {
            teamdb_ = value;
          }
          onChanged();
        } else {
          teamdbBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public Builder clearTeamdb() {
        if (teamdbBuilder_ == null) {
          teamdb_ = null;
          onChanged();
        } else {
          teamdb_ = null;
          teamdbBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public protocol.PrepareWar.TeamInfo.Builder getTeamdbBuilder() {
        
        onChanged();
        return getTeamdbFieldBuilder().getBuilder();
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      public protocol.PrepareWar.TeamInfoOrBuilder getTeamdbOrBuilder() {
        if (teamdbBuilder_ != null) {
          return teamdbBuilder_.getMessageOrBuilder();
        } else {
          return teamdb_ == null ?
              protocol.PrepareWar.TeamInfo.getDefaultInstance() : teamdb_;
        }
      }
      /**
       * <code>.TeamInfo teamdb = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder> 
          getTeamdbFieldBuilder() {
        if (teamdbBuilder_ == null) {
          teamdbBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              protocol.PrepareWar.TeamInfo, protocol.PrepareWar.TeamInfo.Builder, protocol.PrepareWar.TeamInfoOrBuilder>(
                  getTeamdb(),
                  getParentForChildren(),
                  isClean());
          teamdb_ = null;
        }
        return teamdbBuilder_;
      }

      private java.lang.Object otheridx_ = "";
      /**
       * <code>string otheridx = 10;</code>
       */
      public java.lang.String getOtheridx() {
        java.lang.Object ref = otheridx_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          otheridx_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string otheridx = 10;</code>
       */
      public com.google.protobuf.ByteString
          getOtheridxBytes() {
        java.lang.Object ref = otheridx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          otheridx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string otheridx = 10;</code>
       */
      public Builder setOtheridx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        otheridx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string otheridx = 10;</code>
       */
      public Builder clearOtheridx() {
        
        otheridx_ = getDefaultInstance().getOtheridx();
        onChanged();
        return this;
      }
      /**
       * <code>string otheridx = 10;</code>
       */
      public Builder setOtheridxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        otheridx_ = value;
        onChanged();
        return this;
      }

      private int sort_ ;
      /**
       * <code>int32 sort = 11;</code>
       */
      public int getSort() {
        return sort_;
      }
      /**
       * <code>int32 sort = 11;</code>
       */
      public Builder setSort(int value) {
        
        sort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 sort = 11;</code>
       */
      public Builder clearSort() {
        
        sort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaTopPly)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaTopPly)
    private static final protocol.CrossArenaDB.RedisCrossArenaTopPly DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaTopPly();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTopPly getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaTopPly>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaTopPly>() {
      public RedisCrossArenaTopPly parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaTopPly(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaTopPly> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaTopPly> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaTopPly getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaTopBatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaTopBat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string py1 = 1;</code>
     */
    java.lang.String getPy1();
    /**
     * <code>string py1 = 1;</code>
     */
    com.google.protobuf.ByteString
        getPy1Bytes();

    /**
     * <code>string py2 = 2;</code>
     */
    java.lang.String getPy2();
    /**
     * <code>string py2 = 2;</code>
     */
    com.google.protobuf.ByteString
        getPy2Bytes();

    /**
     * <code>int64 roomid = 3;</code>
     */
    long getRoomid();

    /**
     * <code>int64 endTime = 4;</code>
     */
    long getEndTime();

    /**
     * <pre>
     * 胜利方
     * </pre>
     *
     * <code>int32 campWin = 5;</code>
     */
    int getCampWin();

    /**
     * <code>int32 isAI = 6;</code>
     */
    int getIsAI();
  }
  /**
   * Protobuf type {@code RedisCrossArenaTopBat}
   */
  public  static final class RedisCrossArenaTopBat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaTopBat)
      RedisCrossArenaTopBatOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaTopBat.newBuilder() to construct.
    private RedisCrossArenaTopBat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaTopBat() {
      py1_ = "";
      py2_ = "";
      roomid_ = 0L;
      endTime_ = 0L;
      campWin_ = 0;
      isAI_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaTopBat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              py1_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              py2_ = s;
              break;
            }
            case 24: {

              roomid_ = input.readInt64();
              break;
            }
            case 32: {

              endTime_ = input.readInt64();
              break;
            }
            case 40: {

              campWin_ = input.readInt32();
              break;
            }
            case 48: {

              isAI_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopBat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopBat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaTopBat.class, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder.class);
    }

    public static final int PY1_FIELD_NUMBER = 1;
    private volatile java.lang.Object py1_;
    /**
     * <code>string py1 = 1;</code>
     */
    public java.lang.String getPy1() {
      java.lang.Object ref = py1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        py1_ = s;
        return s;
      }
    }
    /**
     * <code>string py1 = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPy1Bytes() {
      java.lang.Object ref = py1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        py1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PY2_FIELD_NUMBER = 2;
    private volatile java.lang.Object py2_;
    /**
     * <code>string py2 = 2;</code>
     */
    public java.lang.String getPy2() {
      java.lang.Object ref = py2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        py2_ = s;
        return s;
      }
    }
    /**
     * <code>string py2 = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPy2Bytes() {
      java.lang.Object ref = py2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        py2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROOMID_FIELD_NUMBER = 3;
    private long roomid_;
    /**
     * <code>int64 roomid = 3;</code>
     */
    public long getRoomid() {
      return roomid_;
    }

    public static final int ENDTIME_FIELD_NUMBER = 4;
    private long endTime_;
    /**
     * <code>int64 endTime = 4;</code>
     */
    public long getEndTime() {
      return endTime_;
    }

    public static final int CAMPWIN_FIELD_NUMBER = 5;
    private int campWin_;
    /**
     * <pre>
     * 胜利方
     * </pre>
     *
     * <code>int32 campWin = 5;</code>
     */
    public int getCampWin() {
      return campWin_;
    }

    public static final int ISAI_FIELD_NUMBER = 6;
    private int isAI_;
    /**
     * <code>int32 isAI = 6;</code>
     */
    public int getIsAI() {
      return isAI_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getPy1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, py1_);
      }
      if (!getPy2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, py2_);
      }
      if (roomid_ != 0L) {
        output.writeInt64(3, roomid_);
      }
      if (endTime_ != 0L) {
        output.writeInt64(4, endTime_);
      }
      if (campWin_ != 0) {
        output.writeInt32(5, campWin_);
      }
      if (isAI_ != 0) {
        output.writeInt32(6, isAI_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getPy1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, py1_);
      }
      if (!getPy2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, py2_);
      }
      if (roomid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, roomid_);
      }
      if (endTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, endTime_);
      }
      if (campWin_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, campWin_);
      }
      if (isAI_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, isAI_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaTopBat)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaTopBat other = (protocol.CrossArenaDB.RedisCrossArenaTopBat) obj;

      boolean result = true;
      result = result && getPy1()
          .equals(other.getPy1());
      result = result && getPy2()
          .equals(other.getPy2());
      result = result && (getRoomid()
          == other.getRoomid());
      result = result && (getEndTime()
          == other.getEndTime());
      result = result && (getCampWin()
          == other.getCampWin());
      result = result && (getIsAI()
          == other.getIsAI());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PY1_FIELD_NUMBER;
      hash = (53 * hash) + getPy1().hashCode();
      hash = (37 * hash) + PY2_FIELD_NUMBER;
      hash = (53 * hash) + getPy2().hashCode();
      hash = (37 * hash) + ROOMID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRoomid());
      hash = (37 * hash) + ENDTIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTime());
      hash = (37 * hash) + CAMPWIN_FIELD_NUMBER;
      hash = (53 * hash) + getCampWin();
      hash = (37 * hash) + ISAI_FIELD_NUMBER;
      hash = (53 * hash) + getIsAI();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaTopBat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaTopBat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedisCrossArenaTopBat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaTopBat)
        protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopBat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopBat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaTopBat.class, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaTopBat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        py1_ = "";

        py2_ = "";

        roomid_ = 0L;

        endTime_ = 0L;

        campWin_ = 0;

        isAI_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaTopBat_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopBat getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaTopBat.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopBat build() {
        protocol.CrossArenaDB.RedisCrossArenaTopBat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaTopBat buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaTopBat result = new protocol.CrossArenaDB.RedisCrossArenaTopBat(this);
        result.py1_ = py1_;
        result.py2_ = py2_;
        result.roomid_ = roomid_;
        result.endTime_ = endTime_;
        result.campWin_ = campWin_;
        result.isAI_ = isAI_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaTopBat) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaTopBat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaTopBat other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaTopBat.getDefaultInstance()) return this;
        if (!other.getPy1().isEmpty()) {
          py1_ = other.py1_;
          onChanged();
        }
        if (!other.getPy2().isEmpty()) {
          py2_ = other.py2_;
          onChanged();
        }
        if (other.getRoomid() != 0L) {
          setRoomid(other.getRoomid());
        }
        if (other.getEndTime() != 0L) {
          setEndTime(other.getEndTime());
        }
        if (other.getCampWin() != 0) {
          setCampWin(other.getCampWin());
        }
        if (other.getIsAI() != 0) {
          setIsAI(other.getIsAI());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaTopBat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaTopBat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object py1_ = "";
      /**
       * <code>string py1 = 1;</code>
       */
      public java.lang.String getPy1() {
        java.lang.Object ref = py1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          py1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string py1 = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPy1Bytes() {
        java.lang.Object ref = py1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          py1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string py1 = 1;</code>
       */
      public Builder setPy1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        py1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string py1 = 1;</code>
       */
      public Builder clearPy1() {
        
        py1_ = getDefaultInstance().getPy1();
        onChanged();
        return this;
      }
      /**
       * <code>string py1 = 1;</code>
       */
      public Builder setPy1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        py1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object py2_ = "";
      /**
       * <code>string py2 = 2;</code>
       */
      public java.lang.String getPy2() {
        java.lang.Object ref = py2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          py2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string py2 = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPy2Bytes() {
        java.lang.Object ref = py2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          py2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string py2 = 2;</code>
       */
      public Builder setPy2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        py2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string py2 = 2;</code>
       */
      public Builder clearPy2() {
        
        py2_ = getDefaultInstance().getPy2();
        onChanged();
        return this;
      }
      /**
       * <code>string py2 = 2;</code>
       */
      public Builder setPy2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        py2_ = value;
        onChanged();
        return this;
      }

      private long roomid_ ;
      /**
       * <code>int64 roomid = 3;</code>
       */
      public long getRoomid() {
        return roomid_;
      }
      /**
       * <code>int64 roomid = 3;</code>
       */
      public Builder setRoomid(long value) {
        
        roomid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 roomid = 3;</code>
       */
      public Builder clearRoomid() {
        
        roomid_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <code>int64 endTime = 4;</code>
       */
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <code>int64 endTime = 4;</code>
       */
      public Builder setEndTime(long value) {
        
        endTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 endTime = 4;</code>
       */
      public Builder clearEndTime() {
        
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private int campWin_ ;
      /**
       * <pre>
       * 胜利方
       * </pre>
       *
       * <code>int32 campWin = 5;</code>
       */
      public int getCampWin() {
        return campWin_;
      }
      /**
       * <pre>
       * 胜利方
       * </pre>
       *
       * <code>int32 campWin = 5;</code>
       */
      public Builder setCampWin(int value) {
        
        campWin_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 胜利方
       * </pre>
       *
       * <code>int32 campWin = 5;</code>
       */
      public Builder clearCampWin() {
        
        campWin_ = 0;
        onChanged();
        return this;
      }

      private int isAI_ ;
      /**
       * <code>int32 isAI = 6;</code>
       */
      public int getIsAI() {
        return isAI_;
      }
      /**
       * <code>int32 isAI = 6;</code>
       */
      public Builder setIsAI(int value) {
        
        isAI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 isAI = 6;</code>
       */
      public Builder clearIsAI() {
        
        isAI_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaTopBat)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaTopBat)
    private static final protocol.CrossArenaDB.RedisCrossArenaTopBat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaTopBat();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaTopBat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaTopBat>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaTopBat>() {
      public RedisCrossArenaTopBat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaTopBat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaTopBat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaTopBat> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaTopBat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RedisCrossArenaGropOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RedisCrossArenaGrop)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string group = 1;</code>
     */
    java.lang.String getGroup();
    /**
     * <code>string group = 1;</code>
     */
    com.google.protobuf.ByteString
        getGroupBytes();

    /**
     * <code>repeated string players = 2;</code>
     */
    java.util.List<java.lang.String>
        getPlayersList();
    /**
     * <code>repeated string players = 2;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated string players = 2;</code>
     */
    java.lang.String getPlayers(int index);
    /**
     * <code>repeated string players = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayersBytes(int index);

    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    java.util.List<java.lang.String>
        getIdleQueList();
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    int getIdleQueCount();
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    java.lang.String getIdleQue(int index);
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    com.google.protobuf.ByteString
        getIdleQueBytes(int index);

    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat> 
        getBatingList();
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaTopBat getBating(int index);
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    int getBatingCount();
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder> 
        getBatingOrBuilderList();
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder getBatingOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code RedisCrossArenaGrop}
   */
  public  static final class RedisCrossArenaGrop extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RedisCrossArenaGrop)
      RedisCrossArenaGropOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RedisCrossArenaGrop.newBuilder() to construct.
    private RedisCrossArenaGrop(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RedisCrossArenaGrop() {
      group_ = "";
      players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      idleQue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bating_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RedisCrossArenaGrop(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              group_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                players_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              players_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                idleQue_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              idleQue_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                bating_ = new java.util.ArrayList<protocol.CrossArenaDB.RedisCrossArenaTopBat>();
                mutable_bitField0_ |= 0x00000008;
              }
              bating_.add(
                  input.readMessage(protocol.CrossArenaDB.RedisCrossArenaTopBat.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = players_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          idleQue_ = idleQue_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          bating_ = java.util.Collections.unmodifiableList(bating_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaGrop_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.CrossArenaDB.internal_static_RedisCrossArenaGrop_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.CrossArenaDB.RedisCrossArenaGrop.class, protocol.CrossArenaDB.RedisCrossArenaGrop.Builder.class);
    }

    private int bitField0_;
    public static final int GROUP_FIELD_NUMBER = 1;
    private volatile java.lang.Object group_;
    /**
     * <code>string group = 1;</code>
     */
    public java.lang.String getGroup() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        group_ = s;
        return s;
      }
    }
    /**
     * <code>string group = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGroupBytes() {
      java.lang.Object ref = group_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        group_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList players_;
    /**
     * <code>repeated string players = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated string players = 2;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated string players = 2;</code>
     */
    public java.lang.String getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated string players = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayersBytes(int index) {
      return players_.getByteString(index);
    }

    public static final int IDLEQUE_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList idleQue_;
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getIdleQueList() {
      return idleQue_;
    }
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    public int getIdleQueCount() {
      return idleQue_.size();
    }
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    public java.lang.String getIdleQue(int index) {
      return idleQue_.get(index);
    }
    /**
     * <pre>
     * 空闲队列
     * </pre>
     *
     * <code>repeated string idleQue = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIdleQueBytes(int index) {
      return idleQue_.getByteString(index);
    }

    public static final int BATING_FIELD_NUMBER = 4;
    private java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat> bating_;
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    public java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat> getBatingList() {
      return bating_;
    }
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    public java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder> 
        getBatingOrBuilderList() {
      return bating_;
    }
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    public int getBatingCount() {
      return bating_.size();
    }
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaTopBat getBating(int index) {
      return bating_.get(index);
    }
    /**
     * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
     */
    public protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder getBatingOrBuilder(
        int index) {
      return bating_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getGroupBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, group_);
      }
      for (int i = 0; i < players_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, players_.getRaw(i));
      }
      for (int i = 0; i < idleQue_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, idleQue_.getRaw(i));
      }
      for (int i = 0; i < bating_.size(); i++) {
        output.writeMessage(4, bating_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getGroupBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, group_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < players_.size(); i++) {
          dataSize += computeStringSizeNoTag(players_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPlayersList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < idleQue_.size(); i++) {
          dataSize += computeStringSizeNoTag(idleQue_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getIdleQueList().size();
      }
      for (int i = 0; i < bating_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, bating_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.CrossArenaDB.RedisCrossArenaGrop)) {
        return super.equals(obj);
      }
      protocol.CrossArenaDB.RedisCrossArenaGrop other = (protocol.CrossArenaDB.RedisCrossArenaGrop) obj;

      boolean result = true;
      result = result && getGroup()
          .equals(other.getGroup());
      result = result && getPlayersList()
          .equals(other.getPlayersList());
      result = result && getIdleQueList()
          .equals(other.getIdleQueList());
      result = result && getBatingList()
          .equals(other.getBatingList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GROUP_FIELD_NUMBER;
      hash = (53 * hash) + getGroup().hashCode();
      if (getPlayersCount() > 0) {
        hash = (37 * hash) + PLAYERS_FIELD_NUMBER;
        hash = (53 * hash) + getPlayersList().hashCode();
      }
      if (getIdleQueCount() > 0) {
        hash = (37 * hash) + IDLEQUE_FIELD_NUMBER;
        hash = (53 * hash) + getIdleQueList().hashCode();
      }
      if (getBatingCount() > 0) {
        hash = (37 * hash) + BATING_FIELD_NUMBER;
        hash = (53 * hash) + getBatingList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.CrossArenaDB.RedisCrossArenaGrop parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.CrossArenaDB.RedisCrossArenaGrop prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RedisCrossArenaGrop}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RedisCrossArenaGrop)
        protocol.CrossArenaDB.RedisCrossArenaGropOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGrop_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGrop_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.CrossArenaDB.RedisCrossArenaGrop.class, protocol.CrossArenaDB.RedisCrossArenaGrop.Builder.class);
      }

      // Construct using protocol.CrossArenaDB.RedisCrossArenaGrop.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getBatingFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        group_ = "";

        players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        idleQue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (batingBuilder_ == null) {
          bating_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          batingBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.CrossArenaDB.internal_static_RedisCrossArenaGrop_descriptor;
      }

      public protocol.CrossArenaDB.RedisCrossArenaGrop getDefaultInstanceForType() {
        return protocol.CrossArenaDB.RedisCrossArenaGrop.getDefaultInstance();
      }

      public protocol.CrossArenaDB.RedisCrossArenaGrop build() {
        protocol.CrossArenaDB.RedisCrossArenaGrop result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.CrossArenaDB.RedisCrossArenaGrop buildPartial() {
        protocol.CrossArenaDB.RedisCrossArenaGrop result = new protocol.CrossArenaDB.RedisCrossArenaGrop(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.group_ = group_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = players_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.players_ = players_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          idleQue_ = idleQue_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.idleQue_ = idleQue_;
        if (batingBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            bating_ = java.util.Collections.unmodifiableList(bating_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.bating_ = bating_;
        } else {
          result.bating_ = batingBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.CrossArenaDB.RedisCrossArenaGrop) {
          return mergeFrom((protocol.CrossArenaDB.RedisCrossArenaGrop)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.CrossArenaDB.RedisCrossArenaGrop other) {
        if (other == protocol.CrossArenaDB.RedisCrossArenaGrop.getDefaultInstance()) return this;
        if (!other.getGroup().isEmpty()) {
          group_ = other.group_;
          onChanged();
        }
        if (!other.players_.isEmpty()) {
          if (players_.isEmpty()) {
            players_ = other.players_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePlayersIsMutable();
            players_.addAll(other.players_);
          }
          onChanged();
        }
        if (!other.idleQue_.isEmpty()) {
          if (idleQue_.isEmpty()) {
            idleQue_ = other.idleQue_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureIdleQueIsMutable();
            idleQue_.addAll(other.idleQue_);
          }
          onChanged();
        }
        if (batingBuilder_ == null) {
          if (!other.bating_.isEmpty()) {
            if (bating_.isEmpty()) {
              bating_ = other.bating_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureBatingIsMutable();
              bating_.addAll(other.bating_);
            }
            onChanged();
          }
        } else {
          if (!other.bating_.isEmpty()) {
            if (batingBuilder_.isEmpty()) {
              batingBuilder_.dispose();
              batingBuilder_ = null;
              bating_ = other.bating_;
              bitField0_ = (bitField0_ & ~0x00000008);
              batingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBatingFieldBuilder() : null;
            } else {
              batingBuilder_.addAllMessages(other.bating_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.CrossArenaDB.RedisCrossArenaGrop parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.CrossArenaDB.RedisCrossArenaGrop) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object group_ = "";
      /**
       * <code>string group = 1;</code>
       */
      public java.lang.String getGroup() {
        java.lang.Object ref = group_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          group_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string group = 1;</code>
       */
      public com.google.protobuf.ByteString
          getGroupBytes() {
        java.lang.Object ref = group_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          group_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string group = 1;</code>
       */
      public Builder setGroup(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string group = 1;</code>
       */
      public Builder clearGroup() {
        
        group_ = getDefaultInstance().getGroup();
        onChanged();
        return this;
      }
      /**
       * <code>string group = 1;</code>
       */
      public Builder setGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        group_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          players_ = new com.google.protobuf.LazyStringArrayList(players_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPlayersList() {
        return players_.getUnmodifiableView();
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public int getPlayersCount() {
        return players_.size();
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public java.lang.String getPlayers(int index) {
        return players_.get(index);
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayersBytes(int index) {
        return players_.getByteString(index);
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public Builder setPlayers(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayersIsMutable();
        players_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public Builder addPlayers(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<java.lang.String> values) {
        ensurePlayersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, players_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public Builder clearPlayers() {
        players_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string players = 2;</code>
       */
      public Builder addPlayersBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensurePlayersIsMutable();
        players_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList idleQue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureIdleQueIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          idleQue_ = new com.google.protobuf.LazyStringArrayList(idleQue_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getIdleQueList() {
        return idleQue_.getUnmodifiableView();
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public int getIdleQueCount() {
        return idleQue_.size();
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public java.lang.String getIdleQue(int index) {
        return idleQue_.get(index);
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public com.google.protobuf.ByteString
          getIdleQueBytes(int index) {
        return idleQue_.getByteString(index);
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public Builder setIdleQue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdleQueIsMutable();
        idleQue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public Builder addIdleQue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureIdleQueIsMutable();
        idleQue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public Builder addAllIdleQue(
          java.lang.Iterable<java.lang.String> values) {
        ensureIdleQueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, idleQue_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public Builder clearIdleQue() {
        idleQue_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 空闲队列
       * </pre>
       *
       * <code>repeated string idleQue = 3;</code>
       */
      public Builder addIdleQueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureIdleQueIsMutable();
        idleQue_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat> bating_ =
        java.util.Collections.emptyList();
      private void ensureBatingIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          bating_ = new java.util.ArrayList<protocol.CrossArenaDB.RedisCrossArenaTopBat>(bating_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaTopBat, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder, protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder> batingBuilder_;

      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat> getBatingList() {
        if (batingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bating_);
        } else {
          return batingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public int getBatingCount() {
        if (batingBuilder_ == null) {
          return bating_.size();
        } else {
          return batingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaTopBat getBating(int index) {
        if (batingBuilder_ == null) {
          return bating_.get(index);
        } else {
          return batingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder setBating(
          int index, protocol.CrossArenaDB.RedisCrossArenaTopBat value) {
        if (batingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatingIsMutable();
          bating_.set(index, value);
          onChanged();
        } else {
          batingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder setBating(
          int index, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder builderForValue) {
        if (batingBuilder_ == null) {
          ensureBatingIsMutable();
          bating_.set(index, builderForValue.build());
          onChanged();
        } else {
          batingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder addBating(protocol.CrossArenaDB.RedisCrossArenaTopBat value) {
        if (batingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatingIsMutable();
          bating_.add(value);
          onChanged();
        } else {
          batingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder addBating(
          int index, protocol.CrossArenaDB.RedisCrossArenaTopBat value) {
        if (batingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBatingIsMutable();
          bating_.add(index, value);
          onChanged();
        } else {
          batingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder addBating(
          protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder builderForValue) {
        if (batingBuilder_ == null) {
          ensureBatingIsMutable();
          bating_.add(builderForValue.build());
          onChanged();
        } else {
          batingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder addBating(
          int index, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder builderForValue) {
        if (batingBuilder_ == null) {
          ensureBatingIsMutable();
          bating_.add(index, builderForValue.build());
          onChanged();
        } else {
          batingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder addAllBating(
          java.lang.Iterable<? extends protocol.CrossArenaDB.RedisCrossArenaTopBat> values) {
        if (batingBuilder_ == null) {
          ensureBatingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bating_);
          onChanged();
        } else {
          batingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder clearBating() {
        if (batingBuilder_ == null) {
          bating_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          batingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public Builder removeBating(int index) {
        if (batingBuilder_ == null) {
          ensureBatingIsMutable();
          bating_.remove(index);
          onChanged();
        } else {
          batingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder getBatingBuilder(
          int index) {
        return getBatingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder getBatingOrBuilder(
          int index) {
        if (batingBuilder_ == null) {
          return bating_.get(index);  } else {
          return batingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public java.util.List<? extends protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder> 
           getBatingOrBuilderList() {
        if (batingBuilder_ != null) {
          return batingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bating_);
        }
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder addBatingBuilder() {
        return getBatingFieldBuilder().addBuilder(
            protocol.CrossArenaDB.RedisCrossArenaTopBat.getDefaultInstance());
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder addBatingBuilder(
          int index) {
        return getBatingFieldBuilder().addBuilder(
            index, protocol.CrossArenaDB.RedisCrossArenaTopBat.getDefaultInstance());
      }
      /**
       * <code>repeated .RedisCrossArenaTopBat bating = 4;</code>
       */
      public java.util.List<protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder> 
           getBatingBuilderList() {
        return getBatingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.CrossArenaDB.RedisCrossArenaTopBat, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder, protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder> 
          getBatingFieldBuilder() {
        if (batingBuilder_ == null) {
          batingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.CrossArenaDB.RedisCrossArenaTopBat, protocol.CrossArenaDB.RedisCrossArenaTopBat.Builder, protocol.CrossArenaDB.RedisCrossArenaTopBatOrBuilder>(
                  bating_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          bating_ = null;
        }
        return batingBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RedisCrossArenaGrop)
    }

    // @@protoc_insertion_point(class_scope:RedisCrossArenaGrop)
    private static final protocol.CrossArenaDB.RedisCrossArenaGrop DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.CrossArenaDB.RedisCrossArenaGrop();
    }

    public static protocol.CrossArenaDB.RedisCrossArenaGrop getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RedisCrossArenaGrop>
        PARSER = new com.google.protobuf.AbstractParser<RedisCrossArenaGrop>() {
      public RedisCrossArenaGrop parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RedisCrossArenaGrop(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RedisCrossArenaGrop> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RedisCrossArenaGrop> getParserForType() {
      return PARSER;
    }

    public protocol.CrossArenaDB.RedisCrossArenaGrop getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaHonorDB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaHonorDB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaHonorDB_DbsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaHonorDB_DbsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaHonorDB_HisTimeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaHonorDB_HisTimeEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_DbsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_DbsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_LtPetNumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_LtPetNumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_WeekBattleResEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_WeekBattleResEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_EventFlishNumEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_EventFlishNumEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_EventCurEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_EventCurEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_LtCotCootEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_LtCotCootEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CrossArenaPlayerDB_SerialWinDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CrossArenaPlayerDB_SerialWinDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_LTSerialWin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_LTSerialWin_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_LTSerialWin_WinDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_LTSerialWin_WinDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaTableDB_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaTableDB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaGuessInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaGuessInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaPlayer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaTopPly_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaTopPly_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaTopBat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaTopBat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RedisCrossArenaGrop_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RedisCrossArenaGrop_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022CrossArenaDB.proto\032\017RetCodeId.proto\032\022R" +
      "ecentPassed.proto\032\014Battle.proto\032\020Prepare" +
      "War.proto\032\020CrossArena.proto\"\333\001\n\021CrossAre" +
      "naHonorDB\022\016\n\006flishs\030\001 \003(\005\022(\n\003dbs\030\002 \003(\0132\033" +
      ".CrossArenaHonorDB.DbsEntry\0220\n\007hisTime\030\003" +
      " \003(\0132\037.CrossArenaHonorDB.HisTimeEntry\032*\n" +
      "\010DbsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028" +
      "\001\032.\n\014HisTimeEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030" +
      "\002 \001(\003:\0028\001\"\260\014\n\022CrossArenaPlayerDB\022)\n\003dbs\030" +
      "\001 \003(\0132\034.CrossArenaPlayerDB.DbsEntry\0223\n\010l",
      "tPetNum\030\002 \003(\0132!.CrossArenaPlayerDB.LtPet" +
      "NumEntry\0229\n\013ltPetWinNum\030\003 \003(\0132$.CrossAre" +
      "naPlayerDB.LtPetWinNumEntry\022=\n\rweekBattl" +
      "eRes\030\004 \003(\0132&.CrossArenaPlayerDB.WeekBatt" +
      "leResEntry\022=\n\reventFlishNum\030\005 \003(\0132&.Cros" +
      "sArenaPlayerDB.EventFlishNumEntry\0223\n\010eve" +
      "ntCur\030\006 \003(\0132!.CrossArenaPlayerDB.EventCu" +
      "rEntry\022!\n\005honor\030\007 \001(\0132\022.CrossArenaHonorD" +
      "B\022\021\n\tnoteAward\030\010 \003(\005\022\r\n\005hyDay\030\t \001(\005\022\020\n\010j" +
      "ionTime\030\n \001(\003\022\021\n\tleijiTime\030\013 \001(\003\022\021\n\tallB",
      "atWin\030\014 \003(\005\0225\n\tltCotCoot\030\r \003(\0132\".CrossAr" +
      "enaPlayerDB.LtCotCootEntry\022\017\n\007isAward\030\016 " +
      "\001(\005\022;\n\014weekTaskData\030\017 \003(\0132%.CrossArenaPl" +
      "ayerDB.WeekTaskDataEntry\022?\n\016weekTaskRewa" +
      "rd\030\020 \003(\0132\'.CrossArenaPlayerDB.WeekTaskRe" +
      "wardEntry\022\017\n\007winTask\030\021 \003(\005\0229\n\013weekBoxTas" +
      "k\030\022 \003(\0132$.CrossArenaPlayerDB.WeekBoxTask" +
      "Entry\022*\n\npreWeekbox\030\023 \003(\0132\026.CrossArenaTa" +
      "skWeekBox\022\025\n\rfirstJoinTime\030\024 \001(\003\022\032\n\022toda" +
      "yUseWinProtect\030\025 \001(\005\022\031\n\021curFreeLtAttTime",
      "s\030\026 \001(\005\022=\n\rserialWinData\030\027 \003(\0132&.CrossAr" +
      "enaPlayerDB.SerialWinDataEntry\022\035\n\025dailyW" +
      "inTaskScienceId\030\030 \001(\005\022\036\n\026weeklyWinTaskSc" +
      "ienceId\030\031 \001(\005\032*\n\010DbsEntry\022\013\n\003key\030\001 \001(\005\022\r" +
      "\n\005value\030\002 \001(\005:\0028\001\032/\n\rLtPetNumEntry\022\013\n\003ke" +
      "y\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0322\n\020LtPetWinNu" +
      "mEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0324" +
      "\n\022WeekBattleResEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005val" +
      "ue\030\002 \001(\005:\0028\001\0324\n\022EventFlishNumEntry\022\013\n\003ke" +
      "y\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\032/\n\rEventCurEn",
      "try\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\003:\0028\001\0320\n\016L" +
      "tCotCootEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(" +
      "\005:\0028\001\0323\n\021WeekTaskDataEntry\022\013\n\003key\030\001 \001(\005\022" +
      "\r\n\005value\030\002 \001(\005:\0028\001\0325\n\023WeekTaskRewardEntr" +
      "y\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0322\n\020Wee" +
      "kBoxTaskEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(" +
      "\005:\0028\001\032E\n\022SerialWinDataEntry\022\013\n\003key\030\001 \001(\005" +
      "\022\036\n\005value\030\002 \001(\0132\017.DB_LTSerialWin:\0028\001\"o\n\016" +
      "DB_LTSerialWin\022-\n\007winData\030\001 \003(\0132\034.DB_LTS" +
      "erialWin.WinDataEntry\032.\n\014WinDataEntry\022\013\n",
      "\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\357\004\n\026RedisC" +
      "rossArenaTableDB\022\020\n\010leitaiId\030\001 \001(\005\022\r\n\005st" +
      "ate\030\002 \001(\005\022)\n\tdefPlayer\030\003 \001(\0132\026.RedisCros" +
      "sArenaPlayer\022)\n\tattPlayer\030\004 \001(\0132\026.RedisC" +
      "rossArenaPlayer\022\017\n\007defTime\030\005 \001(\003\022\021\n\tdefW" +
      "inNum\030\006 \001(\005\022\020\n\010battleId\030\007 \001(\003\022\022\n\nsettleT" +
      "ime\030\010 \001(\003\022E\n\017guessDefSvrData\030\t \003(\0132,.Red" +
      "isCrossArenaTableDB.GuessDefSvrDataEntry" +
      "\022E\n\017guessAttSvrData\030\n \003(\0132,.RedisCrossAr" +
      "enaTableDB.GuessAttSvrDataEntry\022\026\n\016lastB",
      "attleTime\030\013 \001(\003\022#\n\003dui\030\014 \003(\0132\026.RedisCros" +
      "sArenaPlayer\022\024\n\014stateEndTime\030\r \001(\003\022\022\n\nis" +
      "AIBattle\030\016 \001(\005\022\r\n\005aiWin\030\017 \001(\005\022\022\n\nreadySt" +
      "ate\030\020 \003(\005\022\014\n\004type\030\021 \001(\005\0326\n\024GuessDefSvrDa" +
      "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032" +
      "6\n\024GuessAttSvrDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005" +
      "value\030\002 \001(\t:\0028\001\"Z\n\030RedisCrossArenaGuessI" +
      "nfo\022\021\n\tplayerIdx\030\001 \001(\t\022\r\n\005isWin\030\002 \001(\005\022\n\n" +
      "\002ip\030\003 \001(\t\022\020\n\010svrIndex\030\004 \001(\005\"\371\001\n\025RedisCro" +
      "ssArenaPlayer\022\014\n\004name\030\001 \001(\t\022\020\n\010playerId\030",
      "\002 \001(\t\022\020\n\010svrIndex\030\003 \001(\005\022\022\n\nformIpPort\030\004 " +
      "\001(\t\022#\n\010teamInfo\030\005 \001(\0132\021.BattlePlayerInfo" +
      "\022\021\n\tshowPetId\030\006 \001(\005\022\020\n\010jionTime\030\007 \001(\003\022\016\n" +
      "\006defNum\030\010 \001(\005\022\r\n\005power\030\t \001(\003\022\014\n\004isAI\030\n \001" +
      "(\005\022#\n\nextendProp\030\013 \003(\0132\017.ExtendProperty\"" +
      "\356\001\n\025RedisCrossArenaTopPly\022\020\n\010playerId\030\001 " +
      "\001(\t\022\024\n\014fromSvrIndex\030\002 \001(\t\022#\n\010teamInfo\030\003 " +
      "\001(\0132\021.BattlePlayerInfo\022\r\n\005group\030\004 \001(\t\022\016\n" +
      "\006jftime\030\005 \001(\003\022\r\n\005grade\030\006 \001(\005\022\014\n\004isAI\030\007 \001" +
      "(\005\022\021\n\tbattleIds\030\010 \003(\t\022\031\n\006teamdb\030\t \001(\0132\t.",
      "TeamInfo\022\020\n\010otheridx\030\n \001(\t\022\014\n\004sort\030\013 \001(\005" +
      "\"q\n\025RedisCrossArenaTopBat\022\013\n\003py1\030\001 \001(\t\022\013" +
      "\n\003py2\030\002 \001(\t\022\016\n\006roomid\030\003 \001(\003\022\017\n\007endTime\030\004" +
      " \001(\003\022\017\n\007campWin\030\005 \001(\005\022\014\n\004isAI\030\006 \001(\005\"n\n\023R" +
      "edisCrossArenaGrop\022\r\n\005group\030\001 \001(\t\022\017\n\007pla" +
      "yers\030\002 \003(\t\022\017\n\007idleQue\030\003 \003(\t\022&\n\006bating\030\004 " +
      "\003(\0132\026.RedisCrossArenaTopBatB\033\n\010protocol\252" +
      "\002\016ETHotfix.Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.RetCodeId.getDescriptor(),
          protocol.RecentPassedOuterClass.getDescriptor(),
          protocol.Battle.getDescriptor(),
          protocol.PrepareWar.getDescriptor(),
          protocol.CrossArena.getDescriptor(),
        }, assigner);
    internal_static_CrossArenaHonorDB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CrossArenaHonorDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaHonorDB_descriptor,
        new java.lang.String[] { "Flishs", "Dbs", "HisTime", });
    internal_static_CrossArenaHonorDB_DbsEntry_descriptor =
      internal_static_CrossArenaHonorDB_descriptor.getNestedTypes().get(0);
    internal_static_CrossArenaHonorDB_DbsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaHonorDB_DbsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaHonorDB_HisTimeEntry_descriptor =
      internal_static_CrossArenaHonorDB_descriptor.getNestedTypes().get(1);
    internal_static_CrossArenaHonorDB_HisTimeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaHonorDB_HisTimeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CrossArenaPlayerDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_descriptor,
        new java.lang.String[] { "Dbs", "LtPetNum", "LtPetWinNum", "WeekBattleRes", "EventFlishNum", "EventCur", "Honor", "NoteAward", "HyDay", "JionTime", "LeijiTime", "AllBatWin", "LtCotCoot", "IsAward", "WeekTaskData", "WeekTaskReward", "WinTask", "WeekBoxTask", "PreWeekbox", "FirstJoinTime", "TodayUseWinProtect", "CurFreeLtAttTimes", "SerialWinData", "DailyWinTaskScienceId", "WeeklyWinTaskScienceId", });
    internal_static_CrossArenaPlayerDB_DbsEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(0);
    internal_static_CrossArenaPlayerDB_DbsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_DbsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_LtPetNumEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(1);
    internal_static_CrossArenaPlayerDB_LtPetNumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_LtPetNumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(2);
    internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_LtPetWinNumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_WeekBattleResEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(3);
    internal_static_CrossArenaPlayerDB_WeekBattleResEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_WeekBattleResEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_EventFlishNumEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(4);
    internal_static_CrossArenaPlayerDB_EventFlishNumEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_EventFlishNumEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_EventCurEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(5);
    internal_static_CrossArenaPlayerDB_EventCurEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_EventCurEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_LtCotCootEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(6);
    internal_static_CrossArenaPlayerDB_LtCotCootEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_LtCotCootEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(7);
    internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_WeekTaskDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(8);
    internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_WeekTaskRewardEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(9);
    internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_WeekBoxTaskEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_CrossArenaPlayerDB_SerialWinDataEntry_descriptor =
      internal_static_CrossArenaPlayerDB_descriptor.getNestedTypes().get(10);
    internal_static_CrossArenaPlayerDB_SerialWinDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CrossArenaPlayerDB_SerialWinDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_LTSerialWin_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_DB_LTSerialWin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_LTSerialWin_descriptor,
        new java.lang.String[] { "WinData", });
    internal_static_DB_LTSerialWin_WinDataEntry_descriptor =
      internal_static_DB_LTSerialWin_descriptor.getNestedTypes().get(0);
    internal_static_DB_LTSerialWin_WinDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_LTSerialWin_WinDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_RedisCrossArenaTableDB_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_RedisCrossArenaTableDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaTableDB_descriptor,
        new java.lang.String[] { "LeitaiId", "State", "DefPlayer", "AttPlayer", "DefTime", "DefWinNum", "BattleId", "SettleTime", "GuessDefSvrData", "GuessAttSvrData", "LastBattleTime", "Dui", "StateEndTime", "IsAIBattle", "AiWin", "ReadyState", "Type", });
    internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_descriptor =
      internal_static_RedisCrossArenaTableDB_descriptor.getNestedTypes().get(0);
    internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaTableDB_GuessDefSvrDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_descriptor =
      internal_static_RedisCrossArenaTableDB_descriptor.getNestedTypes().get(1);
    internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaTableDB_GuessAttSvrDataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_RedisCrossArenaGuessInfo_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_RedisCrossArenaGuessInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaGuessInfo_descriptor,
        new java.lang.String[] { "PlayerIdx", "IsWin", "Ip", "SvrIndex", });
    internal_static_RedisCrossArenaPlayer_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_RedisCrossArenaPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaPlayer_descriptor,
        new java.lang.String[] { "Name", "PlayerId", "SvrIndex", "FormIpPort", "TeamInfo", "ShowPetId", "JionTime", "DefNum", "Power", "IsAI", "ExtendProp", });
    internal_static_RedisCrossArenaTopPly_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_RedisCrossArenaTopPly_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaTopPly_descriptor,
        new java.lang.String[] { "PlayerId", "FromSvrIndex", "TeamInfo", "Group", "Jftime", "Grade", "IsAI", "BattleIds", "Teamdb", "Otheridx", "Sort", });
    internal_static_RedisCrossArenaTopBat_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_RedisCrossArenaTopBat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaTopBat_descriptor,
        new java.lang.String[] { "Py1", "Py2", "Roomid", "EndTime", "CampWin", "IsAI", });
    internal_static_RedisCrossArenaGrop_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_RedisCrossArenaGrop_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RedisCrossArenaGrop_descriptor,
        new java.lang.String[] { "Group", "Players", "IdleQue", "Bating", });
    protocol.RetCodeId.getDescriptor();
    protocol.RecentPassedOuterClass.getDescriptor();
    protocol.Battle.getDescriptor();
    protocol.PrepareWar.getDescriptor();
    protocol.CrossArena.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
