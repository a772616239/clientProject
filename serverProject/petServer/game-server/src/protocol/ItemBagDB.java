// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemBagDB.proto

package protocol;

public final class ItemBagDB {
  private ItemBagDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DB_ItemBagOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_ItemBag)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *背包已使用容量
     * </pre>
     *
     * <code>int64 usedCapacity = 1;</code>
     */
    long getUsedCapacity();

    /**
     * <pre>
     *背包容量上限
     * </pre>
     *
     * <code>int64 bagCapacityLimit = 2;</code>
     */
    long getBagCapacityLimit();

    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */
    boolean containsItems(
        int key);
    /**
     * Use {@link #getItemsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Long>
    getItems();
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Long>
    getItemsMap();
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    long getItemsOrDefault(
        int key,
        long defaultValue);
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    long getItemsOrThrow(
        int key);

    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */
    int getItemUseCountCount();
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */
    boolean containsItemUseCount(
        int key);
    /**
     * Use {@link #getItemUseCountMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getItemUseCount();
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getItemUseCountMap();
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    int getItemUseCountOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    int getItemUseCountOrThrow(
        int key);

    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */
    int getItemDailyUseCountCount();
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */
    boolean containsItemDailyUseCount(
        int key);
    /**
     * Use {@link #getItemDailyUseCountMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getItemDailyUseCount();
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getItemDailyUseCountMap();
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    int getItemDailyUseCountOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    int getItemDailyUseCountOrThrow(
        int key);

    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */
    int getBlindBoxesCount();
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */
    boolean containsBlindBoxes(
        int key);
    /**
     * Use {@link #getBlindBoxesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
    getBlindBoxes();
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */
    java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
    getBlindBoxesMap();
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrDefault(
        int key,
        protocol.ItemBagDB.DB_BlindBoxReward defaultValue);
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrThrow(
        int key);

    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */
    int getWeeklyLimitAlreadyGainCount();
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */
    boolean containsWeeklyLimitAlreadyGain(
        int key);
    /**
     * Use {@link #getWeeklyLimitAlreadyGainMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeeklyLimitAlreadyGain();
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getWeeklyLimitAlreadyGainMap();
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    int getWeeklyLimitAlreadyGainOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    int getWeeklyLimitAlreadyGainOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code DB_ItemBag}
   */
  public  static final class DB_ItemBag extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_ItemBag)
      DB_ItemBagOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_ItemBag.newBuilder() to construct.
    private DB_ItemBag(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_ItemBag() {
      usedCapacity_ = 0L;
      bagCapacityLimit_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_ItemBag(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              usedCapacity_ = input.readInt64();
              break;
            }
            case 16: {

              bagCapacityLimit_ = input.readInt64();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                items_ = com.google.protobuf.MapField.newMapField(
                    ItemsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
              items__ = input.readMessage(
                  ItemsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              items_.getMutableMap().put(
                  items__.getKey(), items__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                itemUseCount_ = com.google.protobuf.MapField.newMapField(
                    ItemUseCountDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              itemUseCount__ = input.readMessage(
                  ItemUseCountDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              itemUseCount_.getMutableMap().put(
                  itemUseCount__.getKey(), itemUseCount__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                itemDailyUseCount_ = com.google.protobuf.MapField.newMapField(
                    ItemDailyUseCountDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              itemDailyUseCount__ = input.readMessage(
                  ItemDailyUseCountDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              itemDailyUseCount_.getMutableMap().put(
                  itemDailyUseCount__.getKey(), itemDailyUseCount__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                blindBoxes_ = com.google.protobuf.MapField.newMapField(
                    BlindBoxesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
              blindBoxes__ = input.readMessage(
                  BlindBoxesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              blindBoxes_.getMutableMap().put(
                  blindBoxes__.getKey(), blindBoxes__.getValue());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                weeklyLimitAlreadyGain_ = com.google.protobuf.MapField.newMapField(
                    WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              weeklyLimitAlreadyGain__ = input.readMessage(
                  WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              weeklyLimitAlreadyGain_.getMutableMap().put(
                  weeklyLimitAlreadyGain__.getKey(), weeklyLimitAlreadyGain__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.ItemBagDB.internal_static_DB_ItemBag_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetItems();
        case 4:
          return internalGetItemUseCount();
        case 5:
          return internalGetItemDailyUseCount();
        case 6:
          return internalGetBlindBoxes();
        case 7:
          return internalGetWeeklyLimitAlreadyGain();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.ItemBagDB.internal_static_DB_ItemBag_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.ItemBagDB.DB_ItemBag.class, protocol.ItemBagDB.DB_ItemBag.Builder.class);
    }

    private int bitField0_;
    public static final int USEDCAPACITY_FIELD_NUMBER = 1;
    private long usedCapacity_;
    /**
     * <pre>
     *背包已使用容量
     * </pre>
     *
     * <code>int64 usedCapacity = 1;</code>
     */
    public long getUsedCapacity() {
      return usedCapacity_;
    }

    public static final int BAGCAPACITYLIMIT_FIELD_NUMBER = 2;
    private long bagCapacityLimit_;
    /**
     * <pre>
     *背包容量上限
     * </pre>
     *
     * <code>int64 bagCapacityLimit = 2;</code>
     */
    public long getBagCapacityLimit() {
      return bagCapacityLimit_;
    }

    public static final int ITEMS_FIELD_NUMBER = 3;
    private static final class ItemsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Long> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Long>newDefaultInstance(
                  protocol.ItemBagDB.internal_static_DB_ItemBag_ItemsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Long> items_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
    internalGetItems() {
      if (items_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ItemsDefaultEntryHolder.defaultEntry);
      }
      return items_;
    }

    public int getItemsCount() {
      return internalGetItems().getMap().size();
    }
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    public boolean containsItems(
        int key) {
      
      return internalGetItems().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Long> getItems() {
      return getItemsMap();
    }
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Long> getItemsMap() {
      return internalGetItems().getMap();
    }
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    public long getItemsOrDefault(
        int key,
        long defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetItems().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *道具数量
     * </pre>
     *
     * <code>map&lt;int32, int64&gt; items = 3;</code>
     */

    public long getItemsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Long> map =
          internalGetItems().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ITEMUSECOUNT_FIELD_NUMBER = 4;
    private static final class ItemUseCountDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.ItemBagDB.internal_static_DB_ItemBag_ItemUseCountEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> itemUseCount_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetItemUseCount() {
      if (itemUseCount_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ItemUseCountDefaultEntryHolder.defaultEntry);
      }
      return itemUseCount_;
    }

    public int getItemUseCountCount() {
      return internalGetItemUseCount().getMap().size();
    }
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    public boolean containsItemUseCount(
        int key) {
      
      return internalGetItemUseCount().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemUseCountMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getItemUseCount() {
      return getItemUseCountMap();
    }
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getItemUseCountMap() {
      return internalGetItemUseCount().getMap();
    }
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    public int getItemUseCountOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetItemUseCount().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *道具已使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
     */

    public int getItemUseCountOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetItemUseCount().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ITEMDAILYUSECOUNT_FIELD_NUMBER = 5;
    private static final class ItemDailyUseCountDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.ItemBagDB.internal_static_DB_ItemBag_ItemDailyUseCountEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> itemDailyUseCount_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetItemDailyUseCount() {
      if (itemDailyUseCount_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ItemDailyUseCountDefaultEntryHolder.defaultEntry);
      }
      return itemDailyUseCount_;
    }

    public int getItemDailyUseCountCount() {
      return internalGetItemDailyUseCount().getMap().size();
    }
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    public boolean containsItemDailyUseCount(
        int key) {
      
      return internalGetItemDailyUseCount().getMap().containsKey(key);
    }
    /**
     * Use {@link #getItemDailyUseCountMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getItemDailyUseCount() {
      return getItemDailyUseCountMap();
    }
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getItemDailyUseCountMap() {
      return internalGetItemDailyUseCount().getMap();
    }
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    public int getItemDailyUseCountOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetItemDailyUseCount().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *道具每日使用次数
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
     */

    public int getItemDailyUseCountOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetItemDailyUseCount().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BLINDBOXES_FIELD_NUMBER = 6;
    private static final class BlindBoxesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>newDefaultInstance(
                  protocol.ItemBagDB.internal_static_DB_ItemBag_BlindBoxesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.ItemBagDB.DB_BlindBoxReward.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> blindBoxes_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
    internalGetBlindBoxes() {
      if (blindBoxes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            BlindBoxesDefaultEntryHolder.defaultEntry);
      }
      return blindBoxes_;
    }

    public int getBlindBoxesCount() {
      return internalGetBlindBoxes().getMap().size();
    }
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    public boolean containsBlindBoxes(
        int key) {
      
      return internalGetBlindBoxes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getBlindBoxesMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> getBlindBoxes() {
      return getBlindBoxesMap();
    }
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> getBlindBoxesMap() {
      return internalGetBlindBoxes().getMap();
    }
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    public protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrDefault(
        int key,
        protocol.ItemBagDB.DB_BlindBoxReward defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> map =
          internalGetBlindBoxes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
     */

    public protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> map =
          internalGetBlindBoxes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WEEKLYLIMITALREADYGAIN_FIELD_NUMBER = 7;
    private static final class WeeklyLimitAlreadyGainDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.ItemBagDB.internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> weeklyLimitAlreadyGain_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetWeeklyLimitAlreadyGain() {
      if (weeklyLimitAlreadyGain_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry);
      }
      return weeklyLimitAlreadyGain_;
    }

    public int getWeeklyLimitAlreadyGainCount() {
      return internalGetWeeklyLimitAlreadyGain().getMap().size();
    }
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    public boolean containsWeeklyLimitAlreadyGain(
        int key) {
      
      return internalGetWeeklyLimitAlreadyGain().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWeeklyLimitAlreadyGainMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeeklyLimitAlreadyGain() {
      return getWeeklyLimitAlreadyGainMap();
    }
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getWeeklyLimitAlreadyGainMap() {
      return internalGetWeeklyLimitAlreadyGain().getMap();
    }
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    public int getWeeklyLimitAlreadyGainOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeeklyLimitAlreadyGain().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *每周限定道具获取数量 map
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
     */

    public int getWeeklyLimitAlreadyGainOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetWeeklyLimitAlreadyGain().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (usedCapacity_ != 0L) {
        output.writeInt64(1, usedCapacity_);
      }
      if (bagCapacityLimit_ != 0L) {
        output.writeInt64(2, bagCapacityLimit_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetItems(),
          ItemsDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetItemUseCount(),
          ItemUseCountDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetItemDailyUseCount(),
          ItemDailyUseCountDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetBlindBoxes(),
          BlindBoxesDefaultEntryHolder.defaultEntry,
          6);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetWeeklyLimitAlreadyGain(),
          WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry,
          7);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (usedCapacity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, usedCapacity_);
      }
      if (bagCapacityLimit_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, bagCapacityLimit_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Long> entry
           : internalGetItems().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Long>
        items__ = ItemsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, items__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetItemUseCount().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        itemUseCount__ = ItemUseCountDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, itemUseCount__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetItemDailyUseCount().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        itemDailyUseCount__ = ItemDailyUseCountDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, itemDailyUseCount__);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> entry
           : internalGetBlindBoxes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
        blindBoxes__ = BlindBoxesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, blindBoxes__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetWeeklyLimitAlreadyGain().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        weeklyLimitAlreadyGain__ = WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, weeklyLimitAlreadyGain__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.ItemBagDB.DB_ItemBag)) {
        return super.equals(obj);
      }
      protocol.ItemBagDB.DB_ItemBag other = (protocol.ItemBagDB.DB_ItemBag) obj;

      boolean result = true;
      result = result && (getUsedCapacity()
          == other.getUsedCapacity());
      result = result && (getBagCapacityLimit()
          == other.getBagCapacityLimit());
      result = result && internalGetItems().equals(
          other.internalGetItems());
      result = result && internalGetItemUseCount().equals(
          other.internalGetItemUseCount());
      result = result && internalGetItemDailyUseCount().equals(
          other.internalGetItemDailyUseCount());
      result = result && internalGetBlindBoxes().equals(
          other.internalGetBlindBoxes());
      result = result && internalGetWeeklyLimitAlreadyGain().equals(
          other.internalGetWeeklyLimitAlreadyGain());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USEDCAPACITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUsedCapacity());
      hash = (37 * hash) + BAGCAPACITYLIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBagCapacityLimit());
      if (!internalGetItems().getMap().isEmpty()) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItems().hashCode();
      }
      if (!internalGetItemUseCount().getMap().isEmpty()) {
        hash = (37 * hash) + ITEMUSECOUNT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItemUseCount().hashCode();
      }
      if (!internalGetItemDailyUseCount().getMap().isEmpty()) {
        hash = (37 * hash) + ITEMDAILYUSECOUNT_FIELD_NUMBER;
        hash = (53 * hash) + internalGetItemDailyUseCount().hashCode();
      }
      if (!internalGetBlindBoxes().getMap().isEmpty()) {
        hash = (37 * hash) + BLINDBOXES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetBlindBoxes().hashCode();
      }
      if (!internalGetWeeklyLimitAlreadyGain().getMap().isEmpty()) {
        hash = (37 * hash) + WEEKLYLIMITALREADYGAIN_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWeeklyLimitAlreadyGain().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_ItemBag parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.ItemBagDB.DB_ItemBag prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_ItemBag}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_ItemBag)
        protocol.ItemBagDB.DB_ItemBagOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.ItemBagDB.internal_static_DB_ItemBag_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetItems();
          case 4:
            return internalGetItemUseCount();
          case 5:
            return internalGetItemDailyUseCount();
          case 6:
            return internalGetBlindBoxes();
          case 7:
            return internalGetWeeklyLimitAlreadyGain();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableItems();
          case 4:
            return internalGetMutableItemUseCount();
          case 5:
            return internalGetMutableItemDailyUseCount();
          case 6:
            return internalGetMutableBlindBoxes();
          case 7:
            return internalGetMutableWeeklyLimitAlreadyGain();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.ItemBagDB.internal_static_DB_ItemBag_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.ItemBagDB.DB_ItemBag.class, protocol.ItemBagDB.DB_ItemBag.Builder.class);
      }

      // Construct using protocol.ItemBagDB.DB_ItemBag.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        usedCapacity_ = 0L;

        bagCapacityLimit_ = 0L;

        internalGetMutableItems().clear();
        internalGetMutableItemUseCount().clear();
        internalGetMutableItemDailyUseCount().clear();
        internalGetMutableBlindBoxes().clear();
        internalGetMutableWeeklyLimitAlreadyGain().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.ItemBagDB.internal_static_DB_ItemBag_descriptor;
      }

      public protocol.ItemBagDB.DB_ItemBag getDefaultInstanceForType() {
        return protocol.ItemBagDB.DB_ItemBag.getDefaultInstance();
      }

      public protocol.ItemBagDB.DB_ItemBag build() {
        protocol.ItemBagDB.DB_ItemBag result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.ItemBagDB.DB_ItemBag buildPartial() {
        protocol.ItemBagDB.DB_ItemBag result = new protocol.ItemBagDB.DB_ItemBag(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.usedCapacity_ = usedCapacity_;
        result.bagCapacityLimit_ = bagCapacityLimit_;
        result.items_ = internalGetItems();
        result.items_.makeImmutable();
        result.itemUseCount_ = internalGetItemUseCount();
        result.itemUseCount_.makeImmutable();
        result.itemDailyUseCount_ = internalGetItemDailyUseCount();
        result.itemDailyUseCount_.makeImmutable();
        result.blindBoxes_ = internalGetBlindBoxes();
        result.blindBoxes_.makeImmutable();
        result.weeklyLimitAlreadyGain_ = internalGetWeeklyLimitAlreadyGain();
        result.weeklyLimitAlreadyGain_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.ItemBagDB.DB_ItemBag) {
          return mergeFrom((protocol.ItemBagDB.DB_ItemBag)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.ItemBagDB.DB_ItemBag other) {
        if (other == protocol.ItemBagDB.DB_ItemBag.getDefaultInstance()) return this;
        if (other.getUsedCapacity() != 0L) {
          setUsedCapacity(other.getUsedCapacity());
        }
        if (other.getBagCapacityLimit() != 0L) {
          setBagCapacityLimit(other.getBagCapacityLimit());
        }
        internalGetMutableItems().mergeFrom(
            other.internalGetItems());
        internalGetMutableItemUseCount().mergeFrom(
            other.internalGetItemUseCount());
        internalGetMutableItemDailyUseCount().mergeFrom(
            other.internalGetItemDailyUseCount());
        internalGetMutableBlindBoxes().mergeFrom(
            other.internalGetBlindBoxes());
        internalGetMutableWeeklyLimitAlreadyGain().mergeFrom(
            other.internalGetWeeklyLimitAlreadyGain());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.ItemBagDB.DB_ItemBag parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.ItemBagDB.DB_ItemBag) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long usedCapacity_ ;
      /**
       * <pre>
       *背包已使用容量
       * </pre>
       *
       * <code>int64 usedCapacity = 1;</code>
       */
      public long getUsedCapacity() {
        return usedCapacity_;
      }
      /**
       * <pre>
       *背包已使用容量
       * </pre>
       *
       * <code>int64 usedCapacity = 1;</code>
       */
      public Builder setUsedCapacity(long value) {
        
        usedCapacity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *背包已使用容量
       * </pre>
       *
       * <code>int64 usedCapacity = 1;</code>
       */
      public Builder clearUsedCapacity() {
        
        usedCapacity_ = 0L;
        onChanged();
        return this;
      }

      private long bagCapacityLimit_ ;
      /**
       * <pre>
       *背包容量上限
       * </pre>
       *
       * <code>int64 bagCapacityLimit = 2;</code>
       */
      public long getBagCapacityLimit() {
        return bagCapacityLimit_;
      }
      /**
       * <pre>
       *背包容量上限
       * </pre>
       *
       * <code>int64 bagCapacityLimit = 2;</code>
       */
      public Builder setBagCapacityLimit(long value) {
        
        bagCapacityLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *背包容量上限
       * </pre>
       *
       * <code>int64 bagCapacityLimit = 2;</code>
       */
      public Builder clearBagCapacityLimit() {
        
        bagCapacityLimit_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Long> items_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetItems() {
        if (items_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ItemsDefaultEntryHolder.defaultEntry);
        }
        return items_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Long>
      internalGetMutableItems() {
        onChanged();;
        if (items_ == null) {
          items_ = com.google.protobuf.MapField.newMapField(
              ItemsDefaultEntryHolder.defaultEntry);
        }
        if (!items_.isMutable()) {
          items_ = items_.copy();
        }
        return items_;
      }

      public int getItemsCount() {
        return internalGetItems().getMap().size();
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public boolean containsItems(
          int key) {
        
        return internalGetItems().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long> getItems() {
        return getItemsMap();
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Long> getItemsMap() {
        return internalGetItems().getMap();
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public long getItemsOrDefault(
          int key,
          long defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetItems().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public long getItemsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Long> map =
            internalGetItems().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItems() {
        internalGetMutableItems().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public Builder removeItems(
          int key) {
        
        internalGetMutableItems().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Long>
      getMutableItems() {
        return internalGetMutableItems().getMutableMap();
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */
      public Builder putItems(
          int key,
          long value) {
        
        
        internalGetMutableItems().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *道具数量
       * </pre>
       *
       * <code>map&lt;int32, int64&gt; items = 3;</code>
       */

      public Builder putAllItems(
          java.util.Map<java.lang.Integer, java.lang.Long> values) {
        internalGetMutableItems().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> itemUseCount_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetItemUseCount() {
        if (itemUseCount_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ItemUseCountDefaultEntryHolder.defaultEntry);
        }
        return itemUseCount_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableItemUseCount() {
        onChanged();;
        if (itemUseCount_ == null) {
          itemUseCount_ = com.google.protobuf.MapField.newMapField(
              ItemUseCountDefaultEntryHolder.defaultEntry);
        }
        if (!itemUseCount_.isMutable()) {
          itemUseCount_ = itemUseCount_.copy();
        }
        return itemUseCount_;
      }

      public int getItemUseCountCount() {
        return internalGetItemUseCount().getMap().size();
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public boolean containsItemUseCount(
          int key) {
        
        return internalGetItemUseCount().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemUseCountMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getItemUseCount() {
        return getItemUseCountMap();
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getItemUseCountMap() {
        return internalGetItemUseCount().getMap();
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public int getItemUseCountOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetItemUseCount().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public int getItemUseCountOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetItemUseCount().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItemUseCount() {
        internalGetMutableItemUseCount().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public Builder removeItemUseCount(
          int key) {
        
        internalGetMutableItemUseCount().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableItemUseCount() {
        return internalGetMutableItemUseCount().getMutableMap();
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */
      public Builder putItemUseCount(
          int key,
          int value) {
        
        
        internalGetMutableItemUseCount().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *道具已使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemUseCount = 4;</code>
       */

      public Builder putAllItemUseCount(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableItemUseCount().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> itemDailyUseCount_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetItemDailyUseCount() {
        if (itemDailyUseCount_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ItemDailyUseCountDefaultEntryHolder.defaultEntry);
        }
        return itemDailyUseCount_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableItemDailyUseCount() {
        onChanged();;
        if (itemDailyUseCount_ == null) {
          itemDailyUseCount_ = com.google.protobuf.MapField.newMapField(
              ItemDailyUseCountDefaultEntryHolder.defaultEntry);
        }
        if (!itemDailyUseCount_.isMutable()) {
          itemDailyUseCount_ = itemDailyUseCount_.copy();
        }
        return itemDailyUseCount_;
      }

      public int getItemDailyUseCountCount() {
        return internalGetItemDailyUseCount().getMap().size();
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public boolean containsItemDailyUseCount(
          int key) {
        
        return internalGetItemDailyUseCount().getMap().containsKey(key);
      }
      /**
       * Use {@link #getItemDailyUseCountMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getItemDailyUseCount() {
        return getItemDailyUseCountMap();
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getItemDailyUseCountMap() {
        return internalGetItemDailyUseCount().getMap();
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public int getItemDailyUseCountOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetItemDailyUseCount().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public int getItemDailyUseCountOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetItemDailyUseCount().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearItemDailyUseCount() {
        internalGetMutableItemDailyUseCount().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public Builder removeItemDailyUseCount(
          int key) {
        
        internalGetMutableItemDailyUseCount().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableItemDailyUseCount() {
        return internalGetMutableItemDailyUseCount().getMutableMap();
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */
      public Builder putItemDailyUseCount(
          int key,
          int value) {
        
        
        internalGetMutableItemDailyUseCount().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *道具每日使用次数
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; itemDailyUseCount = 5;</code>
       */

      public Builder putAllItemDailyUseCount(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableItemDailyUseCount().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> blindBoxes_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
      internalGetBlindBoxes() {
        if (blindBoxes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              BlindBoxesDefaultEntryHolder.defaultEntry);
        }
        return blindBoxes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
      internalGetMutableBlindBoxes() {
        onChanged();;
        if (blindBoxes_ == null) {
          blindBoxes_ = com.google.protobuf.MapField.newMapField(
              BlindBoxesDefaultEntryHolder.defaultEntry);
        }
        if (!blindBoxes_.isMutable()) {
          blindBoxes_ = blindBoxes_.copy();
        }
        return blindBoxes_;
      }

      public int getBlindBoxesCount() {
        return internalGetBlindBoxes().getMap().size();
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public boolean containsBlindBoxes(
          int key) {
        
        return internalGetBlindBoxes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getBlindBoxesMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> getBlindBoxes() {
        return getBlindBoxesMap();
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> getBlindBoxesMap() {
        return internalGetBlindBoxes().getMap();
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrDefault(
          int key,
          protocol.ItemBagDB.DB_BlindBoxReward defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> map =
            internalGetBlindBoxes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public protocol.ItemBagDB.DB_BlindBoxReward getBlindBoxesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> map =
            internalGetBlindBoxes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearBlindBoxes() {
        internalGetMutableBlindBoxes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public Builder removeBlindBoxes(
          int key) {
        
        internalGetMutableBlindBoxes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward>
      getMutableBlindBoxes() {
        return internalGetMutableBlindBoxes().getMutableMap();
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */
      public Builder putBlindBoxes(
          int key,
          protocol.ItemBagDB.DB_BlindBoxReward value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableBlindBoxes().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *玩家未结算的盲盒 &lt;盲盒id,盲盒信息&gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_BlindBoxReward&gt; blindBoxes = 6;</code>
       */

      public Builder putAllBlindBoxes(
          java.util.Map<java.lang.Integer, protocol.ItemBagDB.DB_BlindBoxReward> values) {
        internalGetMutableBlindBoxes().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> weeklyLimitAlreadyGain_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetWeeklyLimitAlreadyGain() {
        if (weeklyLimitAlreadyGain_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry);
        }
        return weeklyLimitAlreadyGain_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableWeeklyLimitAlreadyGain() {
        onChanged();;
        if (weeklyLimitAlreadyGain_ == null) {
          weeklyLimitAlreadyGain_ = com.google.protobuf.MapField.newMapField(
              WeeklyLimitAlreadyGainDefaultEntryHolder.defaultEntry);
        }
        if (!weeklyLimitAlreadyGain_.isMutable()) {
          weeklyLimitAlreadyGain_ = weeklyLimitAlreadyGain_.copy();
        }
        return weeklyLimitAlreadyGain_;
      }

      public int getWeeklyLimitAlreadyGainCount() {
        return internalGetWeeklyLimitAlreadyGain().getMap().size();
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public boolean containsWeeklyLimitAlreadyGain(
          int key) {
        
        return internalGetWeeklyLimitAlreadyGain().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWeeklyLimitAlreadyGainMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeeklyLimitAlreadyGain() {
        return getWeeklyLimitAlreadyGainMap();
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getWeeklyLimitAlreadyGainMap() {
        return internalGetWeeklyLimitAlreadyGain().getMap();
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public int getWeeklyLimitAlreadyGainOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeeklyLimitAlreadyGain().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public int getWeeklyLimitAlreadyGainOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetWeeklyLimitAlreadyGain().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWeeklyLimitAlreadyGain() {
        internalGetMutableWeeklyLimitAlreadyGain().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public Builder removeWeeklyLimitAlreadyGain(
          int key) {
        
        internalGetMutableWeeklyLimitAlreadyGain().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableWeeklyLimitAlreadyGain() {
        return internalGetMutableWeeklyLimitAlreadyGain().getMutableMap();
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */
      public Builder putWeeklyLimitAlreadyGain(
          int key,
          int value) {
        
        
        internalGetMutableWeeklyLimitAlreadyGain().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *每周限定道具获取数量 map
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; weeklyLimitAlreadyGain = 7;</code>
       */

      public Builder putAllWeeklyLimitAlreadyGain(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableWeeklyLimitAlreadyGain().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_ItemBag)
    }

    // @@protoc_insertion_point(class_scope:DB_ItemBag)
    private static final protocol.ItemBagDB.DB_ItemBag DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.ItemBagDB.DB_ItemBag();
    }

    public static protocol.ItemBagDB.DB_ItemBag getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_ItemBag>
        PARSER = new com.google.protobuf.AbstractParser<DB_ItemBag>() {
      public DB_ItemBag parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_ItemBag(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_ItemBag> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_ItemBag> getParserForType() {
      return PARSER;
    }

    public protocol.ItemBagDB.DB_ItemBag getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DB_BlindBoxRewardOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_BlindBoxReward)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    java.util.List<protocol.Bag.BlindBoxReward> 
        getRewardListList();
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    protocol.Bag.BlindBoxReward getRewardList(int index);
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    int getRewardListCount();
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    java.util.List<? extends protocol.Bag.BlindBoxRewardOrBuilder> 
        getRewardListOrBuilderList();
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    protocol.Bag.BlindBoxRewardOrBuilder getRewardListOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code DB_BlindBoxReward}
   */
  public  static final class DB_BlindBoxReward extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_BlindBoxReward)
      DB_BlindBoxRewardOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_BlindBoxReward.newBuilder() to construct.
    private DB_BlindBoxReward(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_BlindBoxReward() {
      rewardList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_BlindBoxReward(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rewardList_ = new java.util.ArrayList<protocol.Bag.BlindBoxReward>();
                mutable_bitField0_ |= 0x00000001;
              }
              rewardList_.add(
                  input.readMessage(protocol.Bag.BlindBoxReward.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rewardList_ = java.util.Collections.unmodifiableList(rewardList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.ItemBagDB.internal_static_DB_BlindBoxReward_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.ItemBagDB.internal_static_DB_BlindBoxReward_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.ItemBagDB.DB_BlindBoxReward.class, protocol.ItemBagDB.DB_BlindBoxReward.Builder.class);
    }

    public static final int REWARDLIST_FIELD_NUMBER = 1;
    private java.util.List<protocol.Bag.BlindBoxReward> rewardList_;
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    public java.util.List<protocol.Bag.BlindBoxReward> getRewardListList() {
      return rewardList_;
    }
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    public java.util.List<? extends protocol.Bag.BlindBoxRewardOrBuilder> 
        getRewardListOrBuilderList() {
      return rewardList_;
    }
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    public int getRewardListCount() {
      return rewardList_.size();
    }
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    public protocol.Bag.BlindBoxReward getRewardList(int index) {
      return rewardList_.get(index);
    }
    /**
     * <code>repeated .BlindBoxReward rewardList = 1;</code>
     */
    public protocol.Bag.BlindBoxRewardOrBuilder getRewardListOrBuilder(
        int index) {
      return rewardList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < rewardList_.size(); i++) {
        output.writeMessage(1, rewardList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rewardList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rewardList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.ItemBagDB.DB_BlindBoxReward)) {
        return super.equals(obj);
      }
      protocol.ItemBagDB.DB_BlindBoxReward other = (protocol.ItemBagDB.DB_BlindBoxReward) obj;

      boolean result = true;
      result = result && getRewardListList()
          .equals(other.getRewardListList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getRewardListCount() > 0) {
        hash = (37 * hash) + REWARDLIST_FIELD_NUMBER;
        hash = (53 * hash) + getRewardListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.ItemBagDB.DB_BlindBoxReward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.ItemBagDB.DB_BlindBoxReward prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_BlindBoxReward}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_BlindBoxReward)
        protocol.ItemBagDB.DB_BlindBoxRewardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.ItemBagDB.internal_static_DB_BlindBoxReward_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.ItemBagDB.internal_static_DB_BlindBoxReward_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.ItemBagDB.DB_BlindBoxReward.class, protocol.ItemBagDB.DB_BlindBoxReward.Builder.class);
      }

      // Construct using protocol.ItemBagDB.DB_BlindBoxReward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRewardListFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (rewardListBuilder_ == null) {
          rewardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rewardListBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.ItemBagDB.internal_static_DB_BlindBoxReward_descriptor;
      }

      public protocol.ItemBagDB.DB_BlindBoxReward getDefaultInstanceForType() {
        return protocol.ItemBagDB.DB_BlindBoxReward.getDefaultInstance();
      }

      public protocol.ItemBagDB.DB_BlindBoxReward build() {
        protocol.ItemBagDB.DB_BlindBoxReward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.ItemBagDB.DB_BlindBoxReward buildPartial() {
        protocol.ItemBagDB.DB_BlindBoxReward result = new protocol.ItemBagDB.DB_BlindBoxReward(this);
        int from_bitField0_ = bitField0_;
        if (rewardListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rewardList_ = java.util.Collections.unmodifiableList(rewardList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rewardList_ = rewardList_;
        } else {
          result.rewardList_ = rewardListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.ItemBagDB.DB_BlindBoxReward) {
          return mergeFrom((protocol.ItemBagDB.DB_BlindBoxReward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.ItemBagDB.DB_BlindBoxReward other) {
        if (other == protocol.ItemBagDB.DB_BlindBoxReward.getDefaultInstance()) return this;
        if (rewardListBuilder_ == null) {
          if (!other.rewardList_.isEmpty()) {
            if (rewardList_.isEmpty()) {
              rewardList_ = other.rewardList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRewardListIsMutable();
              rewardList_.addAll(other.rewardList_);
            }
            onChanged();
          }
        } else {
          if (!other.rewardList_.isEmpty()) {
            if (rewardListBuilder_.isEmpty()) {
              rewardListBuilder_.dispose();
              rewardListBuilder_ = null;
              rewardList_ = other.rewardList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rewardListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRewardListFieldBuilder() : null;
            } else {
              rewardListBuilder_.addAllMessages(other.rewardList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.ItemBagDB.DB_BlindBoxReward parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.ItemBagDB.DB_BlindBoxReward) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<protocol.Bag.BlindBoxReward> rewardList_ =
        java.util.Collections.emptyList();
      private void ensureRewardListIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rewardList_ = new java.util.ArrayList<protocol.Bag.BlindBoxReward>(rewardList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Bag.BlindBoxReward, protocol.Bag.BlindBoxReward.Builder, protocol.Bag.BlindBoxRewardOrBuilder> rewardListBuilder_;

      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public java.util.List<protocol.Bag.BlindBoxReward> getRewardListList() {
        if (rewardListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rewardList_);
        } else {
          return rewardListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public int getRewardListCount() {
        if (rewardListBuilder_ == null) {
          return rewardList_.size();
        } else {
          return rewardListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public protocol.Bag.BlindBoxReward getRewardList(int index) {
        if (rewardListBuilder_ == null) {
          return rewardList_.get(index);
        } else {
          return rewardListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder setRewardList(
          int index, protocol.Bag.BlindBoxReward value) {
        if (rewardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardListIsMutable();
          rewardList_.set(index, value);
          onChanged();
        } else {
          rewardListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder setRewardList(
          int index, protocol.Bag.BlindBoxReward.Builder builderForValue) {
        if (rewardListBuilder_ == null) {
          ensureRewardListIsMutable();
          rewardList_.set(index, builderForValue.build());
          onChanged();
        } else {
          rewardListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder addRewardList(protocol.Bag.BlindBoxReward value) {
        if (rewardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardListIsMutable();
          rewardList_.add(value);
          onChanged();
        } else {
          rewardListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder addRewardList(
          int index, protocol.Bag.BlindBoxReward value) {
        if (rewardListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRewardListIsMutable();
          rewardList_.add(index, value);
          onChanged();
        } else {
          rewardListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder addRewardList(
          protocol.Bag.BlindBoxReward.Builder builderForValue) {
        if (rewardListBuilder_ == null) {
          ensureRewardListIsMutable();
          rewardList_.add(builderForValue.build());
          onChanged();
        } else {
          rewardListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder addRewardList(
          int index, protocol.Bag.BlindBoxReward.Builder builderForValue) {
        if (rewardListBuilder_ == null) {
          ensureRewardListIsMutable();
          rewardList_.add(index, builderForValue.build());
          onChanged();
        } else {
          rewardListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder addAllRewardList(
          java.lang.Iterable<? extends protocol.Bag.BlindBoxReward> values) {
        if (rewardListBuilder_ == null) {
          ensureRewardListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rewardList_);
          onChanged();
        } else {
          rewardListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder clearRewardList() {
        if (rewardListBuilder_ == null) {
          rewardList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rewardListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public Builder removeRewardList(int index) {
        if (rewardListBuilder_ == null) {
          ensureRewardListIsMutable();
          rewardList_.remove(index);
          onChanged();
        } else {
          rewardListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public protocol.Bag.BlindBoxReward.Builder getRewardListBuilder(
          int index) {
        return getRewardListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public protocol.Bag.BlindBoxRewardOrBuilder getRewardListOrBuilder(
          int index) {
        if (rewardListBuilder_ == null) {
          return rewardList_.get(index);  } else {
          return rewardListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public java.util.List<? extends protocol.Bag.BlindBoxRewardOrBuilder> 
           getRewardListOrBuilderList() {
        if (rewardListBuilder_ != null) {
          return rewardListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rewardList_);
        }
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public protocol.Bag.BlindBoxReward.Builder addRewardListBuilder() {
        return getRewardListFieldBuilder().addBuilder(
            protocol.Bag.BlindBoxReward.getDefaultInstance());
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public protocol.Bag.BlindBoxReward.Builder addRewardListBuilder(
          int index) {
        return getRewardListFieldBuilder().addBuilder(
            index, protocol.Bag.BlindBoxReward.getDefaultInstance());
      }
      /**
       * <code>repeated .BlindBoxReward rewardList = 1;</code>
       */
      public java.util.List<protocol.Bag.BlindBoxReward.Builder> 
           getRewardListBuilderList() {
        return getRewardListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          protocol.Bag.BlindBoxReward, protocol.Bag.BlindBoxReward.Builder, protocol.Bag.BlindBoxRewardOrBuilder> 
          getRewardListFieldBuilder() {
        if (rewardListBuilder_ == null) {
          rewardListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              protocol.Bag.BlindBoxReward, protocol.Bag.BlindBoxReward.Builder, protocol.Bag.BlindBoxRewardOrBuilder>(
                  rewardList_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rewardList_ = null;
        }
        return rewardListBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_BlindBoxReward)
    }

    // @@protoc_insertion_point(class_scope:DB_BlindBoxReward)
    private static final protocol.ItemBagDB.DB_BlindBoxReward DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.ItemBagDB.DB_BlindBoxReward();
    }

    public static protocol.ItemBagDB.DB_BlindBoxReward getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_BlindBoxReward>
        PARSER = new com.google.protobuf.AbstractParser<DB_BlindBoxReward>() {
      public DB_BlindBoxReward parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_BlindBoxReward(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_BlindBoxReward> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_BlindBoxReward> getParserForType() {
      return PARSER;
    }

    public protocol.ItemBagDB.DB_BlindBoxReward getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_ItemsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_ItemsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_ItemUseCountEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_ItemUseCountEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_ItemDailyUseCountEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_ItemDailyUseCountEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_BlindBoxesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_BlindBoxesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_BlindBoxReward_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_BlindBoxReward_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017ItemBagDB.proto\032\tBag.proto\"\364\004\n\nDB_Item" +
      "Bag\022\024\n\014usedCapacity\030\001 \001(\003\022\030\n\020bagCapacity" +
      "Limit\030\002 \001(\003\022%\n\005items\030\003 \003(\0132\026.DB_ItemBag." +
      "ItemsEntry\0223\n\014itemUseCount\030\004 \003(\0132\035.DB_It" +
      "emBag.ItemUseCountEntry\022=\n\021itemDailyUseC" +
      "ount\030\005 \003(\0132\".DB_ItemBag.ItemDailyUseCoun" +
      "tEntry\022/\n\nblindBoxes\030\006 \003(\0132\033.DB_ItemBag." +
      "BlindBoxesEntry\022G\n\026weeklyLimitAlreadyGai" +
      "n\030\007 \003(\0132\'.DB_ItemBag.WeeklyLimitAlreadyG" +
      "ainEntry\032,\n\nItemsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005v",
      "alue\030\002 \001(\003:\0028\001\0323\n\021ItemUseCountEntry\022\013\n\003k" +
      "ey\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\0328\n\026ItemDaily" +
      "UseCountEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(" +
      "\005:\0028\001\032E\n\017BlindBoxesEntry\022\013\n\003key\030\001 \001(\005\022!\n" +
      "\005value\030\002 \001(\0132\022.DB_BlindBoxReward:\0028\001\032=\n\033" +
      "WeeklyLimitAlreadyGainEntry\022\013\n\003key\030\001 \001(\005" +
      "\022\r\n\005value\030\002 \001(\005:\0028\001\"8\n\021DB_BlindBoxReward" +
      "\022#\n\nrewardList\030\001 \003(\0132\017.BlindBoxRewardB\033\n" +
      "\010protocol\252\002\016ETHotfix.Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.Bag.getDescriptor(),
        }, assigner);
    internal_static_DB_ItemBag_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DB_ItemBag_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_descriptor,
        new java.lang.String[] { "UsedCapacity", "BagCapacityLimit", "Items", "ItemUseCount", "ItemDailyUseCount", "BlindBoxes", "WeeklyLimitAlreadyGain", });
    internal_static_DB_ItemBag_ItemsEntry_descriptor =
      internal_static_DB_ItemBag_descriptor.getNestedTypes().get(0);
    internal_static_DB_ItemBag_ItemsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_ItemsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ItemBag_ItemUseCountEntry_descriptor =
      internal_static_DB_ItemBag_descriptor.getNestedTypes().get(1);
    internal_static_DB_ItemBag_ItemUseCountEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_ItemUseCountEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ItemBag_ItemDailyUseCountEntry_descriptor =
      internal_static_DB_ItemBag_descriptor.getNestedTypes().get(2);
    internal_static_DB_ItemBag_ItemDailyUseCountEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_ItemDailyUseCountEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ItemBag_BlindBoxesEntry_descriptor =
      internal_static_DB_ItemBag_descriptor.getNestedTypes().get(3);
    internal_static_DB_ItemBag_BlindBoxesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_BlindBoxesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_descriptor =
      internal_static_DB_ItemBag_descriptor.getNestedTypes().get(4);
    internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_ItemBag_WeeklyLimitAlreadyGainEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_BlindBoxReward_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_DB_BlindBoxReward_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_BlindBoxReward_descriptor,
        new java.lang.String[] { "RewardList", });
    protocol.Bag.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
