// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RedPointIdEnum.proto

package protocol;

public final class RedPointIdEnum {
  private RedPointIdEnum() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code RedPointId}
   */
  public enum RedPointId
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RP_NULL = 0;</code>
     */
    RP_NULL(0),
    /**
     * <pre>
     * 
     * </pre>
     *
     * <code>RP_CROSSARENA = 1;</code>
     */
    RP_CROSSARENA(1),
    /**
     * <pre>
     *擂台赛组队红点 
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam = 101;</code>
     */
    RP_CROSSARENA_CPTeam(101),
    /**
     * <pre>
     *擂台赛组队新的邀请 【leaf】
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam_NewInvite_LEAF = 1101;</code>
     */
    RP_CROSSARENA_CPTeam_NewInvite_LEAF(1101),
    /**
     * <pre>
     *擂台赛组队新的申请 【leaf】
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam_NewJoin_LEAF = 2101;</code>
     */
    RP_CROSSARENA_CPTeam_NewJoin_LEAF(2101),
    /**
     * <pre>
     *主界面荣誉墙红点 【leaf】
     * </pre>
     *
     * <code>RP_HONORWALL = 2;</code>
     */
    RP_HONORWALL(2),
    /**
     * <pre>
     *图鉴 
     * </pre>
     *
     * <code>ALBUM = 3;</code>
     */
    ALBUM(3),
    /**
     * <pre>
     *宠物图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_PET = 103;</code>
     */
    ALBUM_PET(103),
    /**
     * <pre>
     *神器图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_ARTIFACT = 203;</code>
     */
    ALBUM_ARTIFACT(203),
    /**
     * <pre>
     *链接图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_CHAIN = 303;</code>
     */
    ALBUM_CHAIN(303),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RP_NULL = 0;</code>
     */
    public static final int RP_NULL_VALUE = 0;
    /**
     * <pre>
     * 
     * </pre>
     *
     * <code>RP_CROSSARENA = 1;</code>
     */
    public static final int RP_CROSSARENA_VALUE = 1;
    /**
     * <pre>
     *擂台赛组队红点 
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam = 101;</code>
     */
    public static final int RP_CROSSARENA_CPTeam_VALUE = 101;
    /**
     * <pre>
     *擂台赛组队新的邀请 【leaf】
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam_NewInvite_LEAF = 1101;</code>
     */
    public static final int RP_CROSSARENA_CPTeam_NewInvite_LEAF_VALUE = 1101;
    /**
     * <pre>
     *擂台赛组队新的申请 【leaf】
     * </pre>
     *
     * <code>RP_CROSSARENA_CPTeam_NewJoin_LEAF = 2101;</code>
     */
    public static final int RP_CROSSARENA_CPTeam_NewJoin_LEAF_VALUE = 2101;
    /**
     * <pre>
     *主界面荣誉墙红点 【leaf】
     * </pre>
     *
     * <code>RP_HONORWALL = 2;</code>
     */
    public static final int RP_HONORWALL_VALUE = 2;
    /**
     * <pre>
     *图鉴 
     * </pre>
     *
     * <code>ALBUM = 3;</code>
     */
    public static final int ALBUM_VALUE = 3;
    /**
     * <pre>
     *宠物图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_PET = 103;</code>
     */
    public static final int ALBUM_PET_VALUE = 103;
    /**
     * <pre>
     *神器图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_ARTIFACT = 203;</code>
     */
    public static final int ALBUM_ARTIFACT_VALUE = 203;
    /**
     * <pre>
     *链接图鉴 【leaf】
     * </pre>
     *
     * <code>ALBUM_CHAIN = 303;</code>
     */
    public static final int ALBUM_CHAIN_VALUE = 303;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RedPointId valueOf(int value) {
      return forNumber(value);
    }

    public static RedPointId forNumber(int value) {
      switch (value) {
        case 0: return RP_NULL;
        case 1: return RP_CROSSARENA;
        case 101: return RP_CROSSARENA_CPTeam;
        case 1101: return RP_CROSSARENA_CPTeam_NewInvite_LEAF;
        case 2101: return RP_CROSSARENA_CPTeam_NewJoin_LEAF;
        case 2: return RP_HONORWALL;
        case 3: return ALBUM;
        case 103: return ALBUM_PET;
        case 203: return ALBUM_ARTIFACT;
        case 303: return ALBUM_CHAIN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RedPointId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RedPointId> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RedPointId>() {
            public RedPointId findValueByNumber(int number) {
              return RedPointId.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protocol.RedPointIdEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final RedPointId[] VALUES = values();

    public static RedPointId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RedPointId(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:RedPointId)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024RedPointIdEnum.proto*\353\001\n\nRedPointId\022\013\n" +
      "\007RP_NULL\020\000\022\021\n\rRP_CROSSARENA\020\001\022\030\n\024RP_CROS" +
      "SARENA_CPTeam\020e\022(\n#RP_CROSSARENA_CPTeam_" +
      "NewInvite_LEAF\020\315\010\022&\n!RP_CROSSARENA_CPTea" +
      "m_NewJoin_LEAF\020\265\020\022\020\n\014RP_HONORWALL\020\002\022\t\n\005A" +
      "LBUM\020\003\022\r\n\tALBUM_PET\020g\022\023\n\016ALBUM_ARTIFACT\020" +
      "\313\001\022\020\n\013ALBUM_CHAIN\020\257\002B\033\n\010protocol\252\002\016ETHot" +
      "fix.Protob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
