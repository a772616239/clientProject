// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TeamsDB.proto

package protocol;

public final class TeamsDB {
  private TeamsDB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DB_TeamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_Teams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *解锁小队数量
     * </pre>
     *
     * <code>int32 unlockTeams = 1;</code>
     */
    int getUnlockTeams();

    /**
     * <pre>
     *解锁的宠物位置数量
     * </pre>
     *
     * <code>int32 unlockPosition = 2;</code>
     */
    int getUnlockPosition();

    /**
     * <code>int32 buyTeamCount = 3;</code>
     */
    int getBuyTeamCount();

    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */
    int getTeamsCount();
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */
    boolean containsTeams(
        int key);
    /**
     * Use {@link #getTeamsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team>
    getTeams();
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */
    java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team>
    getTeamsMap();
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    protocol.TeamsDB.DB_Team getTeamsOrDefault(
        int key,
        protocol.TeamsDB.DB_Team defaultValue);
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    protocol.TeamsDB.DB_Team getTeamsOrThrow(
        int key);

    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */
    int getNowUsedTeamCount();
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */
    boolean containsNowUsedTeam(
        int key);
    /**
     * Use {@link #getNowUsedTeamMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getNowUsedTeam();
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getNowUsedTeamMap();
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    int getNowUsedTeamOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    int getNowUsedTeamOrThrow(
        int key);
  }
  /**
   * Protobuf type {@code DB_Teams}
   */
  public  static final class DB_Teams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_Teams)
      DB_TeamsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_Teams.newBuilder() to construct.
    private DB_Teams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_Teams() {
      unlockTeams_ = 0;
      unlockPosition_ = 0;
      buyTeamCount_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_Teams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              unlockTeams_ = input.readInt32();
              break;
            }
            case 16: {

              unlockPosition_ = input.readInt32();
              break;
            }
            case 24: {

              buyTeamCount_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                teams_ = com.google.protobuf.MapField.newMapField(
                    TeamsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, protocol.TeamsDB.DB_Team>
              teams__ = input.readMessage(
                  TeamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              teams_.getMutableMap().put(
                  teams__.getKey(), teams__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                nowUsedTeam_ = com.google.protobuf.MapField.newMapField(
                    NowUsedTeamDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              nowUsedTeam__ = input.readMessage(
                  NowUsedTeamDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              nowUsedTeam_.getMutableMap().put(
                  nowUsedTeam__.getKey(), nowUsedTeam__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TeamsDB.internal_static_DB_Teams_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetTeams();
        case 5:
          return internalGetNowUsedTeam();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TeamsDB.internal_static_DB_Teams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TeamsDB.DB_Teams.class, protocol.TeamsDB.DB_Teams.Builder.class);
    }

    private int bitField0_;
    public static final int UNLOCKTEAMS_FIELD_NUMBER = 1;
    private int unlockTeams_;
    /**
     * <pre>
     *解锁小队数量
     * </pre>
     *
     * <code>int32 unlockTeams = 1;</code>
     */
    public int getUnlockTeams() {
      return unlockTeams_;
    }

    public static final int UNLOCKPOSITION_FIELD_NUMBER = 2;
    private int unlockPosition_;
    /**
     * <pre>
     *解锁的宠物位置数量
     * </pre>
     *
     * <code>int32 unlockPosition = 2;</code>
     */
    public int getUnlockPosition() {
      return unlockPosition_;
    }

    public static final int BUYTEAMCOUNT_FIELD_NUMBER = 3;
    private int buyTeamCount_;
    /**
     * <code>int32 buyTeamCount = 3;</code>
     */
    public int getBuyTeamCount() {
      return buyTeamCount_;
    }

    public static final int TEAMS_FIELD_NUMBER = 4;
    private static final class TeamsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, protocol.TeamsDB.DB_Team> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, protocol.TeamsDB.DB_Team>newDefaultInstance(
                  protocol.TeamsDB.internal_static_DB_Teams_TeamsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  protocol.TeamsDB.DB_Team.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, protocol.TeamsDB.DB_Team> teams_;
    private com.google.protobuf.MapField<java.lang.Integer, protocol.TeamsDB.DB_Team>
    internalGetTeams() {
      if (teams_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TeamsDefaultEntryHolder.defaultEntry);
      }
      return teams_;
    }

    public int getTeamsCount() {
      return internalGetTeams().getMap().size();
    }
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    public boolean containsTeams(
        int key) {
      
      return internalGetTeams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTeamsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> getTeams() {
      return getTeamsMap();
    }
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    public java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> getTeamsMap() {
      return internalGetTeams().getMap();
    }
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    public protocol.TeamsDB.DB_Team getTeamsOrDefault(
        int key,
        protocol.TeamsDB.DB_Team defaultValue) {
      
      java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> map =
          internalGetTeams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *&lt;TeamNum, &gt;
     * </pre>
     *
     * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
     */

    public protocol.TeamsDB.DB_Team getTeamsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> map =
          internalGetTeams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NOWUSEDTEAM_FIELD_NUMBER = 5;
    private static final class NowUsedTeamDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TeamsDB.internal_static_DB_Teams_NowUsedTeamEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> nowUsedTeam_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetNowUsedTeam() {
      if (nowUsedTeam_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NowUsedTeamDefaultEntryHolder.defaultEntry);
      }
      return nowUsedTeam_;
    }

    public int getNowUsedTeamCount() {
      return internalGetNowUsedTeam().getMap().size();
    }
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    public boolean containsNowUsedTeam(
        int key) {
      
      return internalGetNowUsedTeam().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNowUsedTeamMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getNowUsedTeam() {
      return getNowUsedTeamMap();
    }
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getNowUsedTeamMap() {
      return internalGetNowUsedTeam().getMap();
    }
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    public int getNowUsedTeamOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetNowUsedTeam().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
     */

    public int getNowUsedTeamOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetNowUsedTeam().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (unlockTeams_ != 0) {
        output.writeInt32(1, unlockTeams_);
      }
      if (unlockPosition_ != 0) {
        output.writeInt32(2, unlockPosition_);
      }
      if (buyTeamCount_ != 0) {
        output.writeInt32(3, buyTeamCount_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetTeams(),
          TeamsDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetNowUsedTeam(),
          NowUsedTeamDefaultEntryHolder.defaultEntry,
          5);
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (unlockTeams_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, unlockTeams_);
      }
      if (unlockPosition_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, unlockPosition_);
      }
      if (buyTeamCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, buyTeamCount_);
      }
      for (java.util.Map.Entry<java.lang.Integer, protocol.TeamsDB.DB_Team> entry
           : internalGetTeams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, protocol.TeamsDB.DB_Team>
        teams__ = TeamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, teams__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetNowUsedTeam().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        nowUsedTeam__ = NowUsedTeamDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, nowUsedTeam__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TeamsDB.DB_Teams)) {
        return super.equals(obj);
      }
      protocol.TeamsDB.DB_Teams other = (protocol.TeamsDB.DB_Teams) obj;

      boolean result = true;
      result = result && (getUnlockTeams()
          == other.getUnlockTeams());
      result = result && (getUnlockPosition()
          == other.getUnlockPosition());
      result = result && (getBuyTeamCount()
          == other.getBuyTeamCount());
      result = result && internalGetTeams().equals(
          other.internalGetTeams());
      result = result && internalGetNowUsedTeam().equals(
          other.internalGetNowUsedTeam());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UNLOCKTEAMS_FIELD_NUMBER;
      hash = (53 * hash) + getUnlockTeams();
      hash = (37 * hash) + UNLOCKPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getUnlockPosition();
      hash = (37 * hash) + BUYTEAMCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getBuyTeamCount();
      if (!internalGetTeams().getMap().isEmpty()) {
        hash = (37 * hash) + TEAMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTeams().hashCode();
      }
      if (!internalGetNowUsedTeam().getMap().isEmpty()) {
        hash = (37 * hash) + NOWUSEDTEAM_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNowUsedTeam().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TeamsDB.DB_Teams parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Teams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Teams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Teams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TeamsDB.DB_Teams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_Teams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_Teams)
        protocol.TeamsDB.DB_TeamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TeamsDB.internal_static_DB_Teams_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetTeams();
          case 5:
            return internalGetNowUsedTeam();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableTeams();
          case 5:
            return internalGetMutableNowUsedTeam();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TeamsDB.internal_static_DB_Teams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TeamsDB.DB_Teams.class, protocol.TeamsDB.DB_Teams.Builder.class);
      }

      // Construct using protocol.TeamsDB.DB_Teams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        unlockTeams_ = 0;

        unlockPosition_ = 0;

        buyTeamCount_ = 0;

        internalGetMutableTeams().clear();
        internalGetMutableNowUsedTeam().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TeamsDB.internal_static_DB_Teams_descriptor;
      }

      public protocol.TeamsDB.DB_Teams getDefaultInstanceForType() {
        return protocol.TeamsDB.DB_Teams.getDefaultInstance();
      }

      public protocol.TeamsDB.DB_Teams build() {
        protocol.TeamsDB.DB_Teams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TeamsDB.DB_Teams buildPartial() {
        protocol.TeamsDB.DB_Teams result = new protocol.TeamsDB.DB_Teams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.unlockTeams_ = unlockTeams_;
        result.unlockPosition_ = unlockPosition_;
        result.buyTeamCount_ = buyTeamCount_;
        result.teams_ = internalGetTeams();
        result.teams_.makeImmutable();
        result.nowUsedTeam_ = internalGetNowUsedTeam();
        result.nowUsedTeam_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TeamsDB.DB_Teams) {
          return mergeFrom((protocol.TeamsDB.DB_Teams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TeamsDB.DB_Teams other) {
        if (other == protocol.TeamsDB.DB_Teams.getDefaultInstance()) return this;
        if (other.getUnlockTeams() != 0) {
          setUnlockTeams(other.getUnlockTeams());
        }
        if (other.getUnlockPosition() != 0) {
          setUnlockPosition(other.getUnlockPosition());
        }
        if (other.getBuyTeamCount() != 0) {
          setBuyTeamCount(other.getBuyTeamCount());
        }
        internalGetMutableTeams().mergeFrom(
            other.internalGetTeams());
        internalGetMutableNowUsedTeam().mergeFrom(
            other.internalGetNowUsedTeam());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TeamsDB.DB_Teams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TeamsDB.DB_Teams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int unlockTeams_ ;
      /**
       * <pre>
       *解锁小队数量
       * </pre>
       *
       * <code>int32 unlockTeams = 1;</code>
       */
      public int getUnlockTeams() {
        return unlockTeams_;
      }
      /**
       * <pre>
       *解锁小队数量
       * </pre>
       *
       * <code>int32 unlockTeams = 1;</code>
       */
      public Builder setUnlockTeams(int value) {
        
        unlockTeams_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *解锁小队数量
       * </pre>
       *
       * <code>int32 unlockTeams = 1;</code>
       */
      public Builder clearUnlockTeams() {
        
        unlockTeams_ = 0;
        onChanged();
        return this;
      }

      private int unlockPosition_ ;
      /**
       * <pre>
       *解锁的宠物位置数量
       * </pre>
       *
       * <code>int32 unlockPosition = 2;</code>
       */
      public int getUnlockPosition() {
        return unlockPosition_;
      }
      /**
       * <pre>
       *解锁的宠物位置数量
       * </pre>
       *
       * <code>int32 unlockPosition = 2;</code>
       */
      public Builder setUnlockPosition(int value) {
        
        unlockPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *解锁的宠物位置数量
       * </pre>
       *
       * <code>int32 unlockPosition = 2;</code>
       */
      public Builder clearUnlockPosition() {
        
        unlockPosition_ = 0;
        onChanged();
        return this;
      }

      private int buyTeamCount_ ;
      /**
       * <code>int32 buyTeamCount = 3;</code>
       */
      public int getBuyTeamCount() {
        return buyTeamCount_;
      }
      /**
       * <code>int32 buyTeamCount = 3;</code>
       */
      public Builder setBuyTeamCount(int value) {
        
        buyTeamCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 buyTeamCount = 3;</code>
       */
      public Builder clearBuyTeamCount() {
        
        buyTeamCount_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, protocol.TeamsDB.DB_Team> teams_;
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TeamsDB.DB_Team>
      internalGetTeams() {
        if (teams_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TeamsDefaultEntryHolder.defaultEntry);
        }
        return teams_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, protocol.TeamsDB.DB_Team>
      internalGetMutableTeams() {
        onChanged();;
        if (teams_ == null) {
          teams_ = com.google.protobuf.MapField.newMapField(
              TeamsDefaultEntryHolder.defaultEntry);
        }
        if (!teams_.isMutable()) {
          teams_ = teams_.copy();
        }
        return teams_;
      }

      public int getTeamsCount() {
        return internalGetTeams().getMap().size();
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public boolean containsTeams(
          int key) {
        
        return internalGetTeams().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTeamsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> getTeams() {
        return getTeamsMap();
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> getTeamsMap() {
        return internalGetTeams().getMap();
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public protocol.TeamsDB.DB_Team getTeamsOrDefault(
          int key,
          protocol.TeamsDB.DB_Team defaultValue) {
        
        java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> map =
            internalGetTeams().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public protocol.TeamsDB.DB_Team getTeamsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> map =
            internalGetTeams().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTeams() {
        internalGetMutableTeams().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public Builder removeTeams(
          int key) {
        
        internalGetMutableTeams().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team>
      getMutableTeams() {
        return internalGetMutableTeams().getMutableMap();
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */
      public Builder putTeams(
          int key,
          protocol.TeamsDB.DB_Team value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableTeams().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *&lt;TeamNum, &gt;
       * </pre>
       *
       * <code>map&lt;int32, .DB_Team&gt; teams = 4;</code>
       */

      public Builder putAllTeams(
          java.util.Map<java.lang.Integer, protocol.TeamsDB.DB_Team> values) {
        internalGetMutableTeams().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> nowUsedTeam_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetNowUsedTeam() {
        if (nowUsedTeam_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NowUsedTeamDefaultEntryHolder.defaultEntry);
        }
        return nowUsedTeam_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableNowUsedTeam() {
        onChanged();;
        if (nowUsedTeam_ == null) {
          nowUsedTeam_ = com.google.protobuf.MapField.newMapField(
              NowUsedTeamDefaultEntryHolder.defaultEntry);
        }
        if (!nowUsedTeam_.isMutable()) {
          nowUsedTeam_ = nowUsedTeam_.copy();
        }
        return nowUsedTeam_;
      }

      public int getNowUsedTeamCount() {
        return internalGetNowUsedTeam().getMap().size();
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public boolean containsNowUsedTeam(
          int key) {
        
        return internalGetNowUsedTeam().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNowUsedTeamMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getNowUsedTeam() {
        return getNowUsedTeamMap();
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getNowUsedTeamMap() {
        return internalGetNowUsedTeam().getMap();
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public int getNowUsedTeamOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetNowUsedTeam().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public int getNowUsedTeamOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetNowUsedTeam().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNowUsedTeam() {
        internalGetMutableNowUsedTeam().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public Builder removeNowUsedTeam(
          int key) {
        
        internalGetMutableNowUsedTeam().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableNowUsedTeam() {
        return internalGetMutableNowUsedTeam().getMutableMap();
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */
      public Builder putNowUsedTeam(
          int key,
          int value) {
        
        
        internalGetMutableNowUsedTeam().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *当前使用小队，&lt;TeamTypeNum,TeamNum&gt;
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; nowUsedTeam = 5;</code>
       */

      public Builder putAllNowUsedTeam(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableNowUsedTeam().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_Teams)
    }

    // @@protoc_insertion_point(class_scope:DB_Teams)
    private static final protocol.TeamsDB.DB_Teams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TeamsDB.DB_Teams();
    }

    public static protocol.TeamsDB.DB_Teams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_Teams>
        PARSER = new com.google.protobuf.AbstractParser<DB_Teams>() {
      public DB_Teams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_Teams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_Teams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_Teams> getParserForType() {
      return PARSER;
    }

    public protocol.TeamsDB.DB_Teams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DB_TeamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DB_Team)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *小队编号
     * </pre>
     *
     * <code>.TeamNumEnum teamNum = 1;</code>
     */
    int getTeamNumValue();
    /**
     * <pre>
     *小队编号
     * </pre>
     *
     * <code>.TeamNumEnum teamNum = 1;</code>
     */
    protocol.PrepareWar.TeamNumEnum getTeamNum();

    /**
     * <pre>
     *小队名
     * </pre>
     *
     * <code>string teamName = 2;</code>
     */
    java.lang.String getTeamName();
    /**
     * <pre>
     *小队名
     * </pre>
     *
     * <code>string teamName = 2;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */
    int getLinkPetCount();
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */
    boolean containsLinkPet(
        int key);
    /**
     * Use {@link #getLinkPetMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.String>
    getLinkPet();
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.String>
    getLinkPetMap();
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    java.lang.String getLinkPetOrDefault(
        int key,
        java.lang.String defaultValue);
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    java.lang.String getLinkPetOrThrow(
        int key);

    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */
    int getLinkSkillCount();
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */
    boolean containsLinkSkill(
        int key);
    /**
     * Use {@link #getLinkSkillMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLinkSkill();
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLinkSkillMap();
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    int getLinkSkillOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    int getLinkSkillOrThrow(
        int key);

    /**
     * <pre>
     *矿区小队使用,上锁后不能编辑
     * </pre>
     *
     * <code>bool isLock = 5;</code>
     */
    boolean getIsLock();
  }
  /**
   * Protobuf type {@code DB_Team}
   */
  public  static final class DB_Team extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DB_Team)
      DB_TeamOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DB_Team.newBuilder() to construct.
    private DB_Team(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DB_Team() {
      teamNum_ = 0;
      teamName_ = "";
      isLock_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DB_Team(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              teamNum_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              teamName_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                linkPet_ = com.google.protobuf.MapField.newMapField(
                    LinkPetDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
              linkPet__ = input.readMessage(
                  LinkPetDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              linkPet_.getMutableMap().put(
                  linkPet__.getKey(), linkPet__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                linkSkill_ = com.google.protobuf.MapField.newMapField(
                    LinkSkillDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              linkSkill__ = input.readMessage(
                  LinkSkillDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              linkSkill_.getMutableMap().put(
                  linkSkill__.getKey(), linkSkill__.getValue());
              break;
            }
            case 40: {

              isLock_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return protocol.TeamsDB.internal_static_DB_Team_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetLinkPet();
        case 4:
          return internalGetLinkSkill();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return protocol.TeamsDB.internal_static_DB_Team_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              protocol.TeamsDB.DB_Team.class, protocol.TeamsDB.DB_Team.Builder.class);
    }

    private int bitField0_;
    public static final int TEAMNUM_FIELD_NUMBER = 1;
    private int teamNum_;
    /**
     * <pre>
     *小队编号
     * </pre>
     *
     * <code>.TeamNumEnum teamNum = 1;</code>
     */
    public int getTeamNumValue() {
      return teamNum_;
    }
    /**
     * <pre>
     *小队编号
     * </pre>
     *
     * <code>.TeamNumEnum teamNum = 1;</code>
     */
    public protocol.PrepareWar.TeamNumEnum getTeamNum() {
      protocol.PrepareWar.TeamNumEnum result = protocol.PrepareWar.TeamNumEnum.valueOf(teamNum_);
      return result == null ? protocol.PrepareWar.TeamNumEnum.UNRECOGNIZED : result;
    }

    public static final int TEAMNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object teamName_;
    /**
     * <pre>
     *小队名
     * </pre>
     *
     * <code>string teamName = 2;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        teamName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *小队名
     * </pre>
     *
     * <code>string teamName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LINKPET_FIELD_NUMBER = 3;
    private static final class LinkPetDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.String>newDefaultInstance(
                  protocol.TeamsDB.internal_static_DB_Team_LinkPetEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.String> linkPet_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
    internalGetLinkPet() {
      if (linkPet_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LinkPetDefaultEntryHolder.defaultEntry);
      }
      return linkPet_;
    }

    public int getLinkPetCount() {
      return internalGetLinkPet().getMap().size();
    }
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    public boolean containsLinkPet(
        int key) {
      
      return internalGetLinkPet().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLinkPetMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.String> getLinkPet() {
      return getLinkPetMap();
    }
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.String> getLinkPetMap() {
      return internalGetLinkPet().getMap();
    }
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    public java.lang.String getLinkPetOrDefault(
        int key,
        java.lang.String defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetLinkPet().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *位置对应宠物
     * </pre>
     *
     * <code>map&lt;int32, string&gt; linkPet = 3;</code>
     */

    public java.lang.String getLinkPetOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.String> map =
          internalGetLinkPet().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LINKSKILL_FIELD_NUMBER = 4;
    private static final class LinkSkillDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  protocol.TeamsDB.internal_static_DB_Team_LinkSkillEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> linkSkill_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLinkSkill() {
      if (linkSkill_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LinkSkillDefaultEntryHolder.defaultEntry);
      }
      return linkSkill_;
    }

    public int getLinkSkillCount() {
      return internalGetLinkSkill().getMap().size();
    }
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    public boolean containsLinkSkill(
        int key) {
      
      return internalGetLinkSkill().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLinkSkillMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLinkSkill() {
      return getLinkSkillMap();
    }
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLinkSkillMap() {
      return internalGetLinkSkill().getMap();
    }
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    public int getLinkSkillOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLinkSkill().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     *位置对应的技能
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
     */

    public int getLinkSkillOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLinkSkill().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ISLOCK_FIELD_NUMBER = 5;
    private boolean isLock_;
    /**
     * <pre>
     *矿区小队使用,上锁后不能编辑
     * </pre>
     *
     * <code>bool isLock = 5;</code>
     */
    public boolean getIsLock() {
      return isLock_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (teamNum_ != protocol.PrepareWar.TeamNumEnum.TNE_Team_Null.getNumber()) {
        output.writeEnum(1, teamNum_);
      }
      if (!getTeamNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, teamName_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLinkPet(),
          LinkPetDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLinkSkill(),
          LinkSkillDefaultEntryHolder.defaultEntry,
          4);
      if (isLock_ != false) {
        output.writeBool(5, isLock_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (teamNum_ != protocol.PrepareWar.TeamNumEnum.TNE_Team_Null.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, teamNum_);
      }
      if (!getTeamNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, teamName_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.String> entry
           : internalGetLinkPet().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.String>
        linkPet__ = LinkPetDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, linkPet__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLinkSkill().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        linkSkill__ = LinkSkillDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, linkSkill__);
      }
      if (isLock_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isLock_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof protocol.TeamsDB.DB_Team)) {
        return super.equals(obj);
      }
      protocol.TeamsDB.DB_Team other = (protocol.TeamsDB.DB_Team) obj;

      boolean result = true;
      result = result && teamNum_ == other.teamNum_;
      result = result && getTeamName()
          .equals(other.getTeamName());
      result = result && internalGetLinkPet().equals(
          other.internalGetLinkPet());
      result = result && internalGetLinkSkill().equals(
          other.internalGetLinkSkill());
      result = result && (getIsLock()
          == other.getIsLock());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TEAMNUM_FIELD_NUMBER;
      hash = (53 * hash) + teamNum_;
      hash = (37 * hash) + TEAMNAME_FIELD_NUMBER;
      hash = (53 * hash) + getTeamName().hashCode();
      if (!internalGetLinkPet().getMap().isEmpty()) {
        hash = (37 * hash) + LINKPET_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLinkPet().hashCode();
      }
      if (!internalGetLinkSkill().getMap().isEmpty()) {
        hash = (37 * hash) + LINKSKILL_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLinkSkill().hashCode();
      }
      hash = (37 * hash) + ISLOCK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLock());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static protocol.TeamsDB.DB_Team parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Team parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Team parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static protocol.TeamsDB.DB_Team parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(protocol.TeamsDB.DB_Team prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DB_Team}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DB_Team)
        protocol.TeamsDB.DB_TeamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return protocol.TeamsDB.internal_static_DB_Team_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetLinkPet();
          case 4:
            return internalGetLinkSkill();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableLinkPet();
          case 4:
            return internalGetMutableLinkSkill();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return protocol.TeamsDB.internal_static_DB_Team_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                protocol.TeamsDB.DB_Team.class, protocol.TeamsDB.DB_Team.Builder.class);
      }

      // Construct using protocol.TeamsDB.DB_Team.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        teamNum_ = 0;

        teamName_ = "";

        internalGetMutableLinkPet().clear();
        internalGetMutableLinkSkill().clear();
        isLock_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return protocol.TeamsDB.internal_static_DB_Team_descriptor;
      }

      public protocol.TeamsDB.DB_Team getDefaultInstanceForType() {
        return protocol.TeamsDB.DB_Team.getDefaultInstance();
      }

      public protocol.TeamsDB.DB_Team build() {
        protocol.TeamsDB.DB_Team result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public protocol.TeamsDB.DB_Team buildPartial() {
        protocol.TeamsDB.DB_Team result = new protocol.TeamsDB.DB_Team(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.teamNum_ = teamNum_;
        result.teamName_ = teamName_;
        result.linkPet_ = internalGetLinkPet();
        result.linkPet_.makeImmutable();
        result.linkSkill_ = internalGetLinkSkill();
        result.linkSkill_.makeImmutable();
        result.isLock_ = isLock_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof protocol.TeamsDB.DB_Team) {
          return mergeFrom((protocol.TeamsDB.DB_Team)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(protocol.TeamsDB.DB_Team other) {
        if (other == protocol.TeamsDB.DB_Team.getDefaultInstance()) return this;
        if (other.teamNum_ != 0) {
          setTeamNumValue(other.getTeamNumValue());
        }
        if (!other.getTeamName().isEmpty()) {
          teamName_ = other.teamName_;
          onChanged();
        }
        internalGetMutableLinkPet().mergeFrom(
            other.internalGetLinkPet());
        internalGetMutableLinkSkill().mergeFrom(
            other.internalGetLinkSkill());
        if (other.getIsLock() != false) {
          setIsLock(other.getIsLock());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        protocol.TeamsDB.DB_Team parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (protocol.TeamsDB.DB_Team) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int teamNum_ = 0;
      /**
       * <pre>
       *小队编号
       * </pre>
       *
       * <code>.TeamNumEnum teamNum = 1;</code>
       */
      public int getTeamNumValue() {
        return teamNum_;
      }
      /**
       * <pre>
       *小队编号
       * </pre>
       *
       * <code>.TeamNumEnum teamNum = 1;</code>
       */
      public Builder setTeamNumValue(int value) {
        teamNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小队编号
       * </pre>
       *
       * <code>.TeamNumEnum teamNum = 1;</code>
       */
      public protocol.PrepareWar.TeamNumEnum getTeamNum() {
        protocol.PrepareWar.TeamNumEnum result = protocol.PrepareWar.TeamNumEnum.valueOf(teamNum_);
        return result == null ? protocol.PrepareWar.TeamNumEnum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       *小队编号
       * </pre>
       *
       * <code>.TeamNumEnum teamNum = 1;</code>
       */
      public Builder setTeamNum(protocol.PrepareWar.TeamNumEnum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        teamNum_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小队编号
       * </pre>
       *
       * <code>.TeamNumEnum teamNum = 1;</code>
       */
      public Builder clearTeamNum() {
        
        teamNum_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <pre>
       *小队名
       * </pre>
       *
       * <code>string teamName = 2;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          teamName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *小队名
       * </pre>
       *
       * <code>string teamName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *小队名
       * </pre>
       *
       * <code>string teamName = 2;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小队名
       * </pre>
       *
       * <code>string teamName = 2;</code>
       */
      public Builder clearTeamName() {
        
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *小队名
       * </pre>
       *
       * <code>string teamName = 2;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        teamName_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.String> linkPet_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetLinkPet() {
        if (linkPet_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LinkPetDefaultEntryHolder.defaultEntry);
        }
        return linkPet_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.String>
      internalGetMutableLinkPet() {
        onChanged();;
        if (linkPet_ == null) {
          linkPet_ = com.google.protobuf.MapField.newMapField(
              LinkPetDefaultEntryHolder.defaultEntry);
        }
        if (!linkPet_.isMutable()) {
          linkPet_ = linkPet_.copy();
        }
        return linkPet_;
      }

      public int getLinkPetCount() {
        return internalGetLinkPet().getMap().size();
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public boolean containsLinkPet(
          int key) {
        
        return internalGetLinkPet().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLinkPetMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String> getLinkPet() {
        return getLinkPetMap();
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.String> getLinkPetMap() {
        return internalGetLinkPet().getMap();
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public java.lang.String getLinkPetOrDefault(
          int key,
          java.lang.String defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetLinkPet().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public java.lang.String getLinkPetOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.String> map =
            internalGetLinkPet().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLinkPet() {
        internalGetMutableLinkPet().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public Builder removeLinkPet(
          int key) {
        
        internalGetMutableLinkPet().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.String>
      getMutableLinkPet() {
        return internalGetMutableLinkPet().getMutableMap();
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */
      public Builder putLinkPet(
          int key,
          java.lang.String value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLinkPet().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *位置对应宠物
       * </pre>
       *
       * <code>map&lt;int32, string&gt; linkPet = 3;</code>
       */

      public Builder putAllLinkPet(
          java.util.Map<java.lang.Integer, java.lang.String> values) {
        internalGetMutableLinkPet().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> linkSkill_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLinkSkill() {
        if (linkSkill_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LinkSkillDefaultEntryHolder.defaultEntry);
        }
        return linkSkill_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLinkSkill() {
        onChanged();;
        if (linkSkill_ == null) {
          linkSkill_ = com.google.protobuf.MapField.newMapField(
              LinkSkillDefaultEntryHolder.defaultEntry);
        }
        if (!linkSkill_.isMutable()) {
          linkSkill_ = linkSkill_.copy();
        }
        return linkSkill_;
      }

      public int getLinkSkillCount() {
        return internalGetLinkSkill().getMap().size();
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public boolean containsLinkSkill(
          int key) {
        
        return internalGetLinkSkill().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLinkSkillMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLinkSkill() {
        return getLinkSkillMap();
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLinkSkillMap() {
        return internalGetLinkSkill().getMap();
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public int getLinkSkillOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLinkSkill().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public int getLinkSkillOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLinkSkill().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLinkSkill() {
        internalGetMutableLinkSkill().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public Builder removeLinkSkill(
          int key) {
        
        internalGetMutableLinkSkill().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLinkSkill() {
        return internalGetMutableLinkSkill().getMutableMap();
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */
      public Builder putLinkSkill(
          int key,
          int value) {
        
        
        internalGetMutableLinkSkill().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       *位置对应的技能
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; linkSkill = 4;</code>
       */

      public Builder putAllLinkSkill(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLinkSkill().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean isLock_ ;
      /**
       * <pre>
       *矿区小队使用,上锁后不能编辑
       * </pre>
       *
       * <code>bool isLock = 5;</code>
       */
      public boolean getIsLock() {
        return isLock_;
      }
      /**
       * <pre>
       *矿区小队使用,上锁后不能编辑
       * </pre>
       *
       * <code>bool isLock = 5;</code>
       */
      public Builder setIsLock(boolean value) {
        
        isLock_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *矿区小队使用,上锁后不能编辑
       * </pre>
       *
       * <code>bool isLock = 5;</code>
       */
      public Builder clearIsLock() {
        
        isLock_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DB_Team)
    }

    // @@protoc_insertion_point(class_scope:DB_Team)
    private static final protocol.TeamsDB.DB_Team DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new protocol.TeamsDB.DB_Team();
    }

    public static protocol.TeamsDB.DB_Team getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DB_Team>
        PARSER = new com.google.protobuf.AbstractParser<DB_Team>() {
      public DB_Team parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DB_Team(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DB_Team> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DB_Team> getParserForType() {
      return PARSER;
    }

    public protocol.TeamsDB.DB_Team getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Teams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Teams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Teams_TeamsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Teams_TeamsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Teams_NowUsedTeamEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Teams_NowUsedTeamEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Team_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Team_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Team_LinkPetEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Team_LinkPetEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DB_Team_LinkSkillEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DB_Team_LinkSkillEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rTeamsDB.proto\032\020PrepareWar.proto\"\217\002\n\010DB" +
      "_Teams\022\023\n\013unlockTeams\030\001 \001(\005\022\026\n\016unlockPos" +
      "ition\030\002 \001(\005\022\024\n\014buyTeamCount\030\003 \001(\005\022#\n\005tea" +
      "ms\030\004 \003(\0132\024.DB_Teams.TeamsEntry\022/\n\013nowUse" +
      "dTeam\030\005 \003(\0132\032.DB_Teams.NowUsedTeamEntry\032" +
      "6\n\nTeamsEntry\022\013\n\003key\030\001 \001(\005\022\027\n\005value\030\002 \001(" +
      "\0132\010.DB_Team:\0028\001\0322\n\020NowUsedTeamEntry\022\013\n\003k" +
      "ey\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\200\002\n\007DB_Team\022" +
      "\035\n\007teamNum\030\001 \001(\0162\014.TeamNumEnum\022\020\n\010teamNa" +
      "me\030\002 \001(\t\022&\n\007linkPet\030\003 \003(\0132\025.DB_Team.Link",
      "PetEntry\022*\n\tlinkSkill\030\004 \003(\0132\027.DB_Team.Li" +
      "nkSkillEntry\022\016\n\006isLock\030\005 \001(\010\032.\n\014LinkPetE" +
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016" +
      "LinkSkillEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001" +
      "(\005:\0028\001B\033\n\010protocol\252\002\016ETHotfix.Protob\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          protocol.PrepareWar.getDescriptor(),
        }, assigner);
    internal_static_DB_Teams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DB_Teams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Teams_descriptor,
        new java.lang.String[] { "UnlockTeams", "UnlockPosition", "BuyTeamCount", "Teams", "NowUsedTeam", });
    internal_static_DB_Teams_TeamsEntry_descriptor =
      internal_static_DB_Teams_descriptor.getNestedTypes().get(0);
    internal_static_DB_Teams_TeamsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Teams_TeamsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_Teams_NowUsedTeamEntry_descriptor =
      internal_static_DB_Teams_descriptor.getNestedTypes().get(1);
    internal_static_DB_Teams_NowUsedTeamEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Teams_NowUsedTeamEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_Team_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_DB_Team_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Team_descriptor,
        new java.lang.String[] { "TeamNum", "TeamName", "LinkPet", "LinkSkill", "IsLock", });
    internal_static_DB_Team_LinkPetEntry_descriptor =
      internal_static_DB_Team_descriptor.getNestedTypes().get(0);
    internal_static_DB_Team_LinkPetEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Team_LinkPetEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_DB_Team_LinkSkillEntry_descriptor =
      internal_static_DB_Team_descriptor.getNestedTypes().get(1);
    internal_static_DB_Team_LinkSkillEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DB_Team_LinkSkillEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    protocol.PrepareWar.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
